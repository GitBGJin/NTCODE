<?xml version="1.0"?>
<doc>
    <assembly>
        <name>SmartEP.Core</name>
    </assembly>
    <members>
        <member name="T:SmartEP.Core.Enums.PollutantDataType">
            <summary>
            Copyright (c) 2013 , 江苏远大信息股份有限公司产品事业部
            MonitoringEnum.cs
            创建人：JiKe
            创建日期：2015-08-11
            维护人员：
            最新维护人员：刘晋
            最新维护日期：2017-06-01
            功能摘要：
            枚举映射类
            </summary>
            <summary>
            监测业务枚举类型
            </summary>
        </member>
        <member name="F:SmartEP.Core.Enums.PollutantDataType.RealTime">
            <summary>
            实时数据
            </summary>
        </member>
        <member name="F:SmartEP.Core.Enums.PollutantDataType.Min1">
            <summary>
            1分钟
            </summary>
        </member>
        <member name="F:SmartEP.Core.Enums.PollutantDataType.Min5">
            <summary>
            5分钟
            </summary>
        </member>
        <member name="F:SmartEP.Core.Enums.PollutantDataType.Min10">
            <summary>
            10分钟
            </summary>
        </member>
        <member name="F:SmartEP.Core.Enums.PollutantDataType.Min30">
            <summary>
            30分钟
            </summary>
        </member>
        <member name="F:SmartEP.Core.Enums.PollutantDataType.Min60">
            <summary>
            原始60分钟
            </summary>
        </member>
        <member name="F:SmartEP.Core.Enums.PollutantDataType.OriDay">
            <summary>
            原始日数据
            </summary>
        </member>
        <member name="F:SmartEP.Core.Enums.PollutantDataType.OriMonth">
            <summary>
            原始月数据
            </summary>
        </member>
        <member name="F:SmartEP.Core.Enums.PollutantDataType.Hour">
            <summary>
            审核小时数据
            </summary>
        </member>
        <member name="F:SmartEP.Core.Enums.PollutantDataType.Day">
            <summary>
            日数据
            </summary>
        </member>
        <member name="F:SmartEP.Core.Enums.PollutantDataType.Week">
            <summary>
            周数据
            </summary>
        </member>
        <member name="F:SmartEP.Core.Enums.PollutantDataType.Month">
            <summary>
            月数据
            </summary>
        </member>
        <member name="F:SmartEP.Core.Enums.PollutantDataType.Season">
            <summary>
            季数据
            </summary>
        </member>
        <member name="F:SmartEP.Core.Enums.PollutantDataType.Year">
            <summary>
            年数据
            </summary>
        </member>
        <member name="F:SmartEP.Core.Enums.PollutantDataType.InstrumentData60">
            <summary>
            仪器状态数据
            </summary>
        </member>
        <member name="T:SmartEP.Core.Enums.ApplicationType">
            <summary>
            应用类型（空气、地表水、噪声）
            </summary>
        </member>
        <member name="F:SmartEP.Core.Enums.ApplicationType.Air">
            <summary>
            空气
            </summary>
        </member>
        <member name="F:SmartEP.Core.Enums.ApplicationType.Water">
            <summary>
            地表水
            </summary>
        </member>
        <member name="F:SmartEP.Core.Enums.ApplicationType.Noise">
            <summary>
            噪声
            </summary>
        </member>
        <member name="F:SmartEP.Core.Enums.ApplicationType.BlueAlga">
            <summary>
            蓝藻
            </summary>
        </member>
        <member name="T:SmartEP.Core.Enums.ApplicationValue">
            <summary>
            应用程序数值
            </summary>
        </member>
        <member name="F:SmartEP.Core.Enums.ApplicationValue.Air">
            <summary>
            空气
            </summary>
        </member>
        <member name="F:SmartEP.Core.Enums.ApplicationValue.Water">
            <summary>
            地表水
            </summary>
        </member>
        <member name="F:SmartEP.Core.Enums.ApplicationValue.Noise">
            <summary>
            噪声
            </summary>
        </member>
        <member name="F:SmartEP.Core.Enums.ApplicationValue.VOCs">
            <summary>
            VOCs
            </summary>
        </member>
        <member name="F:SmartEP.Core.Enums.ApplicationValue.CEMS">
            <summary>
            烟气
            </summary>
        </member>
        <member name="F:SmartEP.Core.Enums.ApplicationValue.WasteWater">
            <summary>
            废水
            </summary>
        </member>
        <member name="T:SmartEP.Core.Enums.PollutantTypeValue">
            <summary>
            污染物类型数值
            </summary>
        </member>
        <member name="F:SmartEP.Core.Enums.PollutantTypeValue.Air">
            <summary>
            大气污染物
            </summary>
        </member>
        <member name="F:SmartEP.Core.Enums.PollutantTypeValue.Water">
            <summary>
            水污染物
            </summary>
        </member>
        <member name="F:SmartEP.Core.Enums.PollutantTypeValue.Noise">
            <summary>
            噪声污染物
            </summary>
        </member>
        <member name="T:SmartEP.Core.Enums.IAQIType">
            <summary>
            AQI分指数类型
            </summary>
        </member>
        <member name="F:SmartEP.Core.Enums.IAQIType.SO2_IAQI">
            <summary>
            SO2
            </summary>
        </member>
        <member name="F:SmartEP.Core.Enums.IAQIType.NO2_IAQI">
            <summary>
            NO2
            </summary>
        </member>
        <member name="F:SmartEP.Core.Enums.IAQIType.PM10_IAQI">
            <summary>
            PM10
            </summary>
        </member>
        <member name="F:SmartEP.Core.Enums.IAQIType.CO_IAQI">
            <summary>
            CO
            </summary>
        </member>
        <member name="F:SmartEP.Core.Enums.IAQIType.PM25_IAQI">
            <summary>
            PM25
            </summary>
        </member>
        <member name="F:SmartEP.Core.Enums.IAQIType.MaxOneHourO3_IAQI">
            <summary>
            O3 1小时
            </summary>
        </member>
        <member name="F:SmartEP.Core.Enums.IAQIType.Max8HourO3_IAQI">
            <summary>
            O3 8小时
            </summary>
        </member>
        <member name="F:SmartEP.Core.Enums.IAQIType.Recent24HoursPM10_IAQI">
            <summary>
            PM10 24小时滑动均值
            </summary>
        </member>
        <member name="F:SmartEP.Core.Enums.IAQIType.Recent24HoursPM25_IAQI">
            <summary>
            PM2.5 24小时滑动均值
            </summary>
        </member>
        <member name="F:SmartEP.Core.Enums.IAQIType.AQIValue">
            <summary>
            AQIValue
            </summary>
        </member>
        <member name="T:SmartEP.Core.Enums.OrmProviderMode">
            <summary>
            用于数据库ORM提供者
            </summary>
        </member>
        <member name="T:SmartEP.Core.Enums.SysLogMode">
            <summary>
            用于数据库ORM提供者
            </summary>
        </member>
        <member name="F:SmartEP.Core.Enums.SysLogMode.Info">
            <summary>
            正常日志
            </summary>
        </member>
        <member name="F:SmartEP.Core.Enums.SysLogMode.Warning">
            <summary>
            警告日志
            </summary>
        </member>
        <member name="F:SmartEP.Core.Enums.SysLogMode.Error">
            <summary>
            错误日志
            </summary>
        </member>
        <member name="T:SmartEP.Core.Enums.EnumMapping">
            <summary>
            Copyright (c) 2013 , 江苏远大信息股份有限公司产品事业部
            EnumMapping.cs
            创建人：JiKe
            创建日期：2015-08-11
            维护人员：
            最新维护人员：
            最新维护日期：
            功能摘要：
            枚举映射类
            </summary>
        </member>
        <member name="M:SmartEP.Core.Enums.EnumMapping.GetCachedClassName(SmartEP.Core.Enums.CachedMode)">
            <summary>
            缓存种类名称选择
            </summary>
            <param name="mode"></param>
            <returns></returns>
        </member>
        <member name="M:SmartEP.Core.Enums.EnumMapping.GetOrmProviderClassName(SmartEP.Core.Enums.OrmProviderMode)">
            <summary>
            ORM提供者种类选择
            </summary>
            <param name="mode"></param>
            <returns></returns>
        </member>
        <member name="M:SmartEP.Core.Enums.EnumMapping.GetApplicationValue(SmartEP.Core.Enums.ApplicationValue)">
            <summary>
            获取应用程序种类选择的值
            </summary>
            <param name="mode"></param>
            <returns></returns>
        </member>
        <member name="M:SmartEP.Core.Enums.EnumMapping.GetApplicationValue(SmartEP.Core.Enums.ApplicationType)">
            <summary>
            根据应用程序种类获取应用程序种类选择的值
            </summary>
            <param name="type">应用程序类型字典</param>
            <returns></returns>
        </member>
        <!-- 对于成员“M:SmartEP.Core.Enums.EnumMapping.GetPollutantTypeValue(SmartEP.Core.Enums.PollutantTypeValue)”忽略有格式错误的 XML 注释 -->
        <member name="M:SmartEP.Core.Enums.EnumMapping.GetIAQITypeColumn(SmartEP.Core.Enums.IAQIType)">
            <summary>
            取得AQI分指数数据库字段
            </summary>
            <param name="iAQIType"></param>
            <returns></returns>
        </member>
        <!-- 对于成员“M:SmartEP.Core.Enums.EnumMapping.ParseEnum``1(System.String,System.Boolean)”忽略有格式错误的 XML 注释 -->
        <member name="M:SmartEP.Core.Enums.EnumMapping.GetDesc(System.Object)">
            <summary>
            获取枚举类子项描述信息
            </summary>
            <param name="enumSubitem">枚举类子项</param>        
        </member>
        <member name="T:SmartEP.Core.Enums.CbxRsmType">
            <summary>
            SiteMap种类（0、测点；1、通道因子；2、用户；3、状态因子）
            </summary>
        </member>
        <member name="F:SmartEP.Core.Enums.CbxRsmType.Point">
            <summary>
            测点
            </summary>
        </member>
        <member name="F:SmartEP.Core.Enums.CbxRsmType.ChannelFactor">
            <summary>
            通道因子
            </summary>
        </member>
        <member name="F:SmartEP.Core.Enums.CbxRsmType.User">
            <summary>
            用户
            </summary>
        </member>
        <member name="F:SmartEP.Core.Enums.CbxRsmType.StateFactor">
            <summary>
            状态因子
            </summary>
        </member>
        <member name="T:SmartEP.Core.Enums.RsmPointMode">
            <summary>
            测点筛选类型
            </summary>
        </member>
        <member name="F:SmartEP.Core.Enums.RsmPointMode.Class">
            <summary>
            站点级别（国控、省控、市控、市控移动站）
            </summary>
        </member>
        <member name="F:SmartEP.Core.Enums.RsmPointMode.Region">
            <summary>
            站点区域
            </summary>
        </member>
        <member name="F:SmartEP.Core.Enums.RsmPointMode.Type">
            <summary>
            站点类型
            </summary>
        </member>
        <member name="F:SmartEP.Core.Enums.RsmPointMode.Business">
            <summary>
            运维商
            </summary>
        </member>
        <member name="F:SmartEP.Core.Enums.RsmPointMode.BlueAlga">
            <summary>
            蓝藻
            </summary>
        </member>
        <member name="F:SmartEP.Core.Enums.RsmPointMode.Property">
            <summary>
            属性
            </summary>
        </member>
        <member name="T:SmartEP.Core.Enums.CbxRsmReturnType">
            <summary>
            SiteMap返回值类型
            </summary>
        </member>
        <member name="F:SmartEP.Core.Enums.CbxRsmReturnType.Guid">
            <summary>
            Guid
            </summary>
        </member>
        <member name="F:SmartEP.Core.Enums.CbxRsmReturnType.ID">
            <summary>
            ID
            </summary>
        </member>
        <member name="F:SmartEP.Core.Enums.CbxRsmReturnType.Code">
            <summary>
            Code
            </summary>
        </member>
        <member name="F:SmartEP.Core.Enums.CbxRsmReturnType.Name">
            <summary>
            Name
            </summary>
        </member>
        <member name="F:SmartEP.Core.Enums.CbxRsmReturnType.ID_Guid_Name">
            <summary>
            ID:Guid:Name
            </summary>
        </member>
        <member name="F:SmartEP.Core.Enums.CbxRsmReturnType.Code_Guid_Name">
            <summary>
            Code:Guid:Name
            </summary>
        </member>
        <member name="T:SmartEP.Core.Generic.DictionaryExtension`2">
            <summary>
            Dictionary泛型类
            </summary>
            <typeparam name="T">占位符(下同)</typeparam>
        </member>
        <member name="M:SmartEP.Core.Generic.DictionaryExtension`2.Add(`0,`1)">
            <summary>
            追加元素
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:SmartEP.Core.Generic.DictionaryExtension`2.CompareTo(System.Object)">
            <summary>
            比较对象
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="P:SmartEP.Core.Generic.DictionaryExtension`2.IsEmpty">
            <summary>
            是否为空
            </summary>
        </member>
        <member name="P:SmartEP.Core.Generic.DictionaryExtension`2.FixedSize">
            <summary>
            固定大小属性
            </summary>
        </member>
        <member name="P:SmartEP.Core.Generic.DictionaryExtension`2.IsFull">
            <summary>
            是否已满
            </summary>
        </member>
        <member name="P:SmartEP.Core.Generic.DictionaryExtension`2.Version">
            <summary>
            版本
            </summary>
        </member>
        <member name="P:SmartEP.Core.Generic.DictionaryExtension`2.Author">
            <summary>
            作者
            </summary>
        </member>
        <member name="P:SmartEP.Core.Generic.DictionaryExtension`2.IsReadOnly">
            <summary>
            是否只读
            </summary>
        </member>
        <member name="P:SmartEP.Core.Generic.IGenericExtension`1.FixedSize">
            <summary>
            固定大小
            </summary>
        </member>
        <member name="P:SmartEP.Core.Generic.IGenericExtension`1.IsEmpty">
            <summary>
            集合类是否为空
            </summary>
        </member>
        <member name="P:SmartEP.Core.Generic.IGenericExtension`1.IsFull">
            <summary>
            集合类是否已满
            </summary>
        </member>
        <member name="P:SmartEP.Core.Generic.IGenericExtension`1.Version">
            <summary>
            版本
            </summary>
        </member>
        <member name="P:SmartEP.Core.Generic.IGenericExtension`1.Author">
            <summary>
            作者
            </summary>
        </member>
        <member name="M:SmartEP.Core.Generic.IVisitor`1.Visit(`0)">
            <summary>
            访问指定的对象
            </summary>
        </member>
        <member name="P:SmartEP.Core.Generic.IVisitor`1.HasDone">
            <summary>
            是否已运行
            </summary>
        </member>
        <member name="T:SmartEP.Core.Generic.LinkedListExtension`1">
            <summary>
            LinkedList泛型类
            </summary>
            <typeparam name="T">占位符(下同)</typeparam>
        </member>
        <member name="M:SmartEP.Core.Generic.LinkedListExtension`1.Accept(SmartEP.Core.Generic.IVisitor{`0})">
            <summary>
            接受指定的访问方式(访问者模式)
            </summary>
            <param name="visitor"></param>
        </member>
        <member name="M:SmartEP.Core.Generic.LinkedListExtension`1.CompareTo(System.Object)">
            <summary>
            比较对象
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="P:SmartEP.Core.Generic.LinkedListExtension`1.IsEmpty">
            <summary>
            是否为空
            </summary>
        </member>
        <member name="P:SmartEP.Core.Generic.LinkedListExtension`1.FixedSize">
            <summary>
            固定大小属性
            </summary>
        </member>
        <member name="P:SmartEP.Core.Generic.LinkedListExtension`1.IsFull">
            <summary>
            是否已满
            </summary>
        </member>
        <member name="P:SmartEP.Core.Generic.LinkedListExtension`1.Version">
            <summary>
            版本
            </summary>
        </member>
        <member name="P:SmartEP.Core.Generic.LinkedListExtension`1.Author">
            <summary>
            作者
            </summary>
        </member>
        <member name="T:SmartEP.Core.Generic.ListExtension`1">
            <summary>
            列表泛型类
            </summary>
            <typeparam name="T">占位符(下同)</typeparam>
        </member>
        <member name="M:SmartEP.Core.Generic.ListExtension`1.Add(`0)">
            <summary>
            追加元素
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:SmartEP.Core.Generic.ListExtension`1.Accept(SmartEP.Core.Generic.IVisitor{`0})">
            <summary>
            接受指定的访问方式(访问者模式)
            </summary>
            <param name="visitor"></param>
        </member>
        <member name="M:SmartEP.Core.Generic.ListExtension`1.CompareTo(System.Object)">
            <summary>
            比较对象
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="P:SmartEP.Core.Generic.ListExtension`1.IsEmpty">
            <summary>
            是否为空
            </summary>
        </member>
        <member name="P:SmartEP.Core.Generic.ListExtension`1.FixedSize">
            <summary>
            固定大小属性
            </summary>
        </member>
        <member name="P:SmartEP.Core.Generic.ListExtension`1.IsFull">
            <summary>
            是否已满
            </summary>
        </member>
        <member name="P:SmartEP.Core.Generic.ListExtension`1.Version">
            <summary>
            版本
            </summary>
        </member>
        <member name="P:SmartEP.Core.Generic.ListExtension`1.Author">
            <summary>
            作者
            </summary>
        </member>
        <member name="T:SmartEP.Core.Generic.QueueExtension`1">
            <summary>
            队列泛型类
            </summary>
            <typeparam name="T">占位符(下同)</typeparam>
        </member>
        <member name="M:SmartEP.Core.Generic.QueueExtension`1.Accept(SmartEP.Core.Generic.IVisitor{`0})">
            <summary>
            接受指定的访问方式(访问者模式)
            </summary>
            <param name="visitor"></param>
        </member>
        <member name="M:SmartEP.Core.Generic.QueueExtension`1.Enqueue(`0)">
            <summary>
            追加元素
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:SmartEP.Core.Generic.QueueExtension`1.CompareTo(System.Object)">
            <summary>
            比较对象
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="P:SmartEP.Core.Generic.QueueExtension`1.SyncRoot">
            <summary>
            返回当前实例
            </summary>
        </member>
        <member name="P:SmartEP.Core.Generic.QueueExtension`1.IsEmpty">
            <summary>
            是否为空
            </summary>
        </member>
        <member name="P:SmartEP.Core.Generic.QueueExtension`1.FixedSize">
            <summary>
            固定大小属性
            </summary>
        </member>
        <member name="P:SmartEP.Core.Generic.QueueExtension`1.IsFull">
            <summary>
            当前队列是否已满
            </summary>
        </member>
        <member name="P:SmartEP.Core.Generic.QueueExtension`1.Version">
            <summary>
            版本
            </summary>
        </member>
        <member name="P:SmartEP.Core.Generic.QueueExtension`1.Author">
            <summary>
            作者
            </summary>
        </member>
        <member name="P:SmartEP.Core.Generic.QueueExtension`1.IsReadOnly">
            <summary>
            是否只读
            </summary>
        </member>
        <member name="T:SmartEP.Core.Generic.Singleton`1">
            <summary>
            Singleton泛型类
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:SmartEP.Core.Generic.Singleton`1.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:SmartEP.Core.Generic.Singleton`1.GetInstance">
            <summary>
            获取实例
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:SmartEP.Core.Generic.Singleton`1.SetInstance(`0)">
            <summary>
            设置实例
            </summary>
            <param name="value"></param>
        </member>
        <member name="T:SmartEP.Core.Generic.SortedListExtension`2">
            <summary>
            SortedList泛型类
            </summary>
            <typeparam name="T">占位符(下同)</typeparam>
        </member>
        <member name="M:SmartEP.Core.Generic.SortedListExtension`2.Add(`0,`1)">
            <summary>
            追加元素
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:SmartEP.Core.Generic.SortedListExtension`2.CompareTo(System.Object)">
            <summary>
            比较对象
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="P:SmartEP.Core.Generic.SortedListExtension`2.IsEmpty">
            <summary>
            是否为空
            </summary>
        </member>
        <member name="P:SmartEP.Core.Generic.SortedListExtension`2.FixedSize">
            <summary>
            固定大小属性
            </summary>
        </member>
        <member name="P:SmartEP.Core.Generic.SortedListExtension`2.IsFull">
            <summary>
            是否已满
            </summary>
        </member>
        <member name="P:SmartEP.Core.Generic.SortedListExtension`2.Version">
            <summary>
            版本
            </summary>
        </member>
        <member name="P:SmartEP.Core.Generic.SortedListExtension`2.Author">
            <summary>
            作者
            </summary>
        </member>
        <member name="P:SmartEP.Core.Generic.SortedListExtension`2.IsReadOnly">
            <summary>
            是否只读
            </summary>
        </member>
        <member name="T:SmartEP.Core.Generic.SumVisitor">
            <summary>
            累加数访问类
            </summary>
        </member>
        <member name="M:SmartEP.Core.Generic.SumVisitor.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:SmartEP.Core.Generic.SumVisitor.Visit(System.Int32)">
            <summary>
            访问指定的对象
            </summary>
        </member>
        <member name="P:SmartEP.Core.Generic.SumVisitor.HasDone">
            <summary>
            是否已运行
            </summary>
        </member>
        <member name="P:SmartEP.Core.Generic.SumVisitor.Sum">
            <summary>
            返加累加数
            </summary>
        </member>
        <!-- 对于成员“T:SmartEP.Core.Generic.CountVisitor`1”忽略有格式错误的 XML 注释 -->
        <member name="M:SmartEP.Core.Generic.CountVisitor`1.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:SmartEP.Core.Generic.CountVisitor`1.Visit(`0)">
            <summary>
            访问指定的对象
            </summary>
        </member>
        <member name="M:SmartEP.Core.Generic.CountVisitor`1.ResetCount">
            <summary>
            重设计数值
            </summary>
        </member>
        <member name="P:SmartEP.Core.Generic.CountVisitor`1.HasDone">
            <summary>
            是否已运行
            </summary>
        </member>
        <member name="P:SmartEP.Core.Generic.CountVisitor`1.Count">
            <summary>
            返回计数值
            </summary>
        </member>
        <member name="T:SmartEP.Core.Generic.FindingVisitor`1">
            <summary>
            查找指定对象访问类
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:SmartEP.Core.Generic.FindingVisitor`1.#ctor(`0)">
            <summary>
            构造函数
            </summary>
            <param name="searchobj"></param>
        </member>
        <member name="M:SmartEP.Core.Generic.FindingVisitor`1.Visit(`0)">
            <summary>
            访问指定的对象
            </summary>
        </member>
        <member name="P:SmartEP.Core.Generic.FindingVisitor`1.HasDone">
            <summary>
            是否已运行
            </summary>
        </member>
        <member name="P:SmartEP.Core.Generic.FindingVisitor`1.Found">
            <summary>
            是否发现要查换的对象
            </summary>
        </member>
        <member name="P:SmartEP.Core.Generic.FindingVisitor`1.SearchResult">
            <summary>
            返回查找到的对象
            </summary>
        </member>
        <member name="M:SmartEP.Core.Interfaces.BasePage.OnLoad(System.EventArgs)">
            <summary>
            保存操作日志（CRUD等操作）
            </summary>
            <param name="operationLog"></param>
        </member>
        <member name="M:SmartEP.Core.Interfaces.BasePage.Alert(System.String)">
            <summary>
            提示
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:SmartEP.Core.Interfaces.BasePage.RegisterScript(System.String)">
            <summary>
            执行前台脚本
            </summary>
            <param name="script"></param>
        </member>
        <member name="T:SmartEP.Core.Interfaces.BaseGenericRepository`2">
            <summary>
            
            </summary>
            <typeparam name="TEntity"></typeparam>
        </member>
        <!-- 对于成员“M:SmartEP.Core.Interfaces.IBaseGenericRepository`2.Add(`1)”忽略有格式错误的 XML 注释 -->
        <!-- 对于成员“M:SmartEP.Core.Interfaces.IBaseGenericRepository`2.BatchAdd(System.Collections.Generic.List{`1})”忽略有格式错误的 XML 注释 -->
        <member name="M:SmartEP.Core.Interfaces.IBaseGenericRepository`2.BatchDelete(System.Collections.Generic.List{`1})">
            <summary>   
            批量删除对象
             </summary>
        </member>
        <!-- 对于成员“M:SmartEP.Core.Interfaces.IBaseGenericRepository`2.BatchUpdate(System.Collections.Generic.List{`1})”忽略有格式错误的 XML 注释 -->
        <member name="M:SmartEP.Core.Interfaces.IBaseGenericRepository`2.Update(`1)">
             <summary>
            使用TEntity对象更新记录
             </summary>
             <param name="entity">待更新对象</param>
             <returns></returns>
        </member>
        <member name="M:SmartEP.Core.Interfaces.IBaseGenericRepository`2.Delete(`1)">
            <summary>
            批量删除对象
             </summary>
        </member>
        <member name="M:SmartEP.Core.Interfaces.IBaseGenericRepository`2.IsExist(System.String)">
            <summary>
            根据key主键判断记录是否存在
             </summary>
             <returns>记录数</returns>
        </member>
        <member name="M:SmartEP.Core.Interfaces.IBaseGenericRepository`2.Retrieve(System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}})">
            <summary>
            获取指定的记录对象
            </summary>
            <param name="predicate"></param>
            <returns></returns>
        </member>
        <!-- 对于成员“M:SmartEP.Core.Interfaces.IBaseGenericRepository`2.RetrieveAll”忽略有格式错误的 XML 注释 -->
        <member name="M:SmartEP.Core.Interfaces.IBaseGenericRepository`2.RetrieveAllCount">
            <summary>
            返回记录总数
             </summary>
             <returns>记录数</returns>
        </member>
        <member name="M:SmartEP.Core.Interfaces.BaseGenericRepository`2.Add(System.Object)">
            <summary>
            
            </summary>
            <param name="obj"></param>
        </member>
        <!-- 对于成员“M:SmartEP.Core.Interfaces.BaseGenericRepository`2.Add(`1)”忽略有格式错误的 XML 注释 -->
        <!-- 对于成员“M:SmartEP.Core.Interfaces.BaseGenericRepository`2.BatchAdd(System.Collections.Generic.List{`1})”忽略有格式错误的 XML 注释 -->
        <member name="M:SmartEP.Core.Interfaces.BaseGenericRepository`2.BatchDelete(System.Collections.Generic.List{`1})">
            <summary>
            批量删除对象
             </summary>
        </member>
        <member name="M:SmartEP.Core.Interfaces.BaseGenericRepository`2.BatchUpdate(System.Collections.Generic.List{`1})">
            <summary>
            批量更新对象
             </summary>
        </member>
        <member name="M:SmartEP.Core.Interfaces.BaseGenericRepository`2.Delete(System.Object)">
            <summary>
            
            </summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <!-- 对于成员“M:SmartEP.Core.Interfaces.BaseGenericRepository`2.Delete(`1)”忽略有格式错误的 XML 注释 -->
        <member name="M:SmartEP.Core.Interfaces.BaseGenericRepository`2.IsExist(System.String)">
            <summary>
            根据key主键判断记录是否存在
             </summary>
             <returns>记录数</returns>
        </member>
        <member name="M:SmartEP.Core.Interfaces.BaseGenericRepository`2.Retrieve(System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}})">
            <summary>
            根据lambda表达式要求，返回所有对象
            </summary>
            <param name="predicate"></param>
            <returns></returns>
        </member>
        <!-- 对于成员“M:SmartEP.Core.Interfaces.BaseGenericRepository`2.RetrieveAll”忽略有格式错误的 XML 注释 -->
        <member name="M:SmartEP.Core.Interfaces.BaseGenericRepository`2.RetrieveAllCount">
            <summary>
            返回记录总数
             </summary>
             <returns>记录数</returns>
        </member>
        <member name="M:SmartEP.Core.Interfaces.BaseGenericRepository`2.RetrieveCount(System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}})">
            <summary>
            根据lambda表达式要求，返回所有符合条件的对象的记录总数
            </summary>
            <param name="predicate"></param>
            <returns></returns>
        </member>
        <member name="M:SmartEP.Core.Interfaces.BaseGenericRepository`2.RetrieveFirstOrDefault(System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}})">
            <summary>
            根据lambda表达式要求，返回第一个对象
            </summary>
            <param name="predicate"></param>
            <returns></returns>
        </member>
        <member name="M:SmartEP.Core.Interfaces.BaseGenericRepository`2.Update">
            <summary>
            
            </summary>
        </member>
        <member name="M:SmartEP.Core.Interfaces.BaseGenericRepository`2.Update(System.Object)">
            <summary>
            
            </summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:SmartEP.Core.Interfaces.BaseGenericRepository`2.Update(`1)">
             <summary>
            使用TEntity对象更新记录
             </summary>
             <param name="entity">待更新对象</param>
             <returns></returns>
        </member>
        <member name="T:SmartEP.Core.Interfaces.IFilterCriteria">
            <summary>
            过滤条件实体的高层接口标记，主要用于实现IFilterCriteria接口派生类间的数据转换
            </summary>
        </member>
        <member name="T:SmartEP.Core.Interfaces.IPoint">
            <summary>
            名称：IPoint.cs
            创建人：李飞
            创建日期：2015-08-22
            维护人员：
            最新维护人员：
            最新维护日期：
            功能摘要：
            站点接口
            版权所有(C)：江苏远大信息股份有限公司
            </summary>
        </member>
        <member name="P:SmartEP.Core.Interfaces.IPoint.PointName">
            <summary>
            站点名称
            </summary>
        </member>
        <member name="P:SmartEP.Core.Interfaces.IPoint.PointID">
            <summary>
            站点ID
            </summary>
        </member>
        <member name="P:SmartEP.Core.Interfaces.IPoint.PointGuid">
            <summary>
            站点Guide
            </summary>
        </member>
        <member name="T:SmartEP.Core.Interfaces.IPollutant">
            <summary>
            名称：IPollutant.cs
            创建人：李飞
            创建日期：2015-08-22
            维护人员：
            最新维护人员：
            最新维护日期：
            功能摘要：
            因子接口
            版权所有(C)：江苏远大信息股份有限公司
            </summary>
        </member>
        <member name="P:SmartEP.Core.Interfaces.IPollutant.PollutantName">
            <summary>
            名称
            </summary>
        </member>
        <member name="P:SmartEP.Core.Interfaces.IPollutant.PollutantCode">
            <summary>
            编码
            </summary>
        </member>
        <member name="P:SmartEP.Core.Interfaces.IPollutant.PollutantDecimalNum">
            <summary>
            小数位
            </summary>
        </member>
        <member name="P:SmartEP.Core.Interfaces.IPollutant.PollutantMeasureUnit">
            <summary>
            单位
            </summary>
        </member>
        <member name="P:SmartEP.Core.Interfaces.IPollutant.PollutantGuid">
            <summary>
            Guid
            </summary>
        </member>
        <member name="P:SmartEP.Core.Interfaces.IPollutant.OrderNumber">
            <summary>
            排序
            </summary>
        </member>
    </members>
</doc>
