using SmartEP.WebUI.Common;
using SmartEP.DomainModel;
using SmartEP.Utilities.Caching;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.Security;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.Data;
using SmartEP.Utilities.AdoData;
using log4net;
using System.Configuration;
using SmartEP.Utilities.Web.NetWork;

namespace SmartEP.WebUI.Portal
{
    /// <summary>
    /// 名称：Login.aspx.cs
    /// 创建人：吕云
    /// 创建日期：2017-5-18
    /// 维护人员：
    /// 最新维护人员：
    /// 最新维护日期：
    /// 功能摘要：登陆页面
    /// 虚拟分页类
    /// 版权所有(C)：江苏远大信息股份有限公司
    /// </summary>
    public partial class Login : System.Web.UI.Page
    {
        ILog log = LogManager.GetLogger("FileLogging");//获取一个日志记录器

        FrameworkModel _userModel = new FrameworkModel();

        protected override void OnInit(EventArgs e)
        {
            base.OnInit(e);
            Helper.SetTelerikTheme(this, Helper.GetTheme());
        }

        protected override void OnPreInit(EventArgs e)
        {
            base.OnPreInit(e);
            //Session["UserGuid"] = "8f2c499d-fd0c-49de-a31e-ff577969e82a";
            Helper.SetPageTheme(this, Helper.GetTheme());
        }

        protected void Page_Load(object sender, EventArgs e)
        {
            try
            {
                System.Web.HttpContext.Current.Session.Clear();
                System.Web.HttpContext.Current.Session.RemoveAll();
            }
            catch
            {
            }
        }

        protected void btnOK_Click(object sender, EventArgs e)
        {
            try
            {
                #region 获取页面url
                string InnerIP = System.Configuration.ConfigurationManager.AppSettings["InnerIP"].ToString();
                string InnerPortalUrl = System.Configuration.ConfigurationManager.AppSettings["InnerPortalUrl"].ToString();
                bool IsInnerNetWork = Networks.IsInnerNetWork(InnerIP);
                
                string frameUrl = ConfigurationManager.AppSettings["PortalUrl"].ToString();
                if (IsInnerNetWork == true)//指定ip处于内网则切换到内网ip
                {
                    //frameUrl = InnerPortalUrl;
                }
                string homePageUrl = frameUrl + "/" + ConfigurationManager.AppSettings["PortalName"].ToString();
                frameUrl += "/" + ConfigurationManager.AppSettings["FrameworkName"].ToString();
                string gISUrl = ConfigurationManager.AppSettings["GISUrl"].ToString();
                #endregion

                //log.Error("test");
                string name = RadTxtUser.Text;
                string pwd = FormsAuthentication.HashPasswordForStoringInConfigFile(RadTxtPwd.Text, "SHA1");

                Frame_UserEntity userObj = _userModel.Frame_UserEntities.FirstOrDefault(x => x.LoginID.Equals(name) && x.Password.Equals(pwd) && x.IsEnabled != (Nullable<int>)null && x.IsEnabled.Value == 1);

                if (userObj != null)
                {
                    SessionHelper.Add("UserGuid", userObj.RowGuid);
                    SessionHelper.Add("DisplayName", userObj.DisplayName);
                    SessionHelper.Add("LoginID", userObj.LoginID);
                    System.Web.HttpContext.Current.Session.Timeout = 600;

                    string desKey = System.Configuration.ConfigurationManager.AppSettings["DesKey"].ToString();
                    string token = Com.Sinoyd.Security.Security.EncryptDES(userObj.RowGuid, desKey);

                    // 记录登录成功日志 add by wangtq 2016.5.24
                    DatabaseHelper dbinsert = new DatabaseHelper();
                    string loginID = userObj.LoginID;
                    string displayName = userObj.DisplayName;
                    string loginNote = "登录成功";
                    HttpRequest request = HttpContext.Current.Request;
                    string ip = Request.ServerVariables["REMOTE_ADDR"].ToString();
                    string loginTime = DateTime.Now.ToString();
                    string sql = @"insert into TB_Frame_LoginLog (RowGuid,UserGuid,DisplayName,LoginID,LoginTime,LoginIP,LoginNote,RowStatus)  values(newid(),'" + userObj.RowGuid + "','" + displayName + "','" + loginID + "','" + loginTime + "','" + ip + "','" + loginNote + "','1')";
                    dbinsert.ExecuteNonQuery(sql, "Frame_Connection");

                    Response.Redirect(homePageUrl + "/Portal/HomePage.aspx");

                    //Response.Redirect(homePageUrl + "/Portal/HomePage.aspx?token=" + token);
                    //Response.Redirect("HomePage.aspx?token=" + token);
                    //Response.Redirect("MidPage.aspx?Type=Air");
                    //Response.Redirect(frameUrl + "/FrameAir.aspx?Token=" + token);

                }
                else
                {
                    System.Web.UI.ScriptManager.RegisterStartupScript(
                   this,
                   this.GetType(),
                   Guid.NewGuid().ToString(),
                   "alert('" + HttpUtility.HtmlEncode("系统不能完成您的登录请求，请检查您的用户名和密码是否匹配!!") + "');",
                   true);

                    // 记录登录失败日志 add by wangtq 2016.5.25
                    DatabaseHelper dbinsert = new DatabaseHelper();
                    System.Guid guid = new Guid();
                    guid = Guid.NewGuid();
                    string userid = guid.ToString(); ;
                    string loginID = this.RadTxtUser.Text;
                    string displayName = "";
                    string loginNote = "登录失败";
                    HttpRequest request = HttpContext.Current.Request;
                    string ip = Request.ServerVariables["REMOTE_ADDR"].ToString();
                    string loginTime = DateTime.Now.ToString();
                    string sql = @"insert into TB_Frame_LoginLog (RowGuid,UserGuid,DisplayName,LoginID,LoginTime,LoginIP,LoginNote,RowStatus)  values(newid(),'" + userid + "','" + displayName + "','" + loginID + "','" + loginTime + "','" + ip + "','" + loginNote + "','0')";
                    dbinsert.ExecuteNonQuery(sql, "Frame_Connection");

                    return;
                }
            }
            catch (Exception ex)
            {
                log.Error(ex.ToString());
            }
        }

        protected void btnCancel_Click(object sender, EventArgs e)
        {
            this.RadTxtUser.Text = string.Empty;
            this.RadTxtPwd.Text = string.Empty;
        }


    }
}