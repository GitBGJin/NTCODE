//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.19118
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace SmartEP.WebService.ServiceReference2 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://222.92.42.178:8083", ConfigurationName="ServiceReference2.ZhangjgAQISoap")]
    public interface ZhangjgAQISoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://222.92.42.178:8083/GetPortInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void GetPortInfo();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://222.92.42.178:8083/GetPortInfo", ReplyAction="*")]
        System.Threading.Tasks.Task GetPortInfoAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://222.92.42.178:8083/GetLatestHourAQINew", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void GetLatestHourAQINew(string portId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://222.92.42.178:8083/GetLatestHourAQINew", ReplyAction="*")]
        System.Threading.Tasks.Task GetLatestHourAQINewAsync(string portId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://222.92.42.178:8083/GetLatestHourAQI", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void GetLatestHourAQI(string portId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://222.92.42.178:8083/GetLatestHourAQI", ReplyAction="*")]
        System.Threading.Tasks.Task GetLatestHourAQIAsync(string portId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://222.92.42.178:8083/GetLatestHourAQIForBAD", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void GetLatestHourAQIForBAD(string portId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://222.92.42.178:8083/GetLatestHourAQIForBAD", ReplyAction="*")]
        System.Threading.Tasks.Task GetLatestHourAQIForBADAsync(string portId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://222.92.42.178:8083/Get24HoursFactorData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void Get24HoursFactorData(string portId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://222.92.42.178:8083/Get24HoursFactorData", ReplyAction="*")]
        System.Threading.Tasks.Task Get24HoursFactorDataAsync(string portId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://222.92.42.178:8083/Get24HoursFactorDataByCode", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void Get24HoursFactorDataByCode(string portId, string factorCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://222.92.42.178:8083/Get24HoursFactorDataByCode", ReplyAction="*")]
        System.Threading.Tasks.Task Get24HoursFactorDataByCodeAsync(string portId, string factorCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://222.92.42.178:8083/GetHourConcentration", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void GetHourConcentration(string portId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://222.92.42.178:8083/GetHourConcentration", ReplyAction="*")]
        System.Threading.Tasks.Task GetHourConcentrationAsync(string portId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://222.92.42.178:8083/GetTopNHourAQI", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void GetTopNHourAQI(string portId, string topN);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://222.92.42.178:8083/GetTopNHourAQI", ReplyAction="*")]
        System.Threading.Tasks.Task GetTopNHourAQIAsync(string portId, string topN);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://222.92.42.178:8083/GetTopNDayAQI", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void GetTopNDayAQI(string portId, string topN);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://222.92.42.178:8083/GetTopNDayAQI", ReplyAction="*")]
        System.Threading.Tasks.Task GetTopNDayAQIAsync(string portId, string topN);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://222.92.42.178:8083/GetAQIForecast", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void GetAQIForecast();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://222.92.42.178:8083/GetAQIForecast", ReplyAction="*")]
        System.Threading.Tasks.Task GetAQIForecastAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://222.92.42.178:8083/GetVersion", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void GetVersion();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://222.92.42.178:8083/GetVersion", ReplyAction="*")]
        System.Threading.Tasks.Task GetVersionAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ZhangjgAQISoapChannel : SmartEP.WebService.ServiceReference2.ZhangjgAQISoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ZhangjgAQISoapClient : System.ServiceModel.ClientBase<SmartEP.WebService.ServiceReference2.ZhangjgAQISoap>, SmartEP.WebService.ServiceReference2.ZhangjgAQISoap {
        
        public ZhangjgAQISoapClient() {
        }
        
        public ZhangjgAQISoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ZhangjgAQISoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ZhangjgAQISoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ZhangjgAQISoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void GetPortInfo() {
            base.Channel.GetPortInfo();
        }
        
        public System.Threading.Tasks.Task GetPortInfoAsync() {
            return base.Channel.GetPortInfoAsync();
        }
        
        public void GetLatestHourAQINew(string portId) {
            base.Channel.GetLatestHourAQINew(portId);
        }
        
        public System.Threading.Tasks.Task GetLatestHourAQINewAsync(string portId) {
            return base.Channel.GetLatestHourAQINewAsync(portId);
        }
        
        public void GetLatestHourAQI(string portId) {
            base.Channel.GetLatestHourAQI(portId);
        }
        
        public System.Threading.Tasks.Task GetLatestHourAQIAsync(string portId) {
            return base.Channel.GetLatestHourAQIAsync(portId);
        }
        
        public void GetLatestHourAQIForBAD(string portId) {
            base.Channel.GetLatestHourAQIForBAD(portId);
        }
        
        public System.Threading.Tasks.Task GetLatestHourAQIForBADAsync(string portId) {
            return base.Channel.GetLatestHourAQIForBADAsync(portId);
        }
        
        public void Get24HoursFactorData(string portId) {
            base.Channel.Get24HoursFactorData(portId);
        }
        
        public System.Threading.Tasks.Task Get24HoursFactorDataAsync(string portId) {
            return base.Channel.Get24HoursFactorDataAsync(portId);
        }
        
        public void Get24HoursFactorDataByCode(string portId, string factorCode) {
            base.Channel.Get24HoursFactorDataByCode(portId, factorCode);
        }
        
        public System.Threading.Tasks.Task Get24HoursFactorDataByCodeAsync(string portId, string factorCode) {
            return base.Channel.Get24HoursFactorDataByCodeAsync(portId, factorCode);
        }
        
        public void GetHourConcentration(string portId) {
            base.Channel.GetHourConcentration(portId);
        }
        
        public System.Threading.Tasks.Task GetHourConcentrationAsync(string portId) {
            return base.Channel.GetHourConcentrationAsync(portId);
        }
        
        public void GetTopNHourAQI(string portId, string topN) {
            base.Channel.GetTopNHourAQI(portId, topN);
        }
        
        public System.Threading.Tasks.Task GetTopNHourAQIAsync(string portId, string topN) {
            return base.Channel.GetTopNHourAQIAsync(portId, topN);
        }
        
        public void GetTopNDayAQI(string portId, string topN) {
            base.Channel.GetTopNDayAQI(portId, topN);
        }
        
        public System.Threading.Tasks.Task GetTopNDayAQIAsync(string portId, string topN) {
            return base.Channel.GetTopNDayAQIAsync(portId, topN);
        }
        
        public void GetAQIForecast() {
            base.Channel.GetAQIForecast();
        }
        
        public System.Threading.Tasks.Task GetAQIForecastAsync() {
            return base.Channel.GetAQIForecastAsync();
        }
        
        public void GetVersion() {
            base.Channel.GetVersion();
        }
        
        public System.Threading.Tasks.Task GetVersionAsync() {
            return base.Channel.GetVersionAsync();
        }
    }
}
