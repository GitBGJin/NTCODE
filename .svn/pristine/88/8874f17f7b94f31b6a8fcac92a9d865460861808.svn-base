using SmartEP.Core.Generic;
using SmartEP.MonitoringBusinessRepository.Air;
using SmartEP.Utilities.DataTypes.ExtensionMethods;
using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Data;
using System.Linq;
using System.Text;

namespace SmartEP.Service.DataAnalyze.Air.DataQuery
{
    public class GranuleSpecialService
    {
        /// <summary>
        /// 空气时数据
        /// </summary>
        GranuleSpecialRepository m_GranuleSpecial = Singleton<GranuleSpecialRepository>.GetInstance();
        public DataView GetOriHourData(string portIds, string[] factors, DateTime dtStart, DateTime dtEnd, string type)
        {
            DataTable dvWind = m_GranuleSpecial.GetOriHourData(portIds, factors, dtStart, dtEnd, type).ToTable();
            string factorCodeWindDir = "a01008";//风向
            dvWind.Columns.Add("Wind", typeof(string));
            if (dvWind.Rows.Count > 0)
            {
                string windtype = "Sixteen";
                foreach (DataRow dr in dvWind.Rows)
                {
                    if (windtype == "Sixteen")
                    {
                        if (dr[factorCodeWindDir] != DBNull.Value)
                        {
                            dr["Wind"] = (SixteenGetWindName(Convert.ToDouble(dr[factorCodeWindDir])));
                        }
                    }
                    else
                    {
                        if (dr[factorCodeWindDir] != DBNull.Value)
                        {
                            dr["Wind"] = EightGetWindName(Convert.ToDouble(dr[factorCodeWindDir]));
                        }
                    }
                    foreach (string factor in factors)
                    {
                        if ((factor == "a34004" || factor == "a34002" || factor == "a21026" || factor == "a21004" || factor == "a05024") && dr[factor].ToString() != "")
                            dr[factor] = DecimalExtension.GetPollutantValue(Convert.ToDecimal(dr[factor]) * 1000, 0);
                        if (factor == "a21005" && dr[factor].ToString() != "")
                            dr[factor] = DecimalExtension.GetPollutantValue(Convert.ToDecimal(dr[factor]), 1);
                    }
                }
            }
            return dvWind.DefaultView;
        }
        public DataView GetOriHourDataNew(string [] pointIds,string portIds, string[] factors, DateTime dtStart, DateTime dtEnd, string type)
        {
            DataTable dvWind = new DataTable();
            List<string> factorW =new List<string>();
            string[] factorB = new string[] { };
            if (factors.Length != 0 && factors[0] != "")
            {
                dvWind = m_GranuleSpecial.GetOriHourDataNew(pointIds, factors, dtStart, dtEnd, type).ToTable();
                //风向
                factorW = factors.ToList();
                factorW.Add("a01001");
                factorW.Add("a01002");
                factorW.Add("a01006");
                factorW.Add("a01007");
                factorW.Add("a01008");
                factorB = factorW.ToArray();
            }
            else
            {
                factorW.Add("a01001");
                factorW.Add("a01002");
                factorW.Add("a01006");
                factorW.Add("a01007");
                factorW.Add("a01008");
                factorB = factorW.ToArray();
            }
            

            
            
            
            DataTable dvW = m_GranuleSpecial.GetOriHourData(portIds, factorB, dtStart, dtEnd, type).ToTable();
            //复制表结构
            IEnumerable<DateTime> list = dvWind.AsEnumerable().Select(t => t.Field<DateTime>("Tstamp")).Distinct();
            //int d=list.Count();
            if (dvWind.Rows.Count>0)
            {

                for (int d = 0; d < list.Count();d++ )
                {

                    for (int i = 0; i < factors.Length; i++)
                    {
                        //总值的除数
                        int x = 0;
                        //平均值
                        decimal all = 0;
                        for (int j = 0; j < pointIds.Length; j++)
                        {
                            if (dvWind.Rows[j * list.Count()+d][factors[i]] != null && dvWind.Rows[j * list.Count()+d][factors[i]].ToString() != "" && (dvWind.Rows[j * list.Count()+d][factors[i]]).IsNotNullOrDBNull())
                            {
                                x += 1;
                                all += Convert.ToDecimal(dvWind.Rows[j * list.Count()+d][factors[i]]);

                            }
                            else
                            {
                                all += 0;
                            }
                        }
                        if (x == 0)
                        {
                            dvW.Rows[d][factors[i]] = 0;
                        }
                        else
                        {
                            dvW.Rows[d][factors[i]] = all / x;
                        }
                    }
                }
            }
            
            string factorCodeWindDir = "a01008";//风向
            dvW.Columns.Add("Wind", typeof(string));
            if (dvW.Rows.Count > 0)
            {
                string windtype = "Sixteen";
                foreach (DataRow dr in dvW.Rows)
                {
                    if (windtype == "Sixteen")
                    {
                        if (dr[factorCodeWindDir] != DBNull.Value)
                        {
                            dr["Wind"] = (SixteenGetWindName(Convert.ToDouble(dr[factorCodeWindDir])));
                        }
                    }
                    else
                    {
                        if (dr[factorCodeWindDir] != DBNull.Value)
                        {
                            dr["Wind"] = EightGetWindName(Convert.ToDouble(dr[factorCodeWindDir]));
                        }
                    }
                    foreach (string factor in factors)
                    {
                        if ((factor == "a34004" || factor == "a34002" || factor == "a21026" || factor == "a21004" || factor == "a05024") && dr[factor].ToString() != "")
                            dr[factor] = DecimalExtension.GetPollutantValue(Convert.ToDecimal(dr[factor]) * 1000, 0);
                        if (factor == "a21005" && dr[factor].ToString() != "")
                            dr[factor] = DecimalExtension.GetPollutantValue(Convert.ToDecimal(dr[factor]), 1);
                    }
                }
            }
            return dvW.DefaultView;
        }
        #region 16角度转换
        public string SixteenGetWindName(double degree)
        {
            string[] windName = {   "北风", 
                                    "东北偏北风", 
                                    "东北风", 
                                    "东北偏东风", 
                                    "东风",
                                    "东南偏东风",
                                    "东南风", 
                                    "东南偏南风", 
                                    "南风",
                                    "西南偏南风",
                                    "西南风",
                                    "西南偏西风", 
                                    "西风", 
                                    "西北偏西风", 
                                    "西北风", 
                                    "西北偏北风"
                                };
            double i = Math.Floor(degree % 360 / 11.25);
            if (i == 31) i = -1;
            i++;
            return windName[(int)Math.Floor(i / 2)];
        }
        #endregion

        #region 8角度转换
        public string EightGetWindName(double degree)
        {
            string[] windName = {   "北风", 
                                    "东北风", 
                                    "东风",
                                    "东南风", 
                                    "南风",
                                    "西南风",
                                    "西风", 
                                    "西北风", 
                                };
            double i = Math.Floor(degree % 360 / 22.5);
            if (i == 15) i = -1;
            i++;
            return windName[(int)Math.Floor(i / 2)];
        }
        #endregion
        /// <summary>
        /// 原始数据
        /// </summary>
        /// <param name="portIds"></param>
        /// <param name="factors"></param>
        /// <param name="dtStart"></param>
        /// <param name="dtEnd"></param>
        /// <returns></returns>
        public DataView GetOriDayData(string portIds, string[] factors, DateTime dtStart, DateTime dtEnd)
        {
            DataTable dt = m_GranuleSpecial.GetOriDayData(portIds, factors, dtStart, dtEnd).ToTable();

            dt.Columns.Add("Tstamp", typeof(string));
            dt.Columns.Add("Wind", typeof(string));
            for (int i = 0; i < dt.Rows.Count; i++)
            {

            }
            string factorCodeWindDir = "a01008";//风向

            if (dt.Rows.Count > 0)
            {
                string windtype = "Sixteen";
                foreach (DataRow dr in dt.Rows)
                {
                    if (dr["DateTime"].ToString() != "")
                        dr["Tstamp"] = Convert.ToDateTime(dr["DateTime"]).ToString("yyyy-MM-dd");

                    if (windtype == "Sixteen")
                    {
                        if (dr[factorCodeWindDir] != null)
                        {
                            dr["Wind"] = (SixteenGetWindName(Convert.ToDouble(dr[factorCodeWindDir])));
                        }
                    }
                    else
                    {
                        if (dr[factorCodeWindDir] != null)
                        {
                            dr["Wind"] = EightGetWindName(Convert.ToDouble(dr[factorCodeWindDir]));
                        }
                    }
                    foreach (string factor in factors)
                    {
                        if ((factor == "a34004" || factor == "a34002" || factor == "a21026" || factor == "a21004" || factor == "a05024") && dr[factor].ToString() != "")
                            dr[factor] = DecimalExtension.GetPollutantValue(Convert.ToDecimal(dr[factor]) * 1000, 0);
                        if (factor == "a21005" && dr[factor].ToString() != "")
                            dr[factor] = DecimalExtension.GetPollutantValue(Convert.ToDecimal(dr[factor]), 1);
                    }
                }
            }
            return dt.DefaultView;
        }
        /// <summary>
        /// 原始数据
        /// </summary>
        /// <param name="portIds"></param>
        /// <param name="factors"></param>
        /// <param name="dtStart"></param>
        /// <param name="dtEnd"></param>
        /// <returns></returns>
        public DataView GetOriDayDataNew(string[] pointIds, string portIds, string[] factors, DateTime dtStart, DateTime dtEnd)
        {

            DataTable dvWind = new DataTable();

            //风向
            List<string> factorW = new List<string>();
            string[] factorB = new string[] { };

            if (factors.Length != 0 && factors[0] != "")
            {
                dvWind = m_GranuleSpecial.GetOriDayDataNew(pointIds, factors, dtStart, dtEnd).ToTable();
                //风向
                factorW = factors.ToList();
                factorW.Add("a01001");
                factorW.Add("a01002");
                factorW.Add("a01006");
                factorW.Add("a01007");
                factorW.Add("a01008");
                factorB = factorW.ToArray();
            }
            else
            {
                factorW.Add("a01001");
                factorW.Add("a01002");
                factorW.Add("a01006");
                factorW.Add("a01007");
                factorW.Add("a01008");
                factorB = factorW.ToArray();
            }
            //复制表结构
            IEnumerable<DateTime> list = dvWind.AsEnumerable().Select(t => t.Field<DateTime>("DateTime")).Distinct();

            DataTable dt = m_GranuleSpecial.GetOriDayData(portIds, factorB, dtStart, dtEnd).ToTable();

            //dt.Columns.Add("Tstamp", typeof(string));
            //dt.Columns.Add("Wind", typeof(string));
            if (dvWind.Rows.Count > 0)
            {
                for (int d = 0; d < list.Count(); d++)
                {

                    for (int i = 0; i < factors.Length; i++)
                    {
                        //总值的除数
                        int x = 0;
                        //平均值
                        decimal all = 0;
                        for (int j = 0; j < pointIds.Length; j++)
                        {
                            if (dvWind.Rows[j * list.Count() + d][factors[i]] != null && dvWind.Rows[j * list.Count() + d][factors[i]].ToString() != "" && (dvWind.Rows[j * list.Count() + d][factors[i]]).IsNotNullOrDBNull())
                            {
                                x += 1;
                                all += Convert.ToDecimal(dvWind.Rows[j * list.Count() + d][factors[i]]);

                            }
                            else
                            {
                                all += 0;
                            }
                        }
                        if (x == 0)
                        {
                            dt.Rows[d][factors[i]] = 0;
                        }
                        else
                        {
                            dt.Rows[d][factors[i]] = all / x;
                        }
                    }
                }
            }
            string factorCodeWindDir = "a01008";//风向
            dt.Columns.Add("Wind", typeof(string));
            if (dt.Rows.Count > 0)
            {
                string windtype = "Sixteen";
                foreach (DataRow dr in dt.Rows)
                {
                    if (dr["DateTime"].ToString() != "")
                        dr["DateTime"] = Convert.ToDateTime(dr["DateTime"]).ToString("yyyy-MM-dd");

                    if (windtype == "Sixteen")
                    {
                        if (dr[factorCodeWindDir] != null)
                        {
                            dr["Wind"] = (SixteenGetWindName(Convert.ToDouble(dr[factorCodeWindDir])));
                        }
                    }
                    else
                    {
                        if (dr[factorCodeWindDir] != null)
                        {
                            dr["Wind"] = EightGetWindName(Convert.ToDouble(dr[factorCodeWindDir]));
                        }
                    }
                    foreach (string factor in factors)
                    {
                        if ((factor == "a34004" || factor == "a34002" || factor == "a21026" || factor == "a21004" || factor == "a05024") && dr[factor].ToString() != "")
                            dr[factor] = DecimalExtension.GetPollutantValue(Convert.ToDecimal(dr[factor]) * 1000, 0);
                        if (factor == "a21005" && dr[factor].ToString() != "")
                            dr[factor] = DecimalExtension.GetPollutantValue(Convert.ToDecimal(dr[factor]), 1);
                    }
                }
            }
            return dt.DefaultView;
        }
        /// <summary>
        /// 原始数据
        /// </summary>
        /// <param name="portIds"></param>
        /// <param name="factors"></param>
        /// <param name="dtStart"></param>
        /// <param name="dtEnd"></param>
        /// <returns></returns>
        public DataView GetOriMonthDataNew(string[] pointIds, string portIds, string[] factors, DateTime dtStart, DateTime dtEnd)
        {
            DataTable dvWind = new DataTable();

            //风向
            List<string> factorW = new List<string>();
            string[] factorB = new string[] { };
            
            if (factors.Length != 0 && factors[0] != "")
            {
                dvWind = m_GranuleSpecial.GetOriMonthDataNew(pointIds, factors, dtStart, dtEnd).ToTable();
                //风向
                factorW = factors.ToList();
                factorW.Add("a01001");
                factorW.Add("a01002");
                factorW.Add("a01006");
                factorW.Add("a01007");
                factorW.Add("a01008");
                factorB = factorW.ToArray();
            }
            else
            {
                factorW.Add("a01001");
                factorW.Add("a01002");
                factorW.Add("a01006");
                factorW.Add("a01007");
                factorW.Add("a01008");
                factorB = factorW.ToArray();
            }
            //复制表结构
            IEnumerable<DateTime> list = dvWind.AsEnumerable().Select(t => t.Field<DateTime>("DateTime")).Distinct();

            DataTable dt = m_GranuleSpecial.GetOriMonthData(portIds, factorB, dtStart, dtEnd).ToTable();

            //dt.Columns.Add("Tstamp", typeof(string));
            dt.Columns.Add("Wind", typeof(string));
            //dt.Columns.Add("Tstamp", typeof(string));
            //dt.Columns.Add("Wind", typeof(string));
            if (dvWind.Rows.Count > 0)
            {
                for (int d = 0; d < list.Count(); d++)
                {

                    for (int i = 0; i < factors.Length; i++)
                    {
                        //总值的除数
                        int x = 0;
                        //平均值
                        decimal all = 0;
                        for (int j = 0; j < pointIds.Length; j++)
                        {
                            if (dvWind.Rows[j * list.Count() + d][factors[i]] != null && dvWind.Rows[j * list.Count() + d][factors[i]].ToString() != "" && (dvWind.Rows[j * list.Count() + d][factors[i]]).IsNotNullOrDBNull())
                            {
                                x += 1;
                                all += Convert.ToDecimal(dvWind.Rows[j * list.Count() + d][factors[i]]);

                            }
                            else
                            {
                                all += 0;
                            }
                        }
                        if (x == 0)
                        {
                            dt.Rows[d][factors[i]] = 0;
                        }
                        else
                        {
                            dt.Rows[d][factors[i]] = all / x;
                        }
                    }
                }
            }
            
            string factorCodeWindDir = "a01008";//风向

            if (dt.Rows.Count > 0)
            {
                string windtype = "Sixteen";
                foreach (DataRow dr in dt.Rows)
                {
                    if (dr["DateTime"].ToString() != "")
                        dr["DateTime"] = Convert.ToDateTime(dr["DateTime"]).ToString("yyyy年MM月");
                    if (windtype == "Sixteen")
                    {
                        if (dr[factorCodeWindDir] != null)
                        {
                            dr["Wind"] = (SixteenGetWindName(Convert.ToDouble(dr[factorCodeWindDir])));
                        }
                    }
                    else
                    {
                        if (dr[factorCodeWindDir] != null)
                        {
                            dr["Wind"] = EightGetWindName(Convert.ToDouble(dr[factorCodeWindDir]));
                        }
                    }
                    foreach (string factor in factors)
                    {
                        if ((factor == "a34004" || factor == "a34002" || factor == "a21026" || factor == "a21004" || factor == "a05024") && dr[factor].ToString() != "")
                            dr[factor] = DecimalExtension.GetPollutantValue(Convert.ToDecimal(dr[factor]) * 1000, 0);
                        if (factor == "a21005" && dr[factor].ToString() != "")
                            dr[factor] = DecimalExtension.GetPollutantValue(Convert.ToDecimal(dr[factor]), 1);
                    }
                }
            }
            return dt.DefaultView;

        }
        public DataView GetAuditHourDataNew(string[] pointIds, string portIds, string[] factors, DateTime dtStart, DateTime dtEnd)
        {
            DataTable dvWind = new DataTable();

            //风向
            List<string> factorW = new List<string>();
            string[] factorB = new string[] { };

            if (factors.Length != 0 && factors[0] != "")
            {
                dvWind = m_GranuleSpecial.GetAuditHourDataNew(pointIds, factors, dtStart, dtEnd).ToTable();
                //风向
                factorW = factors.ToList();
                factorW.Add("a01001");
                factorW.Add("a01002");
                factorW.Add("a01006");
                factorW.Add("a01007");
                factorW.Add("a01008");
                factorB = factorW.ToArray();
            }
            else
            {
                factorW.Add("a01001");
                factorW.Add("a01002");
                factorW.Add("a01006");
                factorW.Add("a01007");
                factorW.Add("a01008");
                factorB = factorW.ToArray();
            }
            //复制表结构
            IEnumerable<DateTime> list = dvWind.AsEnumerable().Select(t => t.Field<DateTime>("Tstamp")).Distinct();

            DataTable dt = m_GranuleSpecial.GetAuditHourData(portIds, factorB, dtStart, dtEnd).ToTable();

            dt.Columns.Add("Wind", typeof(string));
            if (dvWind.Rows.Count > 0)
            {
                for (int d = 0; d < list.Count(); d++)
                {

                    for (int i = 0; i < factors.Length; i++)
                    {
                        //总值的除数
                        int x = 0;
                        //平均值
                        decimal all = 0;
                        for (int j = 0; j < pointIds.Length; j++)
                        {
                            if (dvWind.Rows[j * list.Count() + d][factors[i]] != null && dvWind.Rows[j * list.Count() + d][factors[i]].ToString() != "" && (dvWind.Rows[j * list.Count() + d][factors[i]]).IsNotNullOrDBNull())
                            {
                                x += 1;
                                all += Convert.ToDecimal(dvWind.Rows[j * list.Count() + d][factors[i]]);

                            }
                            else
                            {
                                all += 0;
                            }
                        }
                        if (x == 0)
                        {
                            dt.Rows[d][factors[i]] = 0;
                        }
                        else
                        {
                            dt.Rows[d][factors[i]] = all / x;
                        }
                    }
                }
            }
           
            
            string factorCodeWindDir = "a01008";//风向

            if (dt.Rows.Count > 0)
            {
                string windtype = "Sixteen";
                foreach (DataRow dr in dt.Rows)
                {
                    if (windtype == "Sixteen")
                    {
                        if (dr[factorCodeWindDir] != null)
                        {
                            dr["Wind"] = (SixteenGetWindName(Convert.ToDouble(dr[factorCodeWindDir])));
                        }
                    }
                    else
                    {
                        if (dr[factorCodeWindDir] != null)
                        {
                            dr["Wind"] = EightGetWindName(Convert.ToDouble(dr[factorCodeWindDir]));
                        }
                    }
                    foreach (string factor in factors)
                    {
                        if ((factor == "a34004" || factor == "a34002" || factor == "a21026" || factor == "a21004" || factor == "a05024") && dr[factor].ToString() != "")
                            dr[factor] = DecimalExtension.GetPollutantValue(Convert.ToDecimal(dr[factor]) * 1000, 0);
                        if (factor == "a21005" && dr[factor].ToString() != "")
                            dr[factor] = DecimalExtension.GetPollutantValue(Convert.ToDecimal(dr[factor]), 1);
                    }
                }
            }
            return dt.DefaultView;

        }
        /// <summary>
        /// 原始数据
        /// </summary>
        /// <param name="portIds"></param>
        /// <param name="factors"></param>
        /// <param name="dtStart"></param>
        /// <param name="dtEnd"></param>
        /// <returns></returns>
        public DataView GetAuditDayDataNew(string[] pointIds, string portIds, string[] factors, DateTime dtStart, DateTime dtEnd)
        {
            DataTable dvWind = new DataTable();

            //风向
            List<string> factorW = new List<string>();
            string[] factorB = new string[] { };

            if (factors.Length != 0 && factors[0] != "")
            {
                dvWind = m_GranuleSpecial.GetAuditDayDataNew(pointIds, factors, dtStart, dtEnd).ToTable();
                //风向
                factorW = factors.ToList();
                factorW.Add("a01001");
                factorW.Add("a01002");
                factorW.Add("a01006");
                factorW.Add("a01007");
                factorW.Add("a01008");
                factorB = factorW.ToArray();
            }
            else
            {
                factorW.Add("a01001");
                factorW.Add("a01002");
                factorW.Add("a01006");
                factorW.Add("a01007");
                factorW.Add("a01008");
                factorB = factorW.ToArray();
            }
            //复制表结构
            IEnumerable<DateTime> list = dvWind.AsEnumerable().Select(t => t.Field<DateTime>("DateTime")).Distinct();

            DataTable dt = m_GranuleSpecial.GetAuditDayData(portIds, factorB, dtStart, dtEnd).ToTable();

            dt.Columns.Add("Wind", typeof(string));
            if (dvWind.Rows.Count > 0)
            {
                for (int d = 0; d < list.Count(); d++)
                {

                    for (int i = 0; i < factors.Length; i++)
                    {
                        //总值的除数
                        int x = 0;
                        //平均值
                        decimal all = 0;
                        for (int j = 0; j < pointIds.Length; j++)
                        {
                            if (dvWind.Rows[j * list.Count() + d][factors[i]] != null && dvWind.Rows[j * list.Count() + d][factors[i]].ToString() != "" && (dvWind.Rows[j * list.Count() + d][factors[i]]).IsNotNullOrDBNull())
                            {
                                x += 1;
                                all += Convert.ToDecimal(dvWind.Rows[j * list.Count() + d][factors[i]]);

                            }
                            else
                            {
                                all += 0;
                            }
                        }
                        if (x == 0)
                        {
                            dt.Rows[d][factors[i]] = 0;
                        }
                        else
                        {
                            dt.Rows[d][factors[i]] = all / x;
                        }
                    }
                }
            }
            
            string factorCodeWindDir = "a01008";//风向

            if (dt.Rows.Count > 0)
            {
                string windtype = "Sixteen";
                foreach (DataRow dr in dt.Rows)
                {
                    if (dr["DateTime"].ToString() != "")
                        dr["DateTime"] = Convert.ToDateTime(dr["DateTime"]).ToString("yyyy-MM-dd");
                    if (windtype == "Sixteen")
                    {
                        if (dr[factorCodeWindDir] != null)
                        {
                            dr["Wind"] = (SixteenGetWindName(Convert.ToDouble(dr[factorCodeWindDir])));
                        }
                    }
                    else
                    {
                        if (dr[factorCodeWindDir] != null)
                        {
                            dr["Wind"] = EightGetWindName(Convert.ToDouble(dr[factorCodeWindDir]));
                        }
                    }
                    foreach (string factor in factors)
                    {
                        if ((factor == "a34004" || factor == "a34002" || factor == "a21026" || factor == "a21004" || factor == "a05024") && dr[factor].ToString() != "")
                            dr[factor] = DecimalExtension.GetPollutantValue(Convert.ToDecimal(dr[factor]) * 1000, 0);
                        if (factor == "a21005" && dr[factor].ToString() != "")
                            dr[factor] = DecimalExtension.GetPollutantValue(Convert.ToDecimal(dr[factor]), 1);
                    }
                }
            }
            return dt.DefaultView;
        }
        /// <summary>
        /// 原始数据
        /// </summary>
        /// <param name="portIds"></param>
        /// <param name="factors"></param>
        /// <param name="dtStart"></param>
        /// <param name="dtEnd"></param>
        /// <returns></returns>
        public DataView GetAuditMonthDataNew(string[] pointIds, string portIds, string[] factors, DateTime dtStart, DateTime dtEnd)
        {
            DataTable dvWind = new DataTable();

            //风向
            List<string> factorW = new List<string>();
            string[] factorB = new string[] { };

            if (factors.Length != 0 && factors[0] != "")
            {
                dvWind = m_GranuleSpecial.GetAuditMonthDataNew(pointIds, factors, dtStart, dtEnd).ToTable();
                //风向
                factorW = factors.ToList();
                factorW.Add("a01001");
                factorW.Add("a01002");
                factorW.Add("a01006");
                factorW.Add("a01007");
                factorW.Add("a01008");
                factorB = factorW.ToArray();
            }
            else
            {
                factorW.Add("a01001");
                factorW.Add("a01002");
                factorW.Add("a01006");
                factorW.Add("a01007");
                factorW.Add("a01008");
                factorB = factorW.ToArray();
            }
            //复制表结构
            IEnumerable<DateTime> list = dvWind.AsEnumerable().Select(t => t.Field<DateTime>("DateTime")).Distinct();

            DataTable dt = m_GranuleSpecial.GetAuditMonthData(portIds, factorB, dtStart, dtEnd).ToTable();

            dt.Columns.Add("Wind", typeof(string));
            if (dvWind.Rows.Count > 0)
            {
                for (int d = 0; d < list.Count(); d++)
                {

                    for (int i = 0; i < factors.Length; i++)
                    {
                        //总值的除数
                        int x = 0;
                        //平均值
                        decimal all = 0;
                        for (int j = 0; j < pointIds.Length; j++)
                        {
                            if (dvWind.Rows[j * list.Count() + d][factors[i]] != null && dvWind.Rows[j * list.Count() + d][factors[i]].ToString() != "" && (dvWind.Rows[j * list.Count() + d][factors[i]]).IsNotNullOrDBNull())
                            {
                                x += 1;
                                all += Convert.ToDecimal(dvWind.Rows[j * list.Count() + d][factors[i]]);

                            }
                            else
                            {
                                all += 0;
                            }
                        }
                        if (x == 0)
                        {
                            dt.Rows[d][factors[i]] = 0;
                        }
                        else
                        {
                            dt.Rows[d][factors[i]] = all / x;
                        }
                    }
                }
            }
            
            
            string factorCodeWindDir = "a01008";//风向

            if (dt.Rows.Count > 0)
            {
                string windtype = "Sixteen";
                foreach (DataRow dr in dt.Rows)
                {
                    if (dr["DateTime"].ToString() != "")
                        dr["DateTime"] = Convert.ToDateTime(dr["DateTime"]).ToString("yyyy年MM月");
                    if (windtype == "Sixteen")
                    {
                        if (dr[factorCodeWindDir] != null)
                        {
                            dr["Wind"] = (SixteenGetWindName(Convert.ToDouble(dr[factorCodeWindDir])));
                        }
                    }
                    else
                    {
                        if (dr[factorCodeWindDir] != null)
                        {
                            dr["Wind"] = EightGetWindName(Convert.ToDouble(dr[factorCodeWindDir]));
                        }
                    }
                    foreach (string factor in factors)
                    {
                        if ((factor == "a34004" || factor == "a34002" || factor == "a21026" || factor == "a21004" || factor == "a05024") && dr[factor].ToString() != "")
                            dr[factor] = DecimalExtension.GetPollutantValue(Convert.ToDecimal(dr[factor]) * 1000, 0);
                        if (factor == "a21005" && dr[factor].ToString() != "")
                            dr[factor] = DecimalExtension.GetPollutantValue(Convert.ToDecimal(dr[factor]), 1);
                    }
                }
            }
            return dt.DefaultView;

        }
        /// <summary>
        /// 原始数据
        /// </summary>
        /// <param name="portIds"></param>
        /// <param name="factors"></param>
        /// <param name="dtStart"></param>
        /// <param name="dtEnd"></param>
        /// <returns></returns>
        public DataView GetAuditSeasonDataNew(string[] pointIds, string portIds, string[] factors, int yearFrom, int seasonOfYearFrom, int yearTo, int seasonOfYearTo)
        {
            DataTable dvWind = new DataTable();

            //风向
            List<string> factorW = new List<string>();
            string[] factorB = new string[] { };

            if (factors.Length != 0 && factors[0] != "")
            {
                dvWind = m_GranuleSpecial.GetAuditSeasonDataNew(pointIds, factors, yearFrom, seasonOfYearFrom, yearTo, seasonOfYearTo).ToTable();
                //风向
                factorW = factors.ToList();
                factorW.Add("a01001");
                factorW.Add("a01002");
                factorW.Add("a01006");
                factorW.Add("a01007");
                factorW.Add("a01008");
                factorB = factorW.ToArray();
            }
            else
            {
                factorW.Add("a01001");
                factorW.Add("a01002");
                factorW.Add("a01006");
                factorW.Add("a01007");
                factorW.Add("a01008");
                factorB = factorW.ToArray();
            }
            //复制表结构
            IEnumerable<decimal> list = dvWind.AsEnumerable().Select(t => t.Field<decimal>("SeasonOfYear") +t.Field<decimal>("Year")).Distinct();

            DataTable dt = m_GranuleSpecial.GetAuditSeasonData(portIds, factorB, yearFrom, seasonOfYearFrom, yearTo, seasonOfYearTo).ToTable();

            dt.Columns.Add("Wind", typeof(string));
            dt.Columns.Add("Tstamp", typeof(string));
            if (dvWind.Rows.Count > 0)
            {
                for (int d = 0; d < list.Count(); d++)
                {

                    for (int i = 0; i < factors.Length; i++)
                    {
                        //总值的除数
                        int x = 0;
                        //平均值
                        decimal all = 0;
                        for (int j = 0; j < pointIds.Length; j++)
                        {
                            if (dvWind.Rows[j * list.Count() + d][factors[i]] != null && dvWind.Rows[j * list.Count() + d][factors[i]].ToString() != "" && (dvWind.Rows[j * list.Count() + d][factors[i]]).IsNotNullOrDBNull())
                            {
                                x += 1;
                                all += Convert.ToDecimal(dvWind.Rows[j * list.Count() + d][factors[i]]);

                            }
                            else
                            {
                                all += 0;
                            }
                        }
                        if (x == 0)
                        {
                            dt.Rows[d][factors[i]] = 0;
                        }
                        else
                        {
                            dt.Rows[d][factors[i]] = all / x;
                        }
                    }
                }
            }

            dt.Columns.Remove("Year");
            dt.Columns.Remove("SeasonOfYear");
            string factorCodeWindDir = "a01008";//风向

            if (dt.Rows.Count > 0)
            {
                string windtype = "Sixteen";
                foreach (DataRow dr in dt.Rows)
                {
                    if (dr["SeasonOfYear"].ToString() != "")
                        dr["Tstamp"] = dr["Year"].ToString() + "年" + dr["SeasonOfYear"].ToString() + "季";
                    if (windtype == "Sixteen")
                    {
                        if (dr[factorCodeWindDir] != null)
                        {
                            dr["Wind"] = (SixteenGetWindName(Convert.ToDouble(dr[factorCodeWindDir])));
                        }
                    }
                    else
                    {
                        if (dr[factorCodeWindDir] != null)
                        {
                            dr["Wind"] = EightGetWindName(Convert.ToDouble(dr[factorCodeWindDir]));
                        }
                    }
                    foreach (string factor in factors)
                    {
                        if ((factor == "a34004" || factor == "a34002" || factor == "a21026" || factor == "a21004" || factor == "a05024") && dr[factor].ToString() != "")
                            dr[factor] = DecimalExtension.GetPollutantValue(Convert.ToDecimal(dr[factor]) * 1000, 0);
                        if (factor == "a21005" && dr[factor].ToString() != "")
                            dr[factor] = DecimalExtension.GetPollutantValue(Convert.ToDecimal(dr[factor]), 1);
                    }
                }
            }
            return dt.DefaultView;

        }
        /// <summary>
        /// 原始数据
        /// </summary>
        /// <param name="portIds"></param>
        /// <param name="factors"></param>
        /// <param name="dtStart"></param>
        /// <param name="dtEnd"></param>
        /// <returns></returns>
        public DataView GetAuditYearDataNew(string[] pointIds, string portIds, string[] factors, int yearFrom, int yearTo)
        {
            DataTable dvWind = new DataTable();

            //风向
            List<string> factorW = new List<string>();
            string[] factorB = new string[] { };

            if (factors.Length != 0 && factors[0] != "")
            {
                dvWind = m_GranuleSpecial.GetAuditYearDataNew(pointIds, factors, yearFrom, yearTo).ToTable();
                //风向
                factorW = factors.ToList();
                factorW.Add("a01001");
                factorW.Add("a01002");
                factorW.Add("a01006");
                factorW.Add("a01007");
                factorW.Add("a01008");
                factorB = factorW.ToArray();
            }
            else
            {
                factorW.Add("a01001");
                factorW.Add("a01002");
                factorW.Add("a01006");
                factorW.Add("a01007");
                factorW.Add("a01008");
                factorB = factorW.ToArray();
            }
            //复制表结构
            IEnumerable<decimal> list = dvWind.AsEnumerable().Select(t => t.Field<decimal>("Year")).Distinct();

            DataTable dt = m_GranuleSpecial.GetAuditYearData(portIds, factorB, yearFrom, yearTo).ToTable();
            dt.Columns.Add("Tstamp", typeof(string));
            dt.Columns.Add("Wind", typeof(string));
            dt.Columns.Remove("Year");
            if (dvWind.Rows.Count > 0)
            {
                for (int d = 0; d < list.Count(); d++)
                {

                    for (int i = 0; i < factors.Length; i++)
                    {
                        //总值的除数
                        int x = 0;
                        //平均值
                        decimal all = 0;
                        for (int j = 0; j < pointIds.Length; j++)
                        {
                            if (dvWind.Rows[j * list.Count() + d][factors[i]] != null && dvWind.Rows[j * list.Count() + d][factors[i]].ToString() != "" && (dvWind.Rows[j * list.Count() + d][factors[i]]).IsNotNullOrDBNull())
                            {
                                x += 1;
                                all += Convert.ToDecimal(dvWind.Rows[j * list.Count() + d][factors[i]]);

                            }
                            else
                            {
                                all += 0;
                            }
                        }
                        if (x == 0)
                        {
                            dt.Rows[d][factors[i]] = 0;
                        }
                        else
                        {
                            dt.Rows[d][factors[i]] = all / x;
                        }
                    }
                }
            }

            
            string factorCodeWindDir = "a01008";//风向

            if (dt.Rows.Count > 0)
            {
                string windtype = "Sixteen";
                foreach (DataRow dr in dt.Rows)
                {
                    if (dr["Year"].ToString() != "")
                        dr["Tstamp"] = dr["Year"].ToString() + "年";
                    if (windtype == "Sixteen")
                    {
                        if (dr[factorCodeWindDir] != null)
                        {
                            dr["Wind"] = (SixteenGetWindName(Convert.ToDouble(dr[factorCodeWindDir])));
                        }
                    }
                    else
                    {
                        if (dr[factorCodeWindDir] != null)
                        {
                            dr["Wind"] = EightGetWindName(Convert.ToDouble(dr[factorCodeWindDir]));
                        }
                    }
                    foreach (string factor in factors)
                    {
                        if ((factor == "a34004" || factor == "a34002" || factor == "a21026" || factor == "a21004" || factor == "a05024") && dr[factor].ToString() != "")
                            dr[factor] = DecimalExtension.GetPollutantValue(Convert.ToDecimal(dr[factor]) * 1000, 0);
                        if (factor == "a21005" && dr[factor].ToString() != "")
                            dr[factor] = DecimalExtension.GetPollutantValue(Convert.ToDecimal(dr[factor]), 1);
                    }
                }
            }
            return dt.DefaultView;

        }
        /// <summary>
        /// 原始数据
        /// </summary>
        /// <param name="portIds"></param>
        /// <param name="factors"></param>
        /// <param name="dtStart"></param>
        /// <param name="dtEnd"></param>
        /// <returns></returns>
        public DataView GetAuditWeekDataNew(string[] pointIds, string portIds, string[] factors, int yearFrom, int weekOfYearFrom, int yearTo, int weekOfYearTo)
        {
            DataTable dvWind = new DataTable();

            //风向
            List<string> factorW = new List<string>();
            string[] factorB = new string[] { };

            if (factors.Length != 0 && factors[0] != "")
            {
                dvWind = m_GranuleSpecial.GetAuditWeekDataNew(pointIds, factors, yearFrom, weekOfYearFrom, yearTo, weekOfYearTo).ToTable();
                //风向
                factorW = factors.ToList();
                factorW.Add("a01001");
                factorW.Add("a01002");
                factorW.Add("a01006");
                factorW.Add("a01007");
                factorW.Add("a01008");
                factorB = factorW.ToArray();
            }
            else
            {
                factorW.Add("a01001");
                factorW.Add("a01002");
                factorW.Add("a01006");
                factorW.Add("a01007");
                factorW.Add("a01008");
                factorB = factorW.ToArray();
            }
            //复制表结构
            IEnumerable<DateTime> list = dvWind.AsEnumerable().Select(t => t.Field<DateTime>("WeekOfYear")).Distinct();

            DataTable dt = m_GranuleSpecial.GetAuditWeekData(portIds, factorB, yearFrom, weekOfYearFrom, yearTo, weekOfYearTo).ToTable();
            dt.Columns.Add("Tstamp", typeof(string));
            dt.Columns.Add("Wind", typeof(string));
            dt.Columns.Remove("Year");
            dt.Columns.Remove("WeekOfYear");
            if (dvWind.Rows.Count > 0)
            {
                for (int d = 0; d < list.Count(); d++)
                {

                    for (int i = 0; i < factors.Length; i++)
                    {
                        //总值的除数
                        int x = 0;
                        //平均值
                        decimal all = 0;
                        for (int j = 0; j < pointIds.Length; j++)
                        {
                            if (dvWind.Rows[j * list.Count() + d][factors[i]] != null && dvWind.Rows[j * list.Count() + d][factors[i]].ToString() != "" && (dvWind.Rows[j * list.Count() + d][factors[i]]).IsNotNullOrDBNull())
                            {
                                x += 1;
                                all += Convert.ToDecimal(dvWind.Rows[j * list.Count() + d][factors[i]]);

                            }
                            else
                            {
                                all += 0;
                            }
                        }
                        if (x == 0)
                        {
                            dt.Rows[d][factors[i]] = 0;
                        }
                        else
                        {
                            dt.Rows[d][factors[i]] = all / x;
                        }
                    }
                }
            }
            
            
            string factorCodeWindDir = "a01008";//风向

            if (dt.Rows.Count > 0)
            {
                string windtype = "Sixteen";
                foreach (DataRow dr in dt.Rows)
                {
                    if (dr["WeekOfYear"].ToString() != "")
                        dr["Tstamp"] = dr["Year"].ToString() + "年" + dr["WeekOfYear"].ToString() + "周";
                    if (windtype == "Sixteen")
                    {
                        if (dr[factorCodeWindDir] != null)
                        {
                            dr["Wind"] = (SixteenGetWindName(Convert.ToDouble(dr[factorCodeWindDir])));
                        }
                    }
                    else
                    {
                        if (dr[factorCodeWindDir] != null)
                        {
                            dr["Wind"] = EightGetWindName(Convert.ToDouble(dr[factorCodeWindDir]));
                        }
                    }
                    foreach (string factor in factors)
                    {
                        if ((factor == "a34004" || factor == "a34002" || factor == "a21026" || factor == "a21004" || factor == "a05024") && dr[factor].ToString() != "")
                            dr[factor] = DecimalExtension.GetPollutantValue(Convert.ToDecimal(dr[factor]) * 1000, 0);
                        if (factor == "a21005" && dr[factor].ToString() != "")
                            dr[factor] = DecimalExtension.GetPollutantValue(Convert.ToDecimal(dr[factor]), 1);
                    }
                }
            }
            return dt.DefaultView;

        }
        /// <summary>
        /// 原始数据
        /// </summary>
        /// <param name="portIds"></param>
        /// <param name="factors"></param>
        /// <param name="dtStart"></param>
        /// <param name="dtEnd"></param>
        /// <returns></returns>
        public DataView GetOriMonthData(string portIds, string[] factors, DateTime dtStart, DateTime dtEnd)
        {
            DataTable dt = m_GranuleSpecial.GetOriMonthData(portIds, factors, dtStart, dtEnd).ToTable();
            dt.Columns.Add("Tstamp", typeof(string));
            dt.Columns.Add("Wind", typeof(string));
            for (int i = 0; i < dt.Rows.Count; i++)
            {

            }
            string factorCodeWindDir = "a01008";//风向

            if (dt.Rows.Count > 0)
            {
                string windtype = "Sixteen";
                foreach (DataRow dr in dt.Rows)
                {
                    if (dr["DateTime"].ToString() != "")
                        dr["Tstamp"] = Convert.ToDateTime(dr["DateTime"]).ToString("yyyy年MM月");
                    if (windtype == "Sixteen")
                    {
                        if (dr[factorCodeWindDir] != null)
                        {
                            dr["Wind"] = (SixteenGetWindName(Convert.ToDouble(dr[factorCodeWindDir])));
                        }
                    }
                    else
                    {
                        if (dr[factorCodeWindDir] != null)
                        {
                            dr["Wind"] = EightGetWindName(Convert.ToDouble(dr[factorCodeWindDir]));
                        }
                    }
                    foreach (string factor in factors)
                    {
                        if ((factor == "a34004" || factor == "a34002" || factor == "a21026" || factor == "a21004" || factor == "a05024") && dr[factor].ToString() != "")
                            dr[factor] = DecimalExtension.GetPollutantValue(Convert.ToDecimal(dr[factor]) * 1000, 0);
                        if (factor == "a21005" && dr[factor].ToString() != "")
                            dr[factor] = DecimalExtension.GetPollutantValue(Convert.ToDecimal(dr[factor]), 1);
                    }
                }
            }
            return dt.DefaultView;

        }
        
        public DataView GetAuditHourData(string portIds, string[] factors, DateTime dtStart, DateTime dtEnd)
        {
            DataTable dt = m_GranuleSpecial.GetAuditHourData(portIds, factors, dtStart, dtEnd).ToTable();
            dt.Columns.Add("Wind", typeof(string));
            for (int i = 0; i < dt.Rows.Count; i++)
            {

            }
            string factorCodeWindDir = "a01008";//风向

            if (dt.Rows.Count > 0)
            {
                string windtype = "Sixteen";
                foreach (DataRow dr in dt.Rows)
                {
                    if (windtype == "Sixteen")
                    {
                        if (dr[factorCodeWindDir] != null)
                        {
                            dr["Wind"] = (SixteenGetWindName(Convert.ToDouble(dr[factorCodeWindDir])));
                        }
                    }
                    else
                    {
                        if (dr[factorCodeWindDir] != null)
                        {
                            dr["Wind"] = EightGetWindName(Convert.ToDouble(dr[factorCodeWindDir]));
                        }
                    }
                    foreach (string factor in factors)
                    {
                        if ((factor == "a34004" || factor == "a34002" || factor == "a21026" || factor == "a21004" || factor == "a05024") && dr[factor].ToString() != "")
                            dr[factor] = DecimalExtension.GetPollutantValue(Convert.ToDecimal(dr[factor]) * 1000, 0);
                        if (factor == "a21005" && dr[factor].ToString() != "")
                            dr[factor] = DecimalExtension.GetPollutantValue(Convert.ToDecimal(dr[factor]), 1);
                    }
                }
            }
            return dt.DefaultView;

        }
        /// <summary>
        /// 原始数据
        /// </summary>
        /// <param name="portIds"></param>
        /// <param name="factors"></param>
        /// <param name="dtStart"></param>
        /// <param name="dtEnd"></param>
        /// <returns></returns>
        public DataView GetAuditDayData(string portIds, string[] factors, DateTime dtStart, DateTime dtEnd)
        {
            DataTable dt = m_GranuleSpecial.GetAuditDayData(portIds, factors, dtStart, dtEnd).ToTable();
            dt.Columns.Add("Tstamp", typeof(string));
            dt.Columns.Add("Wind", typeof(string));
            for (int i = 0; i < dt.Rows.Count; i++)
            {

            }
            string factorCodeWindDir = "a01008";//风向

            if (dt.Rows.Count > 0)
            {
                string windtype = "Sixteen";
                foreach (DataRow dr in dt.Rows)
                {
                    if (dr["DateTime"].ToString() != "")
                        dr["Tstamp"] = Convert.ToDateTime(dr["DateTime"]).ToString("yyyy-MM-dd");
                    if (windtype == "Sixteen")
                    {
                        if (dr[factorCodeWindDir] != null)
                        {
                            dr["Wind"] = (SixteenGetWindName(Convert.ToDouble(dr[factorCodeWindDir])));
                        }
                    }
                    else
                    {
                        if (dr[factorCodeWindDir] != null)
                        {
                            dr["Wind"] = EightGetWindName(Convert.ToDouble(dr[factorCodeWindDir]));
                        }
                    }
                    foreach (string factor in factors)
                    {
                        if ((factor == "a34004" || factor == "a34002" || factor == "a21026" || factor == "a21004" || factor == "a05024") && dr[factor].ToString() != "")
                            dr[factor] = DecimalExtension.GetPollutantValue(Convert.ToDecimal(dr[factor]) * 1000, 0);
                        if (factor == "a21005" && dr[factor].ToString() != "")
                            dr[factor] = DecimalExtension.GetPollutantValue(Convert.ToDecimal(dr[factor]), 1);
                    }
                }
            }
            return dt.DefaultView;
        }
        /// <summary>
        /// 原始数据
        /// </summary>
        /// <param name="portIds"></param>
        /// <param name="factors"></param>
        /// <param name="dtStart"></param>
        /// <param name="dtEnd"></param>
        /// <returns></returns>
        public DataView GetAuditMonthData(string portIds, string[] factors, DateTime dtStart, DateTime dtEnd)
        {
            DataTable dt = m_GranuleSpecial.GetAuditMonthData(portIds, factors, dtStart, dtEnd).ToTable();
            dt.Columns.Add("Tstamp", typeof(string));
            dt.Columns.Add("Wind", typeof(string));
            for (int i = 0; i < dt.Rows.Count; i++)
            {

            }
            string factorCodeWindDir = "a01008";//风向

            if (dt.Rows.Count > 0)
            {
                string windtype = "Sixteen";
                foreach (DataRow dr in dt.Rows)
                {
                    if (dr["DateTime"].ToString() != "")
                        dr["Tstamp"] = Convert.ToDateTime(dr["DateTime"]).ToString("yyyy年MM月");
                    if (windtype == "Sixteen")
                    {
                        if (dr[factorCodeWindDir] != null)
                        {
                            dr["Wind"] = (SixteenGetWindName(Convert.ToDouble(dr[factorCodeWindDir])));
                        }
                    }
                    else
                    {
                        if (dr[factorCodeWindDir] != null)
                        {
                            dr["Wind"] = EightGetWindName(Convert.ToDouble(dr[factorCodeWindDir]));
                        }
                    }
                    foreach (string factor in factors)
                    {
                        if ((factor == "a34004" || factor == "a34002" || factor == "a21026" || factor == "a21004" || factor == "a05024") && dr[factor].ToString() != "")
                            dr[factor] = DecimalExtension.GetPollutantValue(Convert.ToDecimal(dr[factor]) * 1000, 0);
                        if (factor == "a21005" && dr[factor].ToString() != "")
                            dr[factor] = DecimalExtension.GetPollutantValue(Convert.ToDecimal(dr[factor]), 1);
                    }
                }
            }
            return dt.DefaultView;

        }
        /// <summary>
        /// 原始数据
        /// </summary>
        /// <param name="portIds"></param>
        /// <param name="factors"></param>
        /// <param name="dtStart"></param>
        /// <param name="dtEnd"></param>
        /// <returns></returns>
        public DataView GetAuditWeekData(string portIds, string[] factors, int yearFrom, int weekOfYearFrom, int yearTo, int weekOfYearTo)
        {
            DataTable dt = m_GranuleSpecial.GetAuditWeekData(portIds, factors, yearFrom, weekOfYearFrom, yearTo, weekOfYearTo).ToTable();
            dt.Columns.Add("Tstamp", typeof(string));
            dt.Columns.Add("Wind", typeof(string));
            for (int i = 0; i < dt.Rows.Count; i++)
            {

            }
            string factorCodeWindDir = "a01008";//风向

            if (dt.Rows.Count > 0)
            {
                string windtype = "Sixteen";
                foreach (DataRow dr in dt.Rows)
                {
                    if (dr["WeekOfYear"].ToString() != "")
                        dr["Tstamp"] = dr["Year"].ToString() + "年" + dr["WeekOfYear"].ToString() + "周";
                    if (windtype == "Sixteen")
                    {
                        if (dr[factorCodeWindDir] != null)
                        {
                            dr["Wind"] = (SixteenGetWindName(Convert.ToDouble(dr[factorCodeWindDir])));
                        }
                    }
                    else
                    {
                        if (dr[factorCodeWindDir] != null)
                        {
                            dr["Wind"] = EightGetWindName(Convert.ToDouble(dr[factorCodeWindDir]));
                        }
                    }
                    foreach (string factor in factors)
                    {
                        if ((factor == "a34004" || factor == "a34002" || factor == "a21026" || factor == "a21004" || factor == "a05024") && dr[factor].ToString() != "")
                            dr[factor] = DecimalExtension.GetPollutantValue(Convert.ToDecimal(dr[factor]) * 1000, 0);
                        if (factor == "a21005" && dr[factor].ToString() != "")
                            dr[factor] = DecimalExtension.GetPollutantValue(Convert.ToDecimal(dr[factor]), 1);
                    }
                }
            }
            return dt.DefaultView;

        }
        /// <summary>
        /// 原始数据
        /// </summary>
        /// <param name="portIds"></param>
        /// <param name="factors"></param>
        /// <param name="dtStart"></param>
        /// <param name="dtEnd"></param>
        /// <returns></returns>
        public DataView GetAuditSeasonData(string portIds, string[] factors, int yearFrom, int seasonOfYearFrom, int yearTo, int seasonOfYearTo)
        {
            DataTable dt = m_GranuleSpecial.GetAuditSeasonData(portIds, factors, yearFrom, seasonOfYearFrom, yearTo, seasonOfYearTo).ToTable();
            dt.Columns.Add("Tstamp", typeof(string));
            dt.Columns.Add("Wind", typeof(string));
            for (int i = 0; i < dt.Rows.Count; i++)
            {

            }
            string factorCodeWindDir = "a01008";//风向

            if (dt.Rows.Count > 0)
            {
                string windtype = "Sixteen";
                foreach (DataRow dr in dt.Rows)
                {
                    if (dr["SeasonOfYear"].ToString() != "")
                        dr["Tstamp"] = dr["Year"].ToString() + "年" + dr["SeasonOfYear"].ToString() + "季";
                    if (windtype == "Sixteen")
                    {
                        if (dr[factorCodeWindDir] != null)
                        {
                            dr["Wind"] = (SixteenGetWindName(Convert.ToDouble(dr[factorCodeWindDir])));
                        }
                    }
                    else
                    {
                        if (dr[factorCodeWindDir] != null)
                        {
                            dr["Wind"] = EightGetWindName(Convert.ToDouble(dr[factorCodeWindDir]));
                        }
                    }
                    foreach (string factor in factors)
                    {
                        if ((factor == "a34004" || factor == "a34002" || factor == "a21026" || factor == "a21004" || factor == "a05024") && dr[factor].ToString() != "")
                            dr[factor] = DecimalExtension.GetPollutantValue(Convert.ToDecimal(dr[factor]) * 1000, 0);
                        if (factor == "a21005" && dr[factor].ToString() != "")
                            dr[factor] = DecimalExtension.GetPollutantValue(Convert.ToDecimal(dr[factor]), 1);
                    }
                }
            }
            return dt.DefaultView;

        }
        /// <summary>
        /// 原始数据
        /// </summary>
        /// <param name="portIds"></param>
        /// <param name="factors"></param>
        /// <param name="dtStart"></param>
        /// <param name="dtEnd"></param>
        /// <returns></returns>
        public DataView GetAuditYearData(string portIds, string[] factors, int yearFrom, int yearTo)
        {
            DataTable dt = m_GranuleSpecial.GetAuditYearData(portIds, factors, yearFrom, yearTo).ToTable();
            dt.Columns.Add("Tstamp", typeof(string));
            dt.Columns.Add("Wind", typeof(string));
            for (int i = 0; i < dt.Rows.Count; i++)
            {

            }
            string factorCodeWindDir = "a01008";//风向

            if (dt.Rows.Count > 0)
            {
                string windtype = "Sixteen";
                foreach (DataRow dr in dt.Rows)
                {
                    if (dr["Year"].ToString() != "")
                        dr["Tstamp"] = dr["Year"].ToString() + "年";
                    if (windtype == "Sixteen")
                    {
                        if (dr[factorCodeWindDir] != null)
                        {
                            dr["Wind"] = (SixteenGetWindName(Convert.ToDouble(dr[factorCodeWindDir])));
                        }
                    }
                    else
                    {
                        if (dr[factorCodeWindDir] != null)
                        {
                            dr["Wind"] = EightGetWindName(Convert.ToDouble(dr[factorCodeWindDir]));
                        }
                    }
                    foreach (string factor in factors)
                    {
                        if ((factor == "a34004" || factor == "a34002" || factor == "a21026" || factor == "a21004" || factor == "a05024") && dr[factor].ToString() != "")
                            dr[factor] = DecimalExtension.GetPollutantValue(Convert.ToDecimal(dr[factor]) * 1000, 0);
                        if (factor == "a21005" && dr[factor].ToString() != "")
                            dr[factor] = DecimalExtension.GetPollutantValue(Convert.ToDecimal(dr[factor]), 1);
                    }
                }
            }
            return dt.DefaultView;

        }
    }
}
