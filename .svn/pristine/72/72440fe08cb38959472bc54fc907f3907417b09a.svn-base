<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="notifyIcon1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="notifyIcon1.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        6NgAmuC6AJrfmwCa3pIAmd2fAJbcrgCU27sAkdnBAI/WwQCM1LQAitKaAInRjAC39r0JuvbQGL728yHA
        9v8nwfX/KcH1/CfA9OcmvvPZJb3z0yW78s4luvLLN8L011fQ+fJk1/z/Ytn+/1/Z//9c2P//Xdb+/2DV
        /f9Ty/f2Mrnu4iGu6NYgrejRIKzn1iCr5uQhqubyIajl/x+l4v8aoN//E5rb8weQ1dAAitK9ALj3vBvB
        +M5Kz/rxZ9j7/3jd/P963fz/b9n7+WbW+vVi1PnzYNL58V/S+e9k1frzbtr9+2/c/v9l2///X9n//1zY
        //9e2P//Zdn+/2XV/Pxez/j3Wcr181XI9PNVyPT1Wsn1+WDL9v1lzfb/YMr1/1HB8P85s+jxFZzczgCM
        1LwAufi7HsT5zVLT+/Fv3Pz/et/9/3ne/f9s2fz/Y9b7/GHV+vZf1PnyXtP582PW+vdw3P38cd7//2fb
        //9g2v//Xdn//2DZ//9m2f7/Ztb8/F/Q+fdZy/bzVcn181XJ9fVay/b5YM33/WXP+P9izff/V8f0/0C6
        7PEXoN/NAJDWuwC7+bwRwPnPLsj68jbK+v8ux/n/KMT4/yTC9/wiwffuJMD22iS/9dEjvvTVNsb24lzV
        +/Zr2/3/Ztv//2La//9g2f//YNj+/2LX/f9Uzvn2M73x4iGy7NYgsevRILHr1iCw6uQhr+nyIa7p/ySv
        6f8qsen/I6zm8g2e388AlNq8ALz5mQm++acYwvnCFsD4ywS698UAtvW/ALX1uAC09KoAs/OVALHynQCw
        8cEbvPTfVdL69W7c/f9r3f7/aNz//2bb//9l2f7/Y9b8/0vJ9/MYse3YAKLmugCh5ZsAoOSSAJ/jnwCd
        4a4Am+C7A57hxRGk48sSpOPCB5zfpwCX3JkAvfpVBb76WQ6/+WINvvhcALn3RwC09T0As/U7ALP0NQCy
        8zIAsPJfALHyuh2+9e9f1fv7fOD+/3Tf/v9v3v//bt3//2zb/v9o1/z/Tsr39Bmz7toAo+ilAKHmWQCf
        4zIAneIzAJvhNwCZ3zwAnOBHCqHiXAuh4mIEnN9ZAJndVQC++yQAvfskALz6IwC7+RgAvfwEALf2AAC3
        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
        AAfgAAAH4AGAB+ABgAf4AYAf+AGAP/////8=
</value>
  </data>
</root>