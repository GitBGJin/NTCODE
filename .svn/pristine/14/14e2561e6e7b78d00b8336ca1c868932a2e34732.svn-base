using log4net;
using SmartEP.Core.Enums;
using SmartEP.Core.Generic;
using SmartEP.Core.Interfaces;
using SmartEP.DomainModel;
using SmartEP.DomainModel.BaseData;
using SmartEP.Service.AutoMonitoring.Air;
using SmartEP.Service.BaseData.BusinessRule;
using SmartEP.Service.BaseData.MPInfo;
using SmartEP.Service.Core.Enums;
using SmartEP.Service.DataAnalyze.Air.DataQuery;
using SmartEP.Service.Frame;
using SmartEP.Utilities.AdoData;
using SmartEP.Utilities.Calendar;
using SmartEP.Utilities.DataTypes.ExtensionMethods;
using SmartEP.Utilities.Office;
using SmartEP.Utilities.Web.UI;
using System;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Linq;
using System.Text;
using System.Text.RegularExpressions;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;
using Telerik.Web.UI;

namespace SmartEP.WebUI.Pages.EnvAir.SuperStationManagement
{
    /// <summary>
    /// 名称：OzonePrecursor.cs
    /// 创建人：尤红兵
    /// 创建日期：2015-11-06
    /// 维护人员：
    /// 最新维护人员：刘晋
    /// 最新维护日期：2017-05-26
    /// 功能摘要：VOCs页面
    /// 版权所有(C)：江苏远大信息股份有限公司
    /// </summary>
    public partial class OzonePrecursor : SmartEP.WebUI.Common.BasePage
    {
        /// <summary>
        /// 数据处理服务
        /// </summary>
        InfectantBy1Service m_Min1Data = Singleton<InfectantBy1Service>.GetInstance();
        InfectantBy5Service m_Min5Data = Singleton<InfectantBy5Service>.GetInstance();
        InfectantBy60Service m_Min60Data = Singleton<InfectantBy60Service>.GetInstance();
        InfectantByDayService m_DayOriData = Singleton<InfectantByDayService>.GetInstance();
        InfectantByMonthService m_MonthOriData = Singleton<InfectantByMonthService>.GetInstance();
        DataQueryByHourService m_HourData = Singleton<DataQueryByHourService>.GetInstance();
        DataQueryByDayService m_DayData = Singleton<DataQueryByDayService>.GetInstance();
        DataQueryByWeekService m_WeekData = Singleton<DataQueryByWeekService>.GetInstance();
        DataQueryByMonthService m_MonthData = Singleton<DataQueryByMonthService>.GetInstance();
        DataQueryBySeasonService m_SeasonData = Singleton<DataQueryBySeasonService>.GetInstance();
        DataQueryByYearService m_YearData = Singleton<DataQueryByYearService>.GetInstance();
        InstrumentChannelService m_InstrumentChannelService = Singleton<InstrumentChannelService>.GetInstance();
        MonitoringPointAirService monitoringPointAir = new MonitoringPointAirService();
        //获取因子上下限数据处理服务
        ExcessiveSettingService m_ExcessiveSettingService = new ExcessiveSettingService();
        //代码项服务层
        DictionaryService dicService = new DictionaryService();
        
        string LZSPfactor = string.Empty;
        //获取因子小数位
        // channelCode 因子代码 例：CO的code是a21005  （ channelCode=a21005）
        SmartEP.Service.BaseData.Channel.AirPollutantService m_AirPollutantService = new SmartEP.Service.BaseData.Channel.AirPollutantService();
        /// <summary>
        /// 选择因子
        /// </summary>
        private IList<IPollutant> factors = null;

        private IList<IPollutant> newFactors = null;

        private IList<IPollutant> yzfactors = null;
        private string[] strFactors = null;
        /// <summary>
        /// 选择站点
        /// </summary>
        private IList<IPoint> points = null;
        private string[] portIds = null;
        /// <summary>
        /// 统计
        /// </summary>
        DataView dvStatistical = null;
        /// <summary>
        /// 全局日数据表 List
        /// </summary>
        DataTable dt = null;
        /// <summary>
        /// 全局年数据表 List
        /// </summary>
        DataTable dtYear = null;
        /// <summary>
        /// 数据库处理类
        /// </summary>
        DatabaseHelper g_DatabaseHelper = Singleton<DatabaseHelper>.GetInstance();
        /// <summary>
        /// 全局日数据表 图标
        /// </summary>
        DataTable dtIcon = null;
        /// <summary>
        /// 全局周数据表 List
        /// </summary>
        DataTable dtWeek = null;
        /// <summary>
        /// 全局季数据表 List
        /// </summary>
        DataTable dtSeason = null;
        /// </summary>
        //获取一个日志记录器
        ILog log = LogManager.GetLogger("FileLogging");
        static DateTime dtms = Convert.ToDateTime(DateTime.Now.ToString("yyyy-MM-dd HH:00"));
        /// <summary>
        /// 全局周数据表 图标
        /// </summary>
        DataTable dtWeekIcon = null;
        /// <summary>
        /// 全局日数据表 List
        /// </summary>
        DataTable dtMonth = null;
        //DataTable dtTime = null;
        //DataTable dtData = null;
        //string Time = string.Empty;
        //string data = string.Empty;
        /// <summary>
        /// 国家标记位
        /// </summary>
        IQueryable<V_CodeMainItemEntity> siteTypeEntites = null;
        /// <summary>
        /// 全局日数据表 图标
        /// </summary>
        DataTable dtMonthIcon = null;
        protected void Page_Load(object sender, EventArgs e)
        {
            if (!IsPostBack)
            {
                //hdPointName.Value = cbPoint.SelectedText;
                InitControl();
                //PageOn.RecPageChanged += new CustomControl.PageOn.PageOnEventHandler(PageOn_RecPageChanged); 
            }
        }
        //public void PageOn_RecPageChanged(object sender, EventArgs args)
        //{
        //    //To do something 
        //} 
        #region 页面控件初始化
        /// <summary>
        /// 初始化控件
        /// </summary>
        private void InitControl()
        {
            //RadDropDownTree1.
            //初始化绑定类
            //string FactorNames = System.Configuration.ConfigurationManager.AppSettings["TVOCsName"];
            //factorCbxRsm.SetFactorValuesFromNames(FactorNames);
            string VOCsKW = System.Configuration.ConfigurationManager.AppSettings["VOCsKW"];
            factorCbxRsm1.SetFactorValuesFromCodes(VOCsKW);
            string[] strType = { "非甲烷碳氢化合物", "卤代烃类VOCs", "含氧（氮）类VOCs","TVOC" };
            string sql = string.Format(@"select VOC2Type from [dbo].[DT_VOC2Type]
                                        order by OrderByNum");
            DataTable tdt = g_DatabaseHelper.ExecuteDataTable(sql, "AMS_BaseDataConnection");
            string[] tdType = dtToArr(tdt);

            tbFactor.Items.Clear();
            cbFactor.Items.Clear();
            for (int i = 0; i < tdType.Length; i++)
            {
                RadComboBoxItem cmbItemFactor = new RadComboBoxItem();
                cmbItemFactor.Text = tdType[i].ToString();
                cmbItemFactor.Value = tdType[i].ToString();

                cmbItemFactor.Checked = true;
                tbFactor.Items.Add(cmbItemFactor);
            }
            for (int i = 0; i < strType.Length; i++)
            {
                RadComboBoxItem cmbItemFactor = new RadComboBoxItem();
                cmbItemFactor.Text = strType[i].ToString();
                cmbItemFactor.Value = strType[i].ToString();

                cmbItemFactor.Checked = true;
                cbFactor.Items.Add(cmbItemFactor);
            }
            
            tbFactor.DataBind();
            cbFactor.DataBind();
            //时间框初始化
            DateTime dt = DateTime.Now;
            DateTime dtt = DateTime.Now.AddDays(-1);
            dt.ToLongTimeString().ToString();
            dtt.ToLongTimeString().ToString();
            dtpBegin.SelectedDate = Convert.ToDateTime(DateTime.Now.AddDays(-1).ToString("yyyy-MM-dd HH:mm"));
            dtpEnd.SelectedDate = Convert.ToDateTime(DateTime.Now.ToString("yyyy-MM-dd HH:mm"));

            dtpDayBegin.SelectedDate = Convert.ToDateTime(DateTime.Now.AddDays(-7).ToString("yyyy-MM-dd"));
            dtpDayEnd.SelectedDate = Convert.ToDateTime(DateTime.Now.AddDays(-1).ToString("yyyy-MM-dd"));

            dtpMonthBegin.SelectedDate = Convert.ToDateTime(DateTime.Now.AddYears(-1).ToString("yyyy-MM"));
            dtpMonthEnd.SelectedDate = Convert.ToDateTime(DateTime.Now.AddMonths(-1).ToString("yyyy-MM"));

            hourBegin.SelectedDate = Convert.ToDateTime(DateTime.Now.AddHours(-47).ToString("yyyy-MM-dd HH:00"));
            hourEnd.SelectedDate = Convert.ToDateTime(DateTime.Now.ToString("yyyy-MM-dd HH:00"));
            dayBegin.SelectedDate = Convert.ToDateTime(DateTime.Now.AddDays(-7).ToString("yyyy-MM-dd"));
            dayEnd.SelectedDate = Convert.ToDateTime(DateTime.Now.AddDays(-1).ToString("yyyy-MM-dd"));
            monthBegin.SelectedDate = Convert.ToDateTime(DateTime.Now.AddMonths(-1).ToString("yyyy-MM"));
            monthEnd.SelectedDate = Convert.ToDateTime(DateTime.Now.ToString("yyyy-MM"));
            seasonBegin.SelectedDate = Convert.ToDateTime(DateTime.Now.ToString("yyyy-MM"));
            seasonEnd.SelectedDate = Convert.ToDateTime(DateTime.Now.ToString("yyyy-MM"));
            weekBegin.SelectedDate = Convert.ToDateTime(DateTime.Now.AddMonths(-1).ToString("yyyy-MM"));
            weekEnd.SelectedDate = Convert.ToDateTime(DateTime.Now.ToString("yyyy-MM"));

            yearBegin.SelectedDate = DateTime.Now.AddYears(-1);
            yearEnd.SelectedDate = DateTime.Now;

            BindWeekComboBox();//绑定周
            SetLiteral();//显示周日期范围
            //
            TypeNameGroup.Items.Add(new ListItem("一级类", "一级类"));
            TypeNameGroup.Items.Add(new ListItem("二级类", "二级类"));
            TypeNameGroup.Items.Add(new ListItem("分因子", "分因子"));

            TypeNameGroup.SelectedValue = "一级类";
            //数据类型
            radlDataType.Items.Add(new ListItem("小时", PollutantDataType.Hour.ToString()));
            radlDataType.Items.Add(new ListItem("日", PollutantDataType.Day.ToString()));
            radlDataType.Items.Add(new ListItem("周", PollutantDataType.Week.ToString()));
            radlDataType.Items.Add(new ListItem("月", PollutantDataType.Month.ToString()));
            radlDataType.Items.Add(new ListItem("季", PollutantDataType.Season.ToString()));
            radlDataType.Items.Add(new ListItem("年", PollutantDataType.Year.ToString()));
            radlDataType.SelectedValue = PollutantDataType.Hour.ToString();

            //RadioButtonList1.Items.Add(new ListItem("一分钟数据", PollutantDataType.Min1.ToString()));
            //RadioButtonList1.Items.Add(new ListItem("五分钟数据", PollutantDataType.Min5.ToString()));



            RadioButtonList1.Items.Add(new ListItem("小时", PollutantDataType.Min60.ToString()));
            RadioButtonList1.Items.Add(new ListItem("日", PollutantDataType.OriDay.ToString()));
            RadioButtonList1.Items.Add(new ListItem("月", PollutantDataType.OriMonth.ToString()));
            RadioButtonList1.SelectedValue = PollutantDataType.Min60.ToString();
            dbtMonth.Visible = false;

            dbtWeek.Visible = false;
        }
        #endregion
        /// <summary>
        /// 默认是否常规站字段为空
        /// </summary>
        string isAudit = string.Empty;
        string isSuper = string.Empty;
        protected override void OnPreInit(EventArgs e)
        {
            isSuper = PageHelper.GetQueryString("superOrNot");
            pointCbxRsm.isSuper(isSuper);
            isAudit = PageHelper.GetQueryString("auditOrNot");
            if (isAudit != null && isAudit != "")
            {
                factorCbxRsm1.isAudit(isAudit);
            }
        }

        #region 绑定Grid
        /// <summary>
        /// 绑定RadGrid
        /// </summary>
        public void BindGrid(string type)
        {
            if (!IsPostBack)
            {

            }
            try
            {
                List<string> listyzName = new List<string>();
                List<string> listyzCode = new List<string>();
                yzfactors = factorCbxRsm1.GetFactors();
                foreach (IPollutant factor in yzfactors)
                {
                    listyzCode.Add(factor.PollutantCode);
                    listyzName.Add(factor.PollutantName);
                }
                string[] yzfactorCodes = listyzCode.ToArray();
                string[] yzfactorNames = listyzName.ToArray();


                List<string> listName = new List<string>();
                List<string> listTypeName = new List<string>();
                List<string> cblistTypeName = new List<string>();
                string VOC1Type = string.Empty;
                for (int i = 0; i < cbFactor.CheckedItems.Count(); i++)
                {
                    listName.Add(cbFactor.CheckedItems[i].Text);
                    cblistTypeName.Add(cbFactor.CheckedItems[i].Text);
                    if (cbFactor.CheckedItems[i].Text.Equals("非甲烷碳氢化合物"))
                    {
                        VOC1Type += "'非甲烷碳氢化合物',";
                        listTypeName.Add("非甲烷碳氢化合物");
                    }
                    else if (cbFactor.CheckedItems[i].Text.Equals("卤代烃类VOCs"))
                    {
                        VOC1Type += "'卤代烃类VOCs',";
                        listTypeName.Add("卤代烃类VOCs");
                    }
                    else if (cbFactor.CheckedItems[i].Text.Equals("含氧（氮）类VOCs"))
                    {
                        VOC1Type += "'含氧（氮）类VOCs',";
                        listTypeName.Add("含氧（氮）类VOCs");
                    }
                    else if (cbFactor.CheckedItems[i].Text.Equals("TVOC"))
                    {
                        VOC1Type += "'含氧（氮）类VOCs',";
                        listTypeName.Add("TVOC");
                    }
                }
                //二级类获取选中名称
                List<string> listTbTypeName = new List<string>();
                for (int i = 0; i < tbFactor.CheckedItems.Count(); i++)
                {
                    listTbTypeName.Add(tbFactor.CheckedItems[i].Text);
                    
                }
                string [] tbfactorNames = listTbTypeName.ToArray();

                IPollutant iiFactorCode = m_AirPollutantService.GetPollutantInfo("a05024");
                int Ode = int.TryParse(iiFactorCode.PollutantDecimalNum, out Ode) ? Ode : 3;
                int Ade = Ode;
                string[] typeName = listTypeName.ToArray();
                //给饼图传值：选中的大类别
                string typeNames = string.Empty;
                foreach(string TP in typeName)
                {
                    typeNames += TP+",";
                }
                //隐藏域传值
                hdTypes.Value = typeNames;
                string[] factorNames = listName.ToArray();
                if (VOC1Type == "")
                {
                    string sql = string.Empty;
                    if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                    {
                        sql = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] where PollutantCode in (SELECT  PollutantCode FROM [Standard].[TB_PollutantCode] where VOCType!='2') order by VOC1TypeGuid");
                    }
                    else
                    {
                        sql = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] order by VOC1TypeGuid");
                    }
                    dt = g_DatabaseHelper.ExecuteDataTable(sql, "AMS_BaseDataConnection");
                }
                else
                {
                   
                    string sql = string.Empty;
                    if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                    {
                        sql = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type]
                                        where VOC1TypeGuid IN (SELECT RowGuid from [dbo].[DT_VOC1Type] where VOC1Type in ({0})) and PollutantCode in (SELECT  PollutantCode FROM [Standard].[TB_PollutantCode] where VOCType!='2') order by VOC1TypeGuid", VOC1Type.TrimEnd(','));
                    }
                    else
                    {
                        sql = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type]
                                        where VOC1TypeGuid IN (SELECT RowGuid from [dbo].[DT_VOC1Type] where VOC1Type in ({0})) order by VOC1TypeGuid"
                , VOC1Type.TrimEnd(','));
                    }
                    dt = g_DatabaseHelper.ExecuteDataTable(sql, "AMS_BaseDataConnection");
                }
                
                string[] factorCodes = dtToArr(dt);
                
                string allSqls=string.Empty;
                if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                {
                    allSqls = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] where PollutantCode in (SELECT  PollutantCode FROM [Standard].[TB_PollutantCode] where VOCType!='2') order by VOC1TypeGuid");
                }
                else
                {
                    allSqls = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type]  order by VOC1TypeGuid");
                }
                
                DataTable alldt = g_DatabaseHelper.ExecuteDataTable(allSqls, "AMS_BaseDataConnection");
                string[] allCode = dtToArr(alldt);

                string factorCodel = string.Empty;
                //分小类
                foreach (string factorcode in factorCodes)
                {
                    factorCodel += "'" + factorcode + "',";
                }
                string sqll = string.Format(@"select distinct VOC2Type,voc2.OrderByNum from [dbo].[DT_VOC2Type] as voc2
                                        join [dbo].[DT_VOC3Type] as voc3 
                                        on voc2.RowGuid=voc3.VOC2TypeGuid 
                                        where voc3.PollutantCode in ({0}) order by voc2.OrderByNum DESC", factorCodel.TrimEnd(','));
                DataTable dtl = g_DatabaseHelper.ExecuteDataTable(sqll, "AMS_BaseDataConnection");
                dtl.Columns.Remove("OrderByNum");
                string[] TypeName = dtToArr(dtl);

                
                factors = m_AirPollutantService.GetDefaultFactors(factorCodes);

                newFactors = m_AirPollutantService.GetDefaultFactors(yzfactorCodes);

                DateTime dtBegion = DateTime.Now;
                DateTime dtEnd = DateTime.Now;
                points = pointCbxRsm.GetPoints();
                portIds = pointCbxRsm.GetPointValues(SmartEP.Core.Enums.CbxRsmReturnType.ID);
                //给饼图传值：站点
                string pointIds = string.Empty;
                foreach(string PI in portIds)
                {
                    pointIds += PI + ",";
                }
                //隐藏域传值
                hdPoints.Value = pointIds;
                hdDataType.Value = ddlDataSource.SelectedValue;


                //string[] portIds = { cbPoint.SelectedValue };
                
                //生成RadGrid的绑定列
                dvStatistical = null;

                //每页显示数据个数            
                int pageSize1 = int.MaxValue;
                //当前页的序号
                int pageNo1 = 0;
                var auditData1 = new DataView();

                //每页显示数据个数            
                int pageSize = gridAudit.PageSize;
                //当前页的序号
                int pageNo = gridAudit.CurrentPageIndex;

                var auditData = new DataView();
                //数据总行数
                int recordTotal = 0;
                string orderBy = "PointId asc,DateTime desc";
                if (factorNames.Contains("非甲烷碳氢化合物"))
                {
                    GridColumnGroup cg1 = new GridColumnGroup();
                    cg1.Name = "非甲烷";
                    cg1.HeaderText = "非甲烷碳氢化合物";
                    cg1.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;
                    gridAudit.MasterTableView.ColumnGroups.Add(cg1);
                }
                if (factorNames.Contains("卤代烃类VOCs"))
                {
                    GridColumnGroup cg2 = new GridColumnGroup();
                    cg2.Name = "卤代烃";
                    cg2.HeaderText = "卤代烃类VOCs";
                    cg2.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;
                    gridAudit.MasterTableView.ColumnGroups.Add(cg2);
                }
                if (factorNames.Contains("含氧（氮）类VOCs"))
                {
                    GridColumnGroup cg4 = new GridColumnGroup();
                    cg4.Name = "含氧";
                    cg4.HeaderText = "含氧（氮）类VOCs";
                    cg4.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;
                    gridAudit.MasterTableView.ColumnGroups.Add(cg4);
                }
                if (tbfactorNames.Contains("高碳烷烃C6-C12"))
                {
                    GridColumnGroup cg5 = new GridColumnGroup();
                    cg5.Name = "高碳烷烃";
                    cg5.HeaderText = "高碳烷烃C6-C12";
                    cg5.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;
                    cg5.ParentGroupName = "非甲烷";
                    gridAudit.MasterTableView.ColumnGroups.Add(cg5);
                }
                if (tbfactorNames.Contains("炔烃"))
                {
                    GridColumnGroup cg6 = new GridColumnGroup();
                    cg6.Name = "炔烃";
                    cg6.HeaderText = "炔烃";
                    cg6.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;
                    cg6.ParentGroupName = "非甲烷";
                    gridAudit.MasterTableView.ColumnGroups.Add(cg6);
                }
                if (tbfactorNames.Contains("高碳烯烃C6-C12"))
                {
                    GridColumnGroup cg7 = new GridColumnGroup();
                    cg7.Name = "高碳烯烃";
                    cg7.HeaderText = "高碳烯烃C6-C12";
                    cg7.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;
                    cg7.ParentGroupName = "非甲烷";
                    gridAudit.MasterTableView.ColumnGroups.Add(cg7);
                }
                if (tbfactorNames.Contains("低碳烯烃C2-C5"))
                {
                    GridColumnGroup cg8 = new GridColumnGroup();
                    cg8.Name = "低碳烯烃";
                    cg8.HeaderText = "低碳烯烃C2-C5";
                    cg8.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;
                    cg8.ParentGroupName = "非甲烷";
                    gridAudit.MasterTableView.ColumnGroups.Add(cg8);
                }
                if (tbfactorNames.Contains("苯系物"))
                {
                    GridColumnGroup cg9 = new GridColumnGroup();
                    cg9.Name = "苯系物";
                    cg9.HeaderText = "苯系物";
                    cg9.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;
                    cg9.ParentGroupName = "非甲烷";
                    gridAudit.MasterTableView.ColumnGroups.Add(cg9);
                }
                if (tbfactorNames.Contains("低碳烷烃C2-C5"))
                {
                    GridColumnGroup cg10 = new GridColumnGroup();
                    cg10.Name = "低碳烷烃";
                    cg10.HeaderText = "低碳烷烃C2-C5";
                    cg10.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;
                    cg10.ParentGroupName = "非甲烷";
                    gridAudit.MasterTableView.ColumnGroups.Add(cg10);
                }
                if (tbfactorNames.Contains("氟利昂"))
                {
                    GridColumnGroup cg11 = new GridColumnGroup();
                    cg11.Name = "氟利昂";
                    cg11.HeaderText = "氟利昂";
                    cg11.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;
                    cg11.ParentGroupName = "卤代烃";
                    gridAudit.MasterTableView.ColumnGroups.Add(cg11);
                }
                if (tbfactorNames.Contains("卤代芳香烃"))
                {
                    GridColumnGroup cg12 = new GridColumnGroup();
                    cg12.Name = "卤代芳香烃";
                    cg12.HeaderText = "卤代芳香烃";
                    cg12.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;
                    cg12.ParentGroupName = "卤代烃";
                    gridAudit.MasterTableView.ColumnGroups.Add(cg12);
                }
                if (tbfactorNames.Contains("卤代烯烃"))
                {
                    GridColumnGroup cg13 = new GridColumnGroup();
                    cg13.Name = "卤代烯烃";
                    cg13.HeaderText = "卤代烯烃";
                    cg13.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;
                    cg13.ParentGroupName = "卤代烃";
                    gridAudit.MasterTableView.ColumnGroups.Add(cg13);
                }
                if (tbfactorNames.Contains("卤代烷烃"))
                {
                    GridColumnGroup cg14 = new GridColumnGroup();
                    cg14.Name = "卤代烷烃";
                    cg14.HeaderText = "卤代烷烃";
                    cg14.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;
                    cg14.ParentGroupName = "卤代烃";
                    gridAudit.MasterTableView.ColumnGroups.Add(cg14);
                }
                if (tbfactorNames.Contains("含氮有机物"))
                {
                    GridColumnGroup cg15 = new GridColumnGroup();
                    cg15.Name = "含氮有机物";
                    cg15.HeaderText = "含氮有机物";
                    cg15.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;
                    cg15.ParentGroupName = "含氧";
                    gridAudit.MasterTableView.ColumnGroups.Add(cg15);
                }
                if (tbfactorNames.Contains("醛类有机物"))
                {
                    GridColumnGroup cg16 = new GridColumnGroup();
                    cg16.Name = "醛类";
                    cg16.HeaderText = "醛类有机物";
                    cg16.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;
                    cg16.ParentGroupName = "含氧";
                    gridAudit.MasterTableView.ColumnGroups.Add(cg16);
                }
                if (tbfactorNames.Contains("酮类有机物"))
                {
                    GridColumnGroup cg17 = new GridColumnGroup();
                    cg17.Name = "酮类";
                    cg17.HeaderText = "酮类有机物";
                    cg17.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;
                    cg17.ParentGroupName = "含氧";
                    gridAudit.MasterTableView.ColumnGroups.Add(cg17);
                }
                if (tbfactorNames.Contains("醚类有机物"))
                {
                    GridColumnGroup cg18 = new GridColumnGroup();
                    cg18.Name = "醚类";
                    cg18.HeaderText = "醚类有机物";
                    cg18.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;
                    cg18.ParentGroupName = "含氧";
                    gridAudit.MasterTableView.ColumnGroups.Add(cg18);
                }
                if (portIds != null)
                {
                    #region 分因子
                    if (TypeNameGroup.SelectedValue=="分因子")
                    {
                        Pie1.Visible = true;
                        Pie2.Visible = false;
                        Pie3.Visible = false;
                        //按因子还是按总值
                        //HiddenPointFactor.Value = PointFactor.SelectedValue;
                        //PointChart.Visible = false;
                        //chartcontainers.Visible = false;
                        //ChartContainer.Visible = false;
                        //if (factorNames.Contains("非甲烷碳氢化合物"))
                        //{
                        //    GridColumnGroup cg1 = new GridColumnGroup();
                        //    cg1.Name = "非甲烷";
                        //    cg1.HeaderText = "非甲烷碳氢化合物";
                        //    cg1.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;
                        //    gridAudit.MasterTableView.ColumnGroups.Add(cg1);
                        //}
                        //if (factorNames.Contains("卤代烃类VOCs"))
                        //{
                        //    GridColumnGroup cg2 = new GridColumnGroup();
                        //    cg2.Name = "卤代烃";
                        //    cg2.HeaderText = "卤代烃类VOCs";
                        //    cg2.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;
                        //    gridAudit.MasterTableView.ColumnGroups.Add(cg2);
                        //}
                        //if (factorNames.Contains("含氧（氮）类VOCs"))
                        //{
                        //    GridColumnGroup cg4 = new GridColumnGroup();
                        //    cg4.Name = "含氧";
                        //    cg4.HeaderText = "含氧（氮）类VOCs";
                        //    cg4.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;
                        //    gridAudit.MasterTableView.ColumnGroups.Add(cg4);
                        //}
                        //if (tbfactorNames.Contains("高碳烷烃C6-C12"))
                        //{
                        //    GridColumnGroup cg5 = new GridColumnGroup();
                        //    cg5.Name = "高碳烷烃";
                        //    cg5.HeaderText = "高碳烷烃C6-C12";
                        //    cg5.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;
                        //    cg5.ParentGroupName = "非甲烷";
                        //    gridAudit.MasterTableView.ColumnGroups.Add(cg5);
                        //}
                        //if (tbfactorNames.Contains("炔烃"))
                        //{
                        //    GridColumnGroup cg6 = new GridColumnGroup();
                        //    cg6.Name = "炔烃";
                        //    cg6.HeaderText = "炔烃";
                        //    cg6.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;
                        //    cg6.ParentGroupName = "非甲烷";
                        //    gridAudit.MasterTableView.ColumnGroups.Add(cg6);
                        //}
                        //if (tbfactorNames.Contains("高碳烯烃C6-C12"))
                        //{
                        //    GridColumnGroup cg7 = new GridColumnGroup();
                        //    cg7.Name = "高碳烯烃";
                        //    cg7.HeaderText = "高碳烯烃C6-C12";
                        //    cg7.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;
                        //    cg7.ParentGroupName = "非甲烷";
                        //    gridAudit.MasterTableView.ColumnGroups.Add(cg7);
                        //}
                        //if (tbfactorNames.Contains("低碳烯烃C2-C5"))
                        //{
                        //    GridColumnGroup cg8 = new GridColumnGroup();
                        //    cg8.Name = "低碳烯烃";
                        //    cg8.HeaderText = "低碳烯烃C2-C5";
                        //    cg8.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;
                        //    cg8.ParentGroupName = "非甲烷";
                        //    gridAudit.MasterTableView.ColumnGroups.Add(cg8);
                        //}
                        //if (tbfactorNames.Contains("苯系物"))
                        //{
                        //    GridColumnGroup cg9 = new GridColumnGroup();
                        //    cg9.Name = "苯系物";
                        //    cg9.HeaderText = "苯系物";
                        //    cg9.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;
                        //    cg9.ParentGroupName = "非甲烷";
                        //    gridAudit.MasterTableView.ColumnGroups.Add(cg9);
                        //}
                        //if (tbfactorNames.Contains("低碳烷烃C2-C5"))
                        //{
                        //    GridColumnGroup cg10 = new GridColumnGroup();
                        //    cg10.Name = "低碳烷烃";
                        //    cg10.HeaderText = "低碳烷烃C2-C5";
                        //    cg10.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;
                        //    cg10.ParentGroupName = "非甲烷";
                        //    gridAudit.MasterTableView.ColumnGroups.Add(cg10);
                        //}
                        //if (tbfactorNames.Contains("氟利昂"))
                        //{
                        //    GridColumnGroup cg11 = new GridColumnGroup();
                        //    cg11.Name = "氟利昂";
                        //    cg11.HeaderText = "氟利昂";
                        //    cg11.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;
                        //    cg11.ParentGroupName = "卤代烃";
                        //    gridAudit.MasterTableView.ColumnGroups.Add(cg11);
                        //}
                        //if (tbfactorNames.Contains("卤代芳香烃"))
                        //{
                        //    GridColumnGroup cg12 = new GridColumnGroup();
                        //    cg12.Name = "卤代芳香烃";
                        //    cg12.HeaderText = "卤代芳香烃";
                        //    cg12.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;
                        //    cg12.ParentGroupName = "卤代烃";
                        //    gridAudit.MasterTableView.ColumnGroups.Add(cg12);
                        //}
                        //if (tbfactorNames.Contains("卤代烯烃"))
                        //{
                        //    GridColumnGroup cg13 = new GridColumnGroup();
                        //    cg13.Name = "卤代烯烃";
                        //    cg13.HeaderText = "卤代烯烃";
                        //    cg13.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;
                        //    cg13.ParentGroupName = "卤代烃";
                        //    gridAudit.MasterTableView.ColumnGroups.Add(cg13);
                        //}
                        //if (tbfactorNames.Contains("卤代烷烃"))
                        //{
                        //    GridColumnGroup cg14 = new GridColumnGroup();
                        //    cg14.Name = "卤代烷烃";
                        //    cg14.HeaderText = "卤代烷烃";
                        //    cg14.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;
                        //    cg14.ParentGroupName = "卤代烃";
                        //    gridAudit.MasterTableView.ColumnGroups.Add(cg14);
                        //}
                        //if (tbfactorNames.Contains("含氮有机物"))
                        //{
                        //    GridColumnGroup cg15 = new GridColumnGroup();
                        //    cg15.Name = "含氮有机物";
                        //    cg15.HeaderText = "含氮有机物";
                        //    cg15.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;
                        //    cg15.ParentGroupName = "含氧";
                        //    gridAudit.MasterTableView.ColumnGroups.Add(cg15);
                        //}
                        //if (tbfactorNames.Contains("醛类有机物"))
                        //{
                        //    GridColumnGroup cg16 = new GridColumnGroup();
                        //    cg16.Name = "醛类";
                        //    cg16.HeaderText = "醛类有机物";
                        //    cg16.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;
                        //    cg16.ParentGroupName = "含氧";
                        //    gridAudit.MasterTableView.ColumnGroups.Add(cg16);
                        //}
                        //if (tbfactorNames.Contains("酮类有机物"))
                        //{
                        //    GridColumnGroup cg17 = new GridColumnGroup();
                        //    cg17.Name = "酮类";
                        //    cg17.HeaderText = "酮类有机物";
                        //    cg17.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;
                        //    cg17.ParentGroupName = "含氧";
                        //    gridAudit.MasterTableView.ColumnGroups.Add(cg17);
                        //}
                        //if (tbfactorNames.Contains("醚类有机物"))
                        //{
                        //    GridColumnGroup cg18 = new GridColumnGroup();
                        //    cg18.Name = "醚类";
                        //    cg18.HeaderText = "醚类有机物";
                        //    cg18.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;
                        //    cg18.ParentGroupName = "含氧";
                        //    gridAudit.MasterTableView.ColumnGroups.Add(cg18);
                        //}
                        if (ddlDataSource.SelectedValue == "AuditData")
                        {
                            //饼图日期类型传值
                            

                            if (radlDataType.SelectedValue == "Hour")
                            {
                                string orderBy1 = "PointId asc,Tstamp desc";
                                if (TimeSort.SelectedValue == "时间升序")
                                    orderBy1 = "PointId asc,Tstamp asc";
                                dtBegion = hourBegin.SelectedDate.Value;
                                dtEnd = hourEnd.SelectedDate.Value.AddDays(1).AddSeconds(-1);
                                if (type == "列表")
                                {
                                    if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                    {
                                        hdTimeType.Value = radlDataType.SelectedValue+"skqy";
                                        auditData = m_HourData.GetVOCsKQYHourDataPagerNew(portIds, yzfactorCodes, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//小时类型按 小时数据查询
                                        recordTotal = auditData.ToTable().Rows.Count;
                                    }
                                    else
                                    {
                                        hdTimeType.Value = radlDataType.SelectedValue;
                                        auditData = m_HourData.GetHourDataPagerNew(portIds, yzfactorCodes, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//小时类型按 小时数据查询
                                    }
                                    recordTotal = auditData.ToTable().Rows.Count;
                                    //【给隐藏域赋值，用于显示Chart】
                                    SetHiddenData(portIds, yzfactors, dtBegion, dtEnd);
                                    hdGroupFac.Value = string.Join(";", yzfactors.Select(p => p.PollutantCode).ToArray());
                                    hdGroupName.Value = "TVOC";
                                }
                                else if (type == "图表")
                                {
                                    //【给隐藏域赋值，用于显示Chart】
                                    SetHiddenData(portIds, yzfactors, dtBegion, dtEnd);
                                    auditData1 = m_HourData.GetHourDataPagerNew(portIds, yzfactorCodes, dtBegion, dtEnd, pageSize1, pageNo1, out recordTotal);//小时类型按 小时数据查询
                                }
                                else
                                {
                                    
                                }
                            }
                            else if (radlDataType.SelectedValue == "Day")
                            {
                                string orderBy1 = "PointId asc,DateTime desc";
                                if (TimeSort.SelectedValue == "时间升序")
                                    orderBy1 = "PointId asc,DateTime asc";
                                dtBegion = dayBegin.SelectedDate.Value;
                                dtEnd = dayEnd.SelectedDate.Value;
                                if (type == "列表")
                                {
                                    auditData = m_DayData.GetDayData(portIds, yzfactorCodes, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//日类型按 日数据查询
                                    //【给隐藏域赋值，用于显示Chart】
                                    SetHiddenData(portIds, yzfactors, dtBegion, dtEnd);
                                    hdGroupFac.Value = string.Join(";", yzfactors.Select(p => p.PollutantCode).ToArray());
                                    hdGroupName.Value = "TVOC";
                                }
                                else if (type == "图表")
                                {
                                    //【给隐藏域赋值，用于显示Chart】
                                    SetHiddenData(portIds, yzfactors, dtBegion, dtEnd);
                                    auditData1 = m_DayData.GetDayData(portIds, yzfactorCodes, dtBegion, dtEnd, pageSize1, pageNo1, out recordTotal, orderBy1);//日类型按 日数据查询
                                }
                                else
                                {
                                    
                                    
                                }
                            }
                            //月数据
                            else if (radlDataType.SelectedValue == "Month")
                            {
                                string orderBy1 = "PointId asc,Year desc,MonthOfYear desc";
                                if (TimeSort.SelectedValue == "时间升序")
                                    orderBy1 = "PointId asc,Year asc,MonthOfYear asc";
                                int monthB = monthBegin.SelectedDate.Value.Year;
                                int monthE = monthEnd.SelectedDate.Value.Year;
                                int monthF = monthBegin.SelectedDate.Value.Month;
                                int monthT = monthEnd.SelectedDate.Value.Month;

                                DateTime mtBegin = monthBegin.SelectedDate.Value;
                                //本月第一天时间 
                                dtBegion = mtBegin.AddDays(-(mtBegin.Day) + 1);

                                DateTime mtEnd = monthEnd.SelectedDate.Value;
                                //将本月月数+1 
                                DateTime dt2 = mtEnd.AddMonths(1);
                                //本月最后一天时间 
                                dtEnd = dt2.AddDays(-(mtEnd.Day)).AddDays(1).AddSeconds(-1);
                                if (type == "列表")
                                {
                                    auditData = m_MonthData.GetMonthDataPager(portIds, yzfactorCodes, monthB, monthF, monthE, monthT, pageSize, pageNo, out recordTotal, orderBy1); //月类型 按月数据查询
                                    //【给隐藏域赋值，用于显示Chart】
                                    SetHiddenData(portIds, yzfactors, monthB + ";" + monthF + ";" + monthE + ";" + monthT);
                                    hdGroupFac.Value = string.Join(";", yzfactors.Select(p => p.PollutantCode).ToArray());
                                    hdGroupName.Value = "TVOC";
                                }
                                else if (type == "图表")
                                {
                                    //【给隐藏域赋值，用于显示Chart】
                                    SetHiddenData(portIds, yzfactors, monthB + ";" + monthF + ";" + monthE + ";" + monthT);
                                    auditData1 = m_MonthData.GetMonthDataPager(portIds, yzfactorCodes, monthB, monthF, monthE, monthT, pageSize1, pageNo1, out recordTotal, orderBy1); //月类型 按月数据查询
                                }
                                else
                                {
                                    

                                }
                            }

                            //周数据
                            else if (radlDataType.SelectedValue == "Week")
                            {
                                string orderBy1 = "PointId asc,Year desc,WeekOfYear desc";
                                if (TimeSort.SelectedValue == "时间升序")
                                    orderBy1 = "PointId asc,Year asc,WeekOfYear asc";
                                int weekB = weekBegin.SelectedDate.Value.Year;
                                int weekE = weekEnd.SelectedDate.Value.Year;
                                int newyear = DateTime.ParseExact(weekFrom.SelectedValue, "yyyy-MM-dd", null).AddDays(6).Year;
                                int nyear = DateTime.ParseExact(weekTo.SelectedValue, "yyyy-MM-dd", null).Year;
                                int weekF = 0;
                                int weekT = 0;
                                if (newyear > weekB)
                                {
                                    weekF = ChinaDate.WeekOfYear(DateTime.ParseExact(weekFrom.SelectedValue, "yyyy-MM-dd", null));
                                }
                                else
                                    weekF = ChinaDate.WeekOfYear(DateTime.ParseExact(weekFrom.SelectedValue, "yyyy-MM-dd", null).AddDays(6));

                                if (weekE > nyear)
                                {
                                    weekT = ChinaDate.WeekOfYear(DateTime.ParseExact(weekTo.SelectedValue, "yyyy-MM-dd", null).AddDays(6));
                                }
                                else
                                {
                                    weekT = ChinaDate.WeekOfYear(DateTime.ParseExact(weekTo.SelectedValue, "yyyy-MM-dd", null));
                                }

                                //dtBegion = Convert.ToDateTime(weekFrom.SelectedValue);
                                //dtEnd = DateTime.ParseExact(weekTo.SelectedValue, "yyyy-MM-dd", null).AddDays(6).AddDays(1).AddSeconds(-1);
                                if (type == "列表")
                                {
                                    auditData = m_WeekData.GetWeekDataPager(portIds, yzfactorCodes, weekB, weekF, weekE, weekT, pageSize, pageNo, out recordTotal, orderBy1); //周类型 按周数据查询
                                    //【给隐藏域赋值，用于显示Chart】
                                    SetHiddenData(portIds, yzfactors, weekB + ";" + weekF + ";" + weekE + ";" + weekT);
                                    hdGroupFac.Value = string.Join(";", yzfactors.Select(p => p.PollutantCode).ToArray());
                                    hdGroupName.Value = "TVOC";
                                }
                                else if (type == "图表")
                                {
                                    //【给隐藏域赋值，用于显示Chart】
                                    SetHiddenData(portIds, yzfactors, weekB + ";" + weekF + ";" + weekE + ";" + weekT);
                                    
                                }
                                else
                                {
                                    
                                }
                            }
                            else if (radlDataType.SelectedValue == "Season")
                            {
                                string orderBy1 = "PointId asc,Year desc,SeasonOfYear desc";
                                if (TimeSort.SelectedValue == "时间升序")
                                    orderBy1 = "PointId asc,Year asc,SeasonOfYear asc";
                                int seasonB = seasonBegin.SelectedDate.Value.Year;
                                int seasonE = seasonEnd.SelectedDate.Value.Year;
                                int seasonF = Convert.ToInt32(seasonFrom.SelectedValue);
                                int seasonT = Convert.ToInt32(seasonTo.SelectedValue);
                                //dtBegion = Convert.ToDateTime(weekFrom.SelectedValue);
                                //dtEnd = DateTime.ParseExact(weekTo.SelectedValue, "yyyy-MM-dd", null).AddDays(6).AddDays(1).AddSeconds(-1);
                                if (type == "列表")
                                {
                                    auditData = m_SeasonData.GetSeasonDataPager(portIds, yzfactorCodes, seasonB, seasonF, seasonE, seasonT, pageSize, pageNo, out recordTotal, orderBy1); //季类型 按季数据查询
                                    //【给隐藏域赋值，用于显示Chart】
                                    SetHiddenData(portIds, yzfactors, seasonB + ";" + seasonF + ";" + seasonE + ";" + seasonT);
                                    hdGroupFac.Value = string.Join(";", yzfactors.Select(p => p.PollutantCode).ToArray());
                                    hdGroupName.Value = "TVOC";
                                }
                                else if (type == "图表")
                                {
                                    //【给隐藏域赋值，用于显示Chart】
                                    SetHiddenData(portIds, yzfactors, seasonB + ";" + seasonF + ";" + seasonE + ";" + seasonT);
                                    
                                }
                                else
                                {
                                    
                                }
                            }
                            else if (radlDataType.SelectedValue == "Year")
                            {
                                string orderBy1 = "PointId asc,Year desc";
                                if (TimeSort.SelectedValue == "时间升序")
                                    orderBy1 = "PointId asc,Year asc";
                                int yearB = yearBegin.SelectedDate.Value.Year;
                                int yearE = yearEnd.SelectedDate.Value.Year;
                                //dtBegion = Convert.ToDateTime(weekFrom.SelectedValue);
                                //dtEnd = DateTime.ParseExact(weekTo.SelectedValue, "yyyy-MM-dd", null).AddDays(6).AddDays(1).AddSeconds(-1);
                                if (type == "列表")
                                {
                                    auditData = m_YearData.GetYearDataPager(portIds, yzfactorCodes, yearB, yearE, pageSize, pageNo, out recordTotal, orderBy1); //年类型 按年数据查询
                                    //SetHiddenData(portIds, factors, yearB, yearE);
                                    //【给隐藏域赋值，用于显示Chart】
                                    SetHiddenData(portIds, yzfactors, yearB + ";" + yearE);
                                    hdGroupFac.Value = string.Join(";", yzfactors.Select(p => p.PollutantCode).ToArray());
                                    hdGroupName.Value = "TVOC";
                                }
                                else if (type == "图表")
                                {
                                    
                                }
                                else
                                {
                                   
                                }
                            }
                        }
                        else
                        {
                            //饼图日期类型传值
                            hdTimeType.Value = RadioButtonList1.SelectedValue;
                            if (RadioButtonList1.SelectedValue == "Min1")
                            {
                                string orderBy1 = "PointId asc,Tstamp desc";
                                if (TimeSort.SelectedValue == "时间升序")
                                    orderBy1 = "PointId asc,Tstamp asc";
                                dtBegion = dtpBegin.SelectedDate.Value;
                                dtEnd = dtpEnd.SelectedDate.Value;
                                if (type == "列表")
                                {
                                    auditData = m_Min1Data.GetDataPager(portIds, yzfactorCodes, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//一分钟类型按 一分钟数据查询
                                    //【给隐藏域赋值，用于显示Chart】
                                    SetHiddenData(portIds, yzfactors, dtBegion, dtEnd);
                                    hdGroupFac.Value = string.Join(";", yzfactors.Select(p => p.PollutantCode).ToArray());
                                    hdGroupName.Value = "TVOC";
                                }
                                else if (type == "图表")
                                {
                                    //【给隐藏域赋值，用于显示Chart】
                                    SetHiddenData(portIds, yzfactors, dtBegion, dtEnd);
                                    hdGroupFac.Value = string.Join(";", yzfactors.Select(p => p.PollutantCode).ToArray());
                                }
                                else
                                {
                                    //【给隐藏域赋值，用于显示Chart】
                                    auditData = m_Min1Data.GetDataPager(portIds, yzfactorCodes, dtBegion, dtEnd, pageSize1, pageNo1, out recordTotal, orderBy1);//一分钟类型按 一分钟数据查询
                                    hdBegion.Value = dtBegion.ToString("yyyy-MM-dd HH:mm:ss");
                                    hdEnd.Value = dtEnd.ToString("yyyy-MM-dd HH:mm:ss");
                                    hdOrderBy.Value = orderBy1;
                                }
                            }
                            else if (RadioButtonList1.SelectedValue == "Min5")
                            {
                                string orderBy1 = "PointId asc,Tstamp desc";
                                if (TimeSort.SelectedValue == "时间升序")
                                    orderBy1 = "PointId asc,Tstamp asc";
                                dtBegion = dtpBegin.SelectedDate.Value;
                                dtEnd = dtpEnd.SelectedDate.Value;
                                if (type == "列表")
                                {
                                    auditData = m_Min5Data.GetDataPager(portIds, yzfactorCodes, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//五分钟类型按 小时数据查询
                                    //【给隐藏域赋值，用于显示Chart】
                                    SetHiddenData(portIds, yzfactors, dtBegion, dtEnd);
                                    hdGroupFac.Value = string.Join(";", yzfactors.Select(p => p.PollutantCode).ToArray());
                                    hdGroupName.Value = "TVOC";
                                }
                                else if (type == "图表")
                                {
                                    //【给隐藏域赋值，用于显示Chart】
                                    SetHiddenData(portIds, yzfactors, dtBegion, dtEnd);
                                }
                                else
                                {
                                    //【给隐藏域赋值，用于显示Chart】
                                    auditData = m_Min5Data.GetDataPager(portIds, yzfactorCodes, dtBegion, dtEnd, pageSize1, pageNo1, out recordTotal, orderBy1);//五分钟类型按 小时数据查询
                                    hdBegion.Value = dtBegion.ToString("yyyy-MM-dd HH:mm:ss");
                                    hdEnd.Value = dtEnd.ToString("yyyy-MM-dd HH:mm:ss");
                                    hdOrderBy.Value = orderBy1;
                                }
                            }
                            else if (RadioButtonList1.SelectedValue == "Min60")
                            {
                                string orderBy1 = "PointId asc,Tstamp desc";
                                if (TimeSort.SelectedValue == "时间升序")
                                    orderBy1 = "PointId asc,Tstamp asc";
                                dtBegion = dtpBegin.SelectedDate.Value;
                                dtEnd = dtpEnd.SelectedDate.Value;
                                if (type == "列表")
                                {
                                    if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                    {

                                        hdTimeType.Value = RadioButtonList1.SelectedValue+"kqy";
                                        //auditData = m_Min60Data.GetVOCsKQYDataPager(portIds, yzfactorCodes, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//60分钟类型按 60分钟数据查询
                                        auditData = m_Min60Data.GetDataPagerForO3AllTimeVOCs(portIds, yzfactorCodes, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//60分钟类型按 60分钟数据查询
                                        //recordTotal = auditData.ToTable().Rows.Count;
                                    }
                                    else
                                    {
                                        auditData = m_Min60Data.GetDataPager(portIds, yzfactorCodes, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//60分钟类型按 60分钟数据查询
                                    }
                                    
                                    //【给隐藏域赋值，用于显示Chart】
                                    SetHiddenData(portIds, yzfactors, dtBegion, dtEnd);
                                    hdGroupFac.Value = string.Join(";", yzfactors.Select(p => p.PollutantCode).ToArray());
                                    hdGroupName.Value = "TVOC";
                                }
                                else if (type == "图表")
                                {
                                    if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                    {
                                        hdTimeType.Value = RadioButtonList1.SelectedValue + "kqy";
                                        
                                    }
                                    //【给隐藏域赋值，用于显示Chart】
                                    SetHiddenData(portIds, yzfactors, dtBegion, dtEnd);
                                    
                                }
                                else
                                {
                                    //【给隐藏域赋值，用于显示Chart】
                                    if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                    {
                                        hdTimeType.Value = RadioButtonList1.SelectedValue + "kqy";

                                    }
                                    hdBegion.Value = dtBegion.ToString("yyyy-MM-dd HH:mm:ss");
                                    hdEnd.Value = dtEnd.ToString("yyyy-MM-dd HH:mm:ss");
                                    hdOrderBy.Value = orderBy1;
                                }
                            }
                            else if (RadioButtonList1.SelectedValue == "OriDay")
                            {
                                string orderBy1 = "PointId asc,DateTime desc";
                                if (TimeSort.SelectedValue == "时间升序")
                                    orderBy1 = "PointId asc,DateTime asc";
                                dtBegion = dtpDayBegin.SelectedDate.Value;
                                dtEnd = dtpDayEnd.SelectedDate.Value;
                                if (type == "列表")
                                {
                                    auditData = m_DayOriData.GetDataPagers(portIds, yzfactorCodes, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//原始日数据类型按 原始日数据查询
                                    //【给隐藏域赋值，用于显示Chart】
                                    SetHiddenData(portIds, yzfactors, dtBegion, dtEnd);
                                    hdGroupFac.Value = string.Join(";", yzfactors.Select(p => p.PollutantCode).ToArray());
                                    hdGroupName.Value = "TVOC";
                                }
                                else if (type == "图表")
                                {
                                    //【给隐藏域赋值，用于显示Chart】
                                    SetHiddenData(portIds, yzfactors, dtBegion, dtEnd);
                                    
                                }
                                else
                                {
                                    //【给隐藏域赋值，用于显示Chart】
                                    auditData = m_DayOriData.GetDataPagers(portIds, yzfactorCodes, dtBegion, dtEnd, pageSize1, pageNo1, out recordTotal, orderBy1);//原始日数据类型按 原始日数据查询
                                    hdBegion.Value = dtBegion.ToString("yyyy-MM-dd HH:mm:ss");
                                    hdEnd.Value = dtEnd.ToString("yyyy-MM-dd HH:mm:ss");
                                    hdOrderBy.Value = orderBy1;
                                }
                            }
                            else if (RadioButtonList1.SelectedValue == "OriMonth")
                            {
                                string orderBy1 = "PointId asc,Year desc,MonthOfYear desc";
                                if (TimeSort.SelectedValue == "时间升序")
                                    orderBy1 = "PointId asc,Year asc,MonthOfYear asc";
                                dtBegion = dtpMonthBegin.SelectedDate.Value;
                                dtEnd = dtpMonthEnd.SelectedDate.Value;
                                if (type == "列表")
                                {
                                    auditData = m_MonthOriData.GetOriDataPager(portIds, yzfactorCodes, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//原始月数据类型按 原始月数据查询
                                    //【给隐藏域赋值，用于显示Chart】
                                    SetHiddenData(portIds, yzfactors, dtBegion, dtEnd);
                                    hdGroupFac.Value = string.Join(";", yzfactors.Select(p => p.PollutantCode).ToArray());
                                    hdGroupName.Value = "TVOC";
                                }
                                else if (type == "图表")
                                {
                                    //【给隐藏域赋值，用于显示Chart】
                                    SetHiddenData(portIds, yzfactors, dtBegion, dtEnd);
                                    
                                }
                                else
                                {
                                    //【给隐藏域赋值，用于显示Chart】
                                    auditData = m_MonthOriData.GetOriDataPager(portIds, yzfactorCodes, dtBegion, dtEnd, pageSize1, pageNo1, out recordTotal, orderBy1);//原始月数据类型按 原始月数据查询
                                    hdBegion.Value = dtBegion.ToString("yyyy-MM-dd HH:mm:ss");
                                    hdEnd.Value = dtEnd.ToString("yyyy-MM-dd HH:mm:ss");
                                    hdOrderBy.Value = orderBy1;
                                }
                            }
                        }
                        if (type == "列表")
                        {
                            dt = auditData.ToTable();

                            foreach (string factorCode in yzfactorCodes)
                            {
                                int DecimalNum = 3;
                                if (factorCode != "a20995" && factorCode != "a20996" && factorCode != "a20997" && factorCode != "a20998" && factorCode != "a20999")
                                {
                                    IPollutant iFactorCode = m_AirPollutantService.GetPollutantInfo(factorCode);
                                    if (iFactorCode != null)
                                    {
                                        DecimalNum = int.TryParse(iFactorCode.PollutantDecimalNum, out DecimalNum) ? DecimalNum : 3;
                                    }
                                }
                                for (int i = 0; i < dt.Rows.Count; i++)
                                {
                                    if (dt.Rows[i][factorCode] != DBNull.Value)
                                    {
                                        if (factorCode == "a20029" || factorCode == "a20068")
                                        {
                                            //value 需要进行小数位处理的数据 类型Decimal
                                            dt.Rows[i][factorCode] = DecimalExtension.GetPollutantValue(Convert.ToDecimal(dt.Rows[i][factorCode]) / 1000, DecimalNum);
                                        }
                                        else if (factorCode == "a34004")// PM2.5 
                                        {
                                            //value 需要进行小数位处理的数据 类型Decimal
                                            dt.Rows[i][factorCode] = DecimalExtension.GetPollutantValue(Convert.ToDecimal(dt.Rows[i][factorCode]) * 1000, 0);
                                        }
                                        else
                                        {
                                            //value 需要进行小数位处理的数据 类型Decimal
                                            dt.Rows[i][factorCode] = DecimalExtension.GetPollutantValue(Convert.ToDecimal(dt.Rows[i][factorCode]), DecimalNum);
                                        }
                                    }
                                }

                            }
                            if (dt != null)
                            {
                                bool a = dt.Columns.Contains("Tstamp");
                                if (a)
                                {
                                    if (dt.Columns.Count > 2)
                                    {
                                        dt.Columns["Tstamp"].SetOrdinal(1);
                                    }
                                }
                                bool b = dt.Columns.Contains("DateTime");
                                if (b)
                                {
                                    if (dt.Columns.Count > 2)
                                    {
                                        dt.Columns["DateTime"].SetOrdinal(1);
                                    }
                                }
                            }

                            gridAudit.DataSource = dt.DefaultView;
                            //数据总行数
                            gridAudit.VirtualItemCount = recordTotal;
                            //国家数据标记位
                            siteTypeEntites = dicService.RetrieveList(DictionaryType.AMS, "国家数据标记");
                        }
                        else if (type == "图表")
                        {
                            dt = auditData1.ToTable();
                            foreach (string factorCode in yzfactorCodes)
                            {
                                int DecimalNum = 3;
                                if (factorCode != "a20995" && factorCode != "a20996" && factorCode != "a20997" && factorCode != "a20998" && factorCode != "a20999")
                                {
                                    IPollutant iFactorCode = m_AirPollutantService.GetPollutantInfo(factorCode);
                                    if (iFactorCode != null)
                                    {
                                        DecimalNum = int.TryParse(iFactorCode.PollutantDecimalNum, out DecimalNum) ? DecimalNum : 3;
                                    }
                                }
                                for (int i = 0; i < dt.Rows.Count; i++)
                                {
                                    if (dt.Rows[i][factorCode] != DBNull.Value)
                                    {
                                        if (factorCode == "a20029" || factorCode == "a20068")
                                        {
                                            //value 需要进行小数位处理的数据 类型Decimal
                                            dt.Rows[i][factorCode] = DecimalExtension.GetPollutantValue(Convert.ToDecimal(dt.Rows[i][factorCode]) / 1000, DecimalNum);
                                        }
                                        else if (factorCode == "a34004")// PM2.5 
                                        {
                                            //value 需要进行小数位处理的数据 类型Decimal
                                            dt.Rows[i][factorCode] = DecimalExtension.GetPollutantValue(Convert.ToDecimal(dt.Rows[i][factorCode]) * 1000, 0);
                                        }
                                        else
                                        {
                                            //value 需要进行小数位处理的数据 类型Decimal
                                            dt.Rows[i][factorCode] = DecimalExtension.GetPollutantValue(Convert.ToDecimal(dt.Rows[i][factorCode]), DecimalNum);
                                        }
                                    }
                                }

                            }
                            hdHeavyMetalMonitor.Value = ToJson(dt);
                        }
                        else if (type == "饼图")
                        {
                            
                        }
                    }
                    #endregion
                    #region 分小类
                    else if (TypeNameGroup.SelectedValue == "二级类")
                    {
                        Pie1.Visible = true;
                        Pie2.Visible = false;
                        Pie3.Visible = false;
                        //PointChart.Visible = true;
                        //chartcontainers.Visible = true;
                        //ChartContainer.Visible = false;
                        //if (factorNames.Contains("非甲烷碳氢化合物"))
                        //{
                        //    GridColumnGroup cg1 = new GridColumnGroup();
                        //    cg1.Name = "非甲烷";
                        //    cg1.HeaderText = "非甲烷碳氢化合物";
                        //    cg1.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;
                        //    gridAudit.MasterTableView.ColumnGroups.Add(cg1);
                        //}
                        //if (factorNames.Contains("卤代烃类VOCs"))
                        //{
                        //    GridColumnGroup cg2 = new GridColumnGroup();
                        //    cg2.Name = "卤代烃";
                        //    cg2.HeaderText = "卤代烃类VOCs";
                        //    cg2.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;
                        //    gridAudit.MasterTableView.ColumnGroups.Add(cg2);
                        //}
                        //if (factorNames.Contains("含氧（氮）类VOCs"))
                        //{
                        //    GridColumnGroup cg3 = new GridColumnGroup();
                        //    cg3.Name = "含氧";
                        //    cg3.HeaderText = "含氧（氮）类VOCs";
                        //    cg3.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;
                        //    gridAudit.MasterTableView.ColumnGroups.Add(cg3);
                        //}
                        
                        #region 审核
                        if (ddlDataSource.SelectedValue == "AuditData")
                        {
                            hdTimeType.Value = radlDataType.SelectedValue;
                            #region 小时数据
                            if (radlDataType.SelectedValue == "Hour")
                            {
                                string orderBy1 = "PointId asc,Tstamp desc";
                                if (TimeSort.SelectedValue == "时间升序")
                                    orderBy1 = "PointId asc,Tstamp asc";
                                dtBegion = hourBegin.SelectedDate.Value;
                                dtEnd = hourEnd.SelectedDate.Value.AddDays(1).AddSeconds(-1);
                                dt = new DataTable();
                                dt.Columns.Add("PointId", typeof(System.String));//污染物名称 参数
                                foreach (string colName in tbfactorNames)
                                {
                                    dt.Columns.Add(colName, typeof(System.String));//污染物值
                                }
                                dt.Columns.Add("Tstamp", typeof(System.DateTime));//时间戳
                                this.ViewState.Add("dt", dt);

                                dtIcon = new DataTable();
                                dtIcon.Columns.Add("PointId", typeof(System.String));//污染物名称 参数
                                foreach (string colName in tbfactorNames)
                                {
                                    dtIcon.Columns.Add(colName, typeof(System.Decimal));//污染物值
                                }
                                dtIcon.Columns.Add("Tstamp", typeof(System.DateTime));//时间戳
                                this.ViewState.Add("dtIcon", dtIcon);
                                string factorType = "";
                                if (tbfactorNames.Contains("高碳烷烃C6-C12"))
                                {
                                    factorType = "06a02408-6eab-4188-b442-86dd8e97654c";
                                    string sql1 = string.Empty;
                                    if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}' and PollutantCode in (SELECT  PollutantCode FROM [Standard].[TB_PollutantCode] where VOCType!='2')"
                , factorType);
                                    }
                                    else
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    }
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表" && factorsWan.Count() > 0)
                                    {
                                        if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                        {
                                            auditData = m_HourData.GetVOCsKQYHourDataPagerNew(portIds, factorsWan, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//小时类型按 小时数据查询
                                        }
                                        else
                                        {
                                            auditData = m_HourData.GetHourDataPagerNew(portIds, factorsWan, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//小时类型按 小时数据查询
                                        }
                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetDataTable("高碳烷烃C6-C12", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (tbfactorNames.Contains("炔烃"))
                                {
                                    factorType = "5b1918b9-7c92-477a-8e23-64cbae6477f6";
                                    string sql1 = string.Empty;
                                    if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}' and PollutantCode in (SELECT  PollutantCode FROM [Standard].[TB_PollutantCode] where VOCType!='2')"
                , factorType);
                                    }
                                    else
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    }
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表" && factorsWan.Count() > 0)
                                    {
                                        if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                        {
                                            auditData = m_HourData.GetVOCsKQYHourDataPagerNew(portIds, factorsWan, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//小时类型按 小时数据查询
                                        }
                                        else
                                        {
                                            auditData = m_HourData.GetHourDataPagerNew(portIds, factorsWan, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//小时类型按 小时数据查询
                                        }
                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetDataTable("炔烃", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (tbfactorNames.Contains("高碳烯烃C6-C12"))
                                {
                                    factorType = "7bc5f3d8-7cb3-4273-a646-1ed7df60cdd8";
                                    string sql1 = string.Empty;
                                    if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}' and PollutantCode in (SELECT  PollutantCode FROM [Standard].[TB_PollutantCode] where VOCType!='2')"
                , factorType);
                                    }
                                    else
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    }
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表" && factorsWan.Count() > 0)
                                    {
                                        if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                        {
                                            auditData = m_HourData.GetVOCsKQYHourDataPagerNew(portIds, factorsWan, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//小时类型按 小时数据查询
                                        }
                                        else
                                        {
                                            auditData = m_HourData.GetHourDataPagerNew(portIds, factorsWan, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//小时类型按 小时数据查询
                                        }
                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetDataTable("高碳烯烃C6-C12", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (tbfactorNames.Contains("低碳烯烃C2-C5"))
                                {
                                    factorType = "a41db3c8-0fb4-4b0e-b1b0-e5950f04eff6";
                                    string sql1 = string.Empty;
                                    if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}' and PollutantCode in (SELECT  PollutantCode FROM [Standard].[TB_PollutantCode] where VOCType='2')"
                , factorType);
                                    }
                                    else
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    }
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表" && factorsWan.Count() > 0)
                                    {
                                        if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                        {
                                            auditData = m_HourData.GetVOCsKQYHourDataPagerNew(portIds, factorsWan, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//小时类型按 小时数据查询
                                        }
                                        else
                                        {
                                            auditData = m_HourData.GetHourDataPagerNew(portIds, factorsWan, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//小时类型按 小时数据查询
                                        }
                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetDataTable("低碳烯烃C2-C5", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (tbfactorNames.Contains("苯系物"))
                                {
                                    factorType = "e9607fce-75dc-4134-9a8d-af2a1eb4a7bf";
                                    string sql1 = string.Empty;
                                    if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}' and PollutantCode in (SELECT  PollutantCode FROM [Standard].[TB_PollutantCode] where VOCType!='2')"
                , factorType);
                                    }
                                    else
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    }
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表" && factorsWan.Count() > 0)
                                    {
                                        if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                        {
                                            auditData = m_HourData.GetVOCsKQYHourDataPagerNew(portIds, factorsWan, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//小时类型按 小时数据查询
                                        }
                                        else
                                        {
                                            auditData = m_HourData.GetHourDataPagerNew(portIds, factorsWan, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//小时类型按 小时数据查询
                                        }
                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetDataTable("苯系物", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (tbfactorNames.Contains("低碳烷烃C2-C5"))
                                {
                                    factorType = "fb1fc34b-770f-4141-b75a-015919725e0b";
                                    string sql1 = string.Empty;
                                    if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}' and PollutantCode in (SELECT  PollutantCode FROM [Standard].[TB_PollutantCode] where VOCType!='2')"
                , factorType);
                                    }
                                    else
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    }
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表" && factorsWan.Count() > 0)
                                    {
                                        if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                        {
                                            auditData = m_HourData.GetVOCsKQYHourDataPagerNew(portIds, factorsWan, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//小时类型按 小时数据查询
                                        }
                                        else
                                        {
                                            auditData = m_HourData.GetHourDataPagerNew(portIds, factorsWan, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//小时类型按 小时数据查询
                                        }
                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetDataTable("低碳烷烃C2-C5", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (tbfactorNames.Contains("氟利昂"))
                                {
                                    factorType = "053c74fd-d1ae-4341-b258-1788079970bd";

                                    string sql1 = string.Empty;
                                    if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}' and PollutantCode in (SELECT  PollutantCode FROM [Standard].[TB_PollutantCode] where VOCType!='2')"
                , factorType);
                                    }
                                    else
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    }
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表" && factorsWan.Count() > 0)
                                    {
                                        if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                        {
                                            auditData = m_HourData.GetVOCsKQYHourDataPagerNew(portIds, factorsWan, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//小时类型按 小时数据查询
                                        }
                                        else
                                        {
                                            auditData = m_HourData.GetHourDataPagerNew(portIds, factorsWan, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//小时类型按 小时数据查询
                                        }
                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetDataTable("氟利昂", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }

                                }

                                if (tbfactorNames.Contains("卤代芳香烃"))
                                {
                                    factorType = "1eaac416-0d69-48b9-aca1-9ff7904907bb";
                                    string sql1 = string.Empty;
                                    if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}' and PollutantCode in (SELECT  PollutantCode FROM [Standard].[TB_PollutantCode] where VOCType!='2')"
                , factorType);
                                    }
                                    else
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    }
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表" && factorsWan.Count() > 0)
                                    {
                                        if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                        {
                                            auditData = m_HourData.GetVOCsKQYHourDataPagerNew(portIds, factorsWan, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//小时类型按 小时数据查询
                                        }
                                        else
                                        {
                                            auditData = m_HourData.GetHourDataPagerNew(portIds, factorsWan, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//小时类型按 小时数据查询
                                        }
                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetDataTable("卤代芳香烃", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (tbfactorNames.Contains("卤代烯烃"))
                                {
                                    factorType = "21de4143-2c28-4256-b71e-6cb5ce63e417";
                                    string sql1 = string.Empty;
                                    if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}' and PollutantCode in (SELECT  PollutantCode FROM [Standard].[TB_PollutantCode] where VOCType!='2')"
                , factorType);
                                    }
                                    else
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    }
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表" && factorsWan.Count() > 0)
                                    {
                                        if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                        {
                                            auditData = m_HourData.GetVOCsKQYHourDataPagerNew(portIds, factorsWan, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//小时类型按 小时数据查询
                                        }
                                        else
                                        {
                                            auditData = m_HourData.GetHourDataPagerNew(portIds, factorsWan, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//小时类型按 小时数据查询
                                        }
                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetDataTable("卤代烯烃", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (tbfactorNames.Contains("卤代烷烃"))
                                {
                                    factorType = "a0bad5d7-9eec-4fa4-9c36-828aad78041d";
                                    string sql1 = string.Empty;
                                    if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}' and PollutantCode in (SELECT  PollutantCode FROM [Standard].[TB_PollutantCode] where VOCType!='2')"
                , factorType);
                                    }
                                    else
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    }
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表" && factorsWan.Count() > 0)
                                    {
                                        if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                        {
                                            auditData = m_HourData.GetVOCsKQYHourDataPagerNew(portIds, factorsWan, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//小时类型按 小时数据查询
                                        }
                                        else
                                        {
                                            auditData = m_HourData.GetHourDataPagerNew(portIds, factorsWan, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//小时类型按 小时数据查询
                                        }
                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetDataTable("卤代烷烃", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (tbfactorNames.Contains("含氮有机物"))
                                {
                                    factorType = "3bbe4b30-53e4-48a8-a884-c3b38a03b705";
                                    string sql1 = string.Empty;
                                    if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}' and PollutantCode in (SELECT  PollutantCode FROM [Standard].[TB_PollutantCode] where VOCType!='2')"
                , factorType);
                                    }
                                    else
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    }
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表" && factorsWan.Count() > 0)
                                    {
                                        if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                        {
                                            auditData = m_HourData.GetVOCsKQYHourDataPagerNew(portIds, factorsWan, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//小时类型按 小时数据查询
                                        }
                                        else
                                        {
                                            auditData = m_HourData.GetHourDataPagerNew(portIds, factorsWan, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//小时类型按 小时数据查询
                                        }
                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetDataTable("含氮有机物", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }

                                if (tbfactorNames.Contains("醛类有机物"))
                                {
                                    factorType = "8198b6fc-7a77-427d-8e3e-9c9228ac168c";
                                    string sql1 = string.Empty;
                                    if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}' and PollutantCode in (SELECT  PollutantCode FROM [Standard].[TB_PollutantCode] where VOCType!='2')"
                , factorType);
                                    }
                                    else
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    }
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表" && factorsWan.Count() > 0)
                                    {
                                        if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                        {
                                            auditData = m_HourData.GetVOCsKQYHourDataPagerNew(portIds, factorsWan, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//小时类型按 小时数据查询
                                        }
                                        else
                                        {
                                            auditData = m_HourData.GetHourDataPagerNew(portIds, factorsWan, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//小时类型按 小时数据查询
                                        }
                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetDataTable("醛类有机物", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (tbfactorNames.Contains("酮类有机物"))
                                {
                                    factorType = "8c9ce5f3-4716-485e-95e1-72608b2843ce";
                                    string sql1 = string.Empty;
                                    if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}' and PollutantCode in (SELECT  PollutantCode FROM [Standard].[TB_PollutantCode] where VOCType!='2')"
                , factorType);
                                    }
                                    else
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    }
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表" && factorsWan.Count() > 0)
                                    {
                                        if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                        {
                                            auditData = m_HourData.GetVOCsKQYHourDataPagerNew(portIds, factorsWan, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//小时类型按 小时数据查询
                                        }
                                        else
                                        {
                                            auditData = m_HourData.GetHourDataPagerNew(portIds, factorsWan, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//小时类型按 小时数据查询
                                        }
                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetDataTable("酮类有机物", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }


                                if (tbfactorNames.Contains("醚类有机物"))
                                {
                                    factorType = "e5f83fd9-0b77-4d1b-935f-1826fddcc343";
                                    string sql1 = string.Empty;
                                    if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}' and PollutantCode in (SELECT  PollutantCode FROM [Standard].[TB_PollutantCode] where VOCType!='2')"
                , factorType);
                                    }
                                    else
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    }
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表" && factorsWan.Count() > 0)
                                    {
                                        if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                        {
                                            auditData = m_HourData.GetVOCsKQYHourDataPagerNew(portIds, factorsWan, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//小时类型按 小时数据查询
                                        }
                                        else
                                        {
                                            auditData = m_HourData.GetHourDataPagerNew(portIds, factorsWan, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//小时类型按 小时数据查询
                                        }
                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetDataTable("醚类有机物", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }


                                if (type == "列表")
                                {
                                    
                                    DataTable dtInstrumen = (DataTable)this.ViewState["dt"];
                                    if (dtInstrumen != null)
                                    {
                                        bool a = dtInstrumen.Columns.Contains("Tstamp");
                                        if (a)
                                        {
                                            if (dtInstrumen.Columns.Count > 2)
                                            {
                                                dtInstrumen.Columns["Tstamp"].SetOrdinal(1);
                                            }
                                        }
                                        bool b = dtInstrumen.Columns.Contains("DateTime");
                                        if (b)
                                        {
                                            if (dtInstrumen.Columns.Count > 2)
                                            {
                                                dtInstrumen.Columns["DateTime"].SetOrdinal(1);
                                            }
                                        }
                                    }
                                    if (dtInstrumen.Columns.Contains("OzoneValue"))
                                    {
                                        for (int i = 0; i < dtInstrumen.Rows.Count; i++) //臭氧的数据要乘以1000
                                        {
                                            decimal value = 0M;

                                            if (decimal.TryParse(dtInstrumen.Rows[i]["OzoneValue"].ToString(), out value))
                                            {
                                                dtInstrumen.Rows[i]["OzoneValue"] = DecimalExtension.GetPollutantValue(value * 1000, 0);
                                            }
                                        }
                                    }

                                    DataView dvsf = dtInstrumen.AsDataView();
                                    gridAudit.DataSource = dvsf;
                                    //数据总行数
                                    gridAudit.VirtualItemCount = recordTotal;
                                    //【给隐藏域赋值，用于显示Chart】
                                    SetHiddenData(portIds, factors, dtBegion, dtEnd);
                                    groupErJi();
                                    DataView dvst = dtInstrumen.DefaultView;
                                    dvst.Sort = "Tstamp asc";
                                    DataTable dtInstrumens = dvst.ToTable();
                                    string Time = "[";
                                    for (int i = 0; i < dtInstrumens.Rows.Count; i++)
                                    {
                                        Time += "'" + dtInstrumens.Rows[i]["Tstamp"].ToString() + "',";
                                    }
                                    Time = Time.TrimEnd(',');
                                    Time += "]";

                                    string data = "[{connectNulls:true,";
                                    for (int i = 0; i < TypeName.Length; i++)
                                    {
                                        data += "name:'" + TypeName[i] + "',data:[";
                                        for (int j = 0; j < dtInstrumens.Rows.Count; j++)
                                        {
                                            if (dtInstrumens.Rows[j][TypeName[i]].ToString() == "")
                                            {
                                                data += "null,";
                                            }
                                            else
                                            {
                                                data += dtInstrumens.Rows[j][TypeName[i]].ToString() + ",";
                                            }
                                        }
                                        data += "]}, {connectNulls:true,";
                                    }
                                    data = data.Substring(0, data.Length - 21);
                                    data += "]";
                                    hdDTime.Value = Time;
                                    hdDate.Value = data;

                                    //hdGroupFac.Value = string.Join(";", factors.Select(p => p.PollutantCode).ToArray());
                                    hdBegion.Value = dtBegion.ToString("yyyy-MM-dd HH:mm:ss");
                                    hdEnd.Value = dtEnd.ToString("yyyy-MM-dd HH:mm:ss");
                                    hdOrderBy.Value = orderBy1;
                                }
                                else if (type == "图表")
                                {
                                    //【给隐藏域赋值，用于显示Chart】
                                    SetHiddenData(portIds, factors, dtBegion, dtEnd);
                                    
                                }
                                else
                                {
                                    //【给隐藏域赋值，用于显示Chart】
                                    auditData = m_HourData.GetHourDataPagerNew(portIds, factorCodes, dtBegion, dtEnd, pageSize1, pageNo1, out recordTotal, orderBy1);//小时类型按 小时数据查询
                                    hdBegion.Value = dtBegion.ToString("yyyy-MM-dd HH:mm:ss");
                                    hdEnd.Value = dtEnd.ToString("yyyy-MM-dd HH:mm:ss");
                                    hdOrderBy.Value = orderBy1;
                                }
                            }
                            #endregion
                            #region 日数据
                            else if (radlDataType.SelectedValue == "Day")
                            {
                                string orderBy1 = "PointId asc,DateTime desc";
                                if (TimeSort.SelectedValue == "时间升序")
                                    orderBy1 = "PointId asc,DateTime asc";
                                dtBegion = dayBegin.SelectedDate.Value;
                                dtEnd = dayEnd.SelectedDate.Value;
                                dt = new DataTable();
                                dt.Columns.Add("PointId", typeof(System.String));//污染物名称 参数
                                foreach (string colName in tbfactorNames)
                                {
                                    dt.Columns.Add(colName, typeof(System.String));//污染物值
                                }
                                dt.Columns.Add("Tstamp", typeof(System.DateTime));//时间戳
                                this.ViewState.Add("dt", dt);

                                dtIcon = new DataTable();
                                dtIcon.Columns.Add("PointId", typeof(System.String));//污染物名称 参数
                                foreach (string colName in tbfactorNames)
                                {
                                    dtIcon.Columns.Add(colName, typeof(System.Decimal));//污染物值
                                }
                                dtIcon.Columns.Add("Tstamp", typeof(System.DateTime));//时间戳
                                this.ViewState.Add("dtIcon", dtIcon);
                                string factorType = "";
                                if (tbfactorNames.Contains("高碳烷烃C6-C12"))
                                {
                                    factorType = "06a02408-6eab-4188-b442-86dd8e97654c";
                                    string sql1 = string.Empty;
                                    if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}' and PollutantCode in (SELECT  PollutantCode FROM [Standard].[TB_PollutantCode] where VOCType!='2')"
                , factorType);
                                    }
                                    else
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    }
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表" && factorsWan.Count() > 0)
                                    {
                                        auditData = m_DayData.GetDayData(portIds, factorsWan, dtBegion, dtEnd, pageSize1, pageNo1, out recordTotal, orderBy1);//日类型按 日数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetDataTable("高碳烷烃C6-C12", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (tbfactorNames.Contains("炔烃"))
                                {
                                    factorType = "5b1918b9-7c92-477a-8e23-64cbae6477f6";
                                    string sql1 = string.Empty;
                                    if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}' and PollutantCode in (SELECT  PollutantCode FROM [Standard].[TB_PollutantCode] where VOCType!='2')"
                , factorType);
                                    }
                                    else
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    }
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表" && factorsWan.Count() > 0)
                                    {
                                        auditData = m_DayData.GetDayData(portIds, factorsWan, dtBegion, dtEnd, pageSize1, pageNo1, out recordTotal, orderBy1);//日类型按 日数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetDataTable("炔烃", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (tbfactorNames.Contains("高碳烯烃C6-C12"))
                                {
                                    factorType = "7bc5f3d8-7cb3-4273-a646-1ed7df60cdd8";
                                    string sql1 = string.Empty;
                                    if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}' and PollutantCode in (SELECT  PollutantCode FROM [Standard].[TB_PollutantCode] where VOCType!='2')"
                , factorType);
                                    }
                                    else
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    }
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表" && factorsWan.Count() > 0)
                                    {
                                        auditData = m_DayData.GetDayData(portIds, factorsWan, dtBegion, dtEnd, pageSize1, pageNo1, out recordTotal, orderBy1);//日类型按 日数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetDataTable("高碳烯烃C6-C12", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (tbfactorNames.Contains("低碳烯烃C2-C5"))
                                {
                                    factorType = "a41db3c8-0fb4-4b0e-b1b0-e5950f04eff6";
                                    string sql1 = string.Empty;
                                    if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}' and PollutantCode in (SELECT  PollutantCode FROM [Standard].[TB_PollutantCode] where VOCType!='2')"
                , factorType);
                                    }
                                    else
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    }
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表" && factorsWan.Count() > 0)
                                    {
                                        auditData = m_DayData.GetDayData(portIds, factorsWan, dtBegion, dtEnd, pageSize1, pageNo1, out recordTotal, orderBy1);//日类型按 日数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetDataTable("低碳烯烃C2-C5", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (tbfactorNames.Contains("苯系物"))
                                {
                                    factorType = "e9607fce-75dc-4134-9a8d-af2a1eb4a7bf";
                                    string sql1 = string.Empty;
                                    if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}' and PollutantCode in (SELECT  PollutantCode FROM [Standard].[TB_PollutantCode] where VOCType!='2')"
                , factorType);
                                    }
                                    else
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    }
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表" && factorsWan.Count() > 0)
                                    {
                                        auditData = m_DayData.GetDayData(portIds, factorsWan, dtBegion, dtEnd, pageSize1, pageNo1, out recordTotal, orderBy1);//日类型按 日数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetDataTable("苯系物", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (tbfactorNames.Contains("低碳烷烃C2-C5"))
                                {
                                    factorType = "fb1fc34b-770f-4141-b75a-015919725e0b";
                                    string sql1 = string.Empty;
                                    if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}' and PollutantCode in (SELECT  PollutantCode FROM [Standard].[TB_PollutantCode] where VOCType!='2')"
                , factorType);
                                    }
                                    else
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    }
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表" && factorsWan.Count() > 0)
                                    {
                                        auditData = m_DayData.GetDayData(portIds, factorsWan, dtBegion, dtEnd, pageSize1, pageNo1, out recordTotal, orderBy1);//日类型按 日数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetDataTable("低碳烷烃C2-C5", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (tbfactorNames.Contains("氟利昂"))
                                {
                                    factorType = "053c74fd-d1ae-4341-b258-1788079970bd";

                                    string sql1 = string.Empty;
                                    if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}' and PollutantCode in (SELECT  PollutantCode FROM [Standard].[TB_PollutantCode] where VOCType!='2')"
                , factorType);
                                    }
                                    else
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    }
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表" && factorsWan.Count() > 0)
                                    {
                                        auditData = m_DayData.GetDayData(portIds, factorsWan, dtBegion, dtEnd, pageSize1, pageNo1, out recordTotal, orderBy1);//日类型按 日数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetDataTable("氟利昂", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }

                                }

                                if (tbfactorNames.Contains("卤代芳香烃"))
                                {
                                    factorType = "1eaac416-0d69-48b9-aca1-9ff7904907bb";
                                    string sql1 = string.Empty;
                                    if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}' and PollutantCode in (SELECT  PollutantCode FROM [Standard].[TB_PollutantCode] where VOCType!='2')"
                , factorType);
                                    }
                                    else
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    }
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表" && factorsWan.Count() > 0)
                                    {
                                        auditData = m_DayData.GetDayData(portIds, factorsWan, dtBegion, dtEnd, pageSize1, pageNo1, out recordTotal, orderBy1);//日类型按 日数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetDataTable("卤代芳香烃", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (tbfactorNames.Contains("卤代烯烃"))
                                {
                                    factorType = "21de4143-2c28-4256-b71e-6cb5ce63e417";
                                    string sql1 = string.Empty;
                                    if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}' and PollutantCode in (SELECT  PollutantCode FROM [Standard].[TB_PollutantCode] where VOCType!='2')"
                , factorType);
                                    }
                                    else
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    }
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表" && factorsWan.Count() > 0)
                                    {
                                        auditData = m_DayData.GetDayData(portIds, factorsWan, dtBegion, dtEnd, pageSize1, pageNo1, out recordTotal, orderBy1);//日类型按 日数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetDataTable("卤代烯烃", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (tbfactorNames.Contains("卤代烷烃"))
                                {
                                    factorType = "a0bad5d7-9eec-4fa4-9c36-828aad78041d";
                                    string sql1 = string.Empty;
                                    if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}' and PollutantCode in (SELECT  PollutantCode FROM [Standard].[TB_PollutantCode] where VOCType!='2')"
                , factorType);
                                    }
                                    else
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    }
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表" && factorsWan.Count() > 0)
                                    {
                                        auditData = m_DayData.GetDayData(portIds, factorsWan, dtBegion, dtEnd, pageSize1, pageNo1, out recordTotal, orderBy1);//日类型按 日数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetDataTable("卤代烷烃", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (tbfactorNames.Contains("含氮有机物"))
                                {
                                    factorType = "3bbe4b30-53e4-48a8-a884-c3b38a03b705";
                                    string sql1 = string.Empty;
                                    if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}' and PollutantCode in (SELECT  PollutantCode FROM [Standard].[TB_PollutantCode] where VOCType!='2')"
                , factorType);
                                    }
                                    else
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    }
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表" && factorsWan.Count() > 0)
                                    {
                                        auditData = m_DayData.GetDayData(portIds, factorsWan, dtBegion, dtEnd, pageSize1, pageNo1, out recordTotal, orderBy1);//日类型按 日数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetDataTable("含氮有机物", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }

                                if (tbfactorNames.Contains("醛类有机物"))
                                {
                                    factorType = "8198b6fc-7a77-427d-8e3e-9c9228ac168c";
                                    string sql1 = string.Empty;
                                    if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}' and PollutantCode in (SELECT  PollutantCode FROM [Standard].[TB_PollutantCode] where VOCType!='2')"
                , factorType);
                                    }
                                    else
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    }
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表" && factorsWan.Count() > 0)
                                    {
                                        auditData = m_DayData.GetDayData(portIds, factorsWan, dtBegion, dtEnd, pageSize1, pageNo1, out recordTotal, orderBy1);//日类型按 日数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetDataTable("醛类有机物", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (tbfactorNames.Contains("酮类有机物"))
                                {
                                    factorType = "8c9ce5f3-4716-485e-95e1-72608b2843ce";
                                    string sql1 = string.Empty;
                                    if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}' and PollutantCode in (SELECT  PollutantCode FROM [Standard].[TB_PollutantCode] where VOCType!='2')"
                , factorType);
                                    }
                                    else
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    }
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表" && factorsWan.Count() > 0)
                                    {
                                        auditData = m_DayData.GetDayData(portIds, factorsWan, dtBegion, dtEnd, pageSize1, pageNo1, out recordTotal, orderBy1);//日类型按 日数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetDataTable("酮类有机物", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }


                                if (tbfactorNames.Contains("醚类有机物"))
                                {
                                    factorType = "e5f83fd9-0b77-4d1b-935f-1826fddcc343";
                                    string sql1 = string.Empty;
                                    if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}' and PollutantCode in (SELECT  PollutantCode FROM [Standard].[TB_PollutantCode] where VOCType!='2')"
                , factorType);
                                    }
                                    else
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    }
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表" && factorsWan.Count() > 0)
                                    {
                                        auditData = m_DayData.GetDayData(portIds, factorsWan, dtBegion, dtEnd, pageSize1, pageNo1, out recordTotal, orderBy1);//日类型按 日数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetDataTable("醚类有机物", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }


                                if (type == "列表")
                                {
                                    DataTable dtInstrumen = (DataTable)this.ViewState["dt"];
                                    if (dtInstrumen != null)
                                    {
                                        bool a = dtInstrumen.Columns.Contains("Tstamp");
                                        if (a)
                                        {
                                            if (dtInstrumen.Columns.Count > 2)
                                            {
                                                dtInstrumen.Columns["Tstamp"].SetOrdinal(1);
                                            }
                                        }
                                        bool b = dtInstrumen.Columns.Contains("DateTime");
                                        if (b)
                                        {
                                            if (dtInstrumen.Columns.Count > 2)
                                            {
                                                dtInstrumen.Columns["DateTime"].SetOrdinal(1);
                                            }
                                        }
                                    }
                                    if (dtInstrumen.Columns.Contains("OzoneValue"))
                                    {
                                        for (int i = 0; i < dtInstrumen.Rows.Count; i++) //臭氧的数据要乘以1000
                                        {
                                            decimal value = 0M;

                                            if (decimal.TryParse(dtInstrumen.Rows[i]["OzoneValue"].ToString(), out value))
                                            {
                                                dtInstrumen.Rows[i]["OzoneValue"] = DecimalExtension.GetPollutantValue(value * 1000, 0);
                                            }
                                        }
                                    }

                                    DataView dvsf = dtInstrumen.AsDataView();
                                    gridAudit.DataSource = dvsf;
                                    //数据总行数
                                    gridAudit.VirtualItemCount = recordTotal;
                                    //【给隐藏域赋值，用于显示Chart】
                                    SetHiddenData(portIds, factors, dtBegion, dtEnd);
                                    groupErJi();
                                    DataView dvst = dtInstrumen.DefaultView;
                                    dvst.Sort = "Tstamp asc";
                                    DataTable dtInstrumens = dvst.ToTable();
                                    string Time = "[";
                                    for (int i = 0; i < dtInstrumens.Rows.Count; i++)
                                    {
                                        Time += "'" + dtInstrumens.Rows[i]["Tstamp"].ToString() + "',";
                                    }
                                    Time = Time.TrimEnd(',');
                                    Time += "]";

                                    string data = "[{connectNulls:true,";
                                    for (int i = 0; i < TypeName.Length; i++)
                                    {
                                        data += "name:'" + TypeName[i] + "',data:[";
                                        for (int j = 0; j < dtInstrumens.Rows.Count; j++)
                                        {
                                            if (dtInstrumens.Rows[j][TypeName[i]].ToString() == "")
                                            {
                                                data += "null,";
                                            }
                                            else
                                            {
                                                data += dtInstrumens.Rows[j][TypeName[i]].ToString() + ",";
                                            }
                                        }
                                        data += "]}, {connectNulls:true,";
                                    }
                                    data = data.Substring(0, data.Length - 21);
                                    data += "]";
                                    hdDTime.Value = Time;
                                    hdDate.Value = data;

                                    //hdGroupFac.Value = string.Join(";", factors.Select(p => p.PollutantCode).ToArray());
                                    hdBegion.Value = dtBegion.ToString("yyyy-MM-dd HH:mm:ss");
                                    hdEnd.Value = dtEnd.ToString("yyyy-MM-dd HH:mm:ss");
                                    hdOrderBy.Value = orderBy1;
                                }
                                else if (type == "图表")
                                {
                                    //【给隐藏域赋值，用于显示Chart】
                                    SetHiddenData(portIds, factors, dtBegion, dtEnd);
                                    
                                }
                                else
                                {
                                    //【给隐藏域赋值，用于显示Chart】
                                    auditData = m_DayData.GetDayData(portIds, factorCodes, dtBegion, dtEnd, pageSize1, pageNo1, out recordTotal, orderBy1);//日类型按 日数据查询
                                    hdBegion.Value = dtBegion.ToString("yyyy-MM-dd HH:mm:ss");
                                    hdEnd.Value = dtEnd.ToString("yyyy-MM-dd HH:mm:ss");
                                    hdOrderBy.Value = orderBy1;
                                }
                            }
                            #endregion
                            #region 月数据
                            else if (radlDataType.SelectedValue == "Month")
                            {
                                string orderBy1 = "PointId asc,Year desc,MonthOfYear desc";
                                if (TimeSort.SelectedValue == "时间升序")
                                    orderBy1 = "PointId asc,Year asc,MonthOfYear asc";
                                int monthB = monthBegin.SelectedDate.Value.Year;
                                int monthE = monthEnd.SelectedDate.Value.Year;
                                int monthF = monthBegin.SelectedDate.Value.Month;
                                int monthT = monthEnd.SelectedDate.Value.Month;

                                DateTime mtBegin = monthBegin.SelectedDate.Value;
                                //本月第一天时间 
                                dtBegion = mtBegin.AddDays(-(mtBegin.Day) + 1);

                                DateTime mtEnd = monthEnd.SelectedDate.Value;
                                //将本月月数+1 
                                DateTime dt2 = mtEnd.AddMonths(1);
                                //本月最后一天时间 
                                dtEnd = dt2.AddDays(-(mtEnd.Day)).AddDays(1).AddSeconds(-1);
                                dtMonth = new DataTable();
                                dtMonth.Columns.Add("PointId", typeof(System.String));//污染物名称 参数
                                string factorType = "";
                                dtMonth.Columns.Add("Year", typeof(System.Int32));//时间戳
                                dtMonth.Columns.Add("MonthOfYear", typeof(System.Int32));//时间戳
                                foreach (string colName in tbfactorNames)
                                {
                                    dtMonth.Columns.Add(colName, typeof(System.String));//烷烃值
                                }
                                
                                this.ViewState.Add("dtMonth", dtMonth);


                                if (tbfactorNames.Contains("高碳烷烃C6-C12"))
                                {
                                    factorType = "06a02408-6eab-4188-b442-86dd8e97654c";
                                    string sql1 = string.Empty;
                                    if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}' and PollutantCode in (SELECT  PollutantCode FROM [Standard].[TB_PollutantCode] where VOCType!='2')"
                , factorType);
                                    }
                                    else
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    }
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表" && factorsWan.Count() > 0)
                                    {
                                        auditData = m_MonthData.GetMonthDataPager(portIds, factorsWan, monthB, monthF, monthE, monthT, pageSize1, pageNo1, out recordTotal, orderBy1); //月类型 按月数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetMonthDataTable("高碳烷烃C6-C12", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (tbfactorNames.Contains("炔烃"))
                                {
                                    factorType = "5b1918b9-7c92-477a-8e23-64cbae6477f6";
                                    string sql1 = string.Empty;
                                    if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}' and PollutantCode in (SELECT  PollutantCode FROM [Standard].[TB_PollutantCode] where VOCType!='2')"
                , factorType);
                                    }
                                    else
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    }
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表" && factorsWan.Count() > 0)
                                    {
                                        auditData = m_MonthData.GetMonthDataPager(portIds, factorsWan, monthB, monthF, monthE, monthT, pageSize1, pageNo1, out recordTotal, orderBy1); //月类型 按月数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetMonthDataTable("炔烃", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (tbfactorNames.Contains("高碳烯烃C6-C12"))
                                {
                                    factorType = "7bc5f3d8-7cb3-4273-a646-1ed7df60cdd8";
                                    string sql1 = string.Empty;
                                    if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}' and PollutantCode in (SELECT  PollutantCode FROM [Standard].[TB_PollutantCode] where VOCType!='2')"
                , factorType);
                                    }
                                    else
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    }
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表" && factorsWan.Count() > 0)
                                    {
                                        auditData = m_MonthData.GetMonthDataPager(portIds, factorsWan, monthB, monthF, monthE, monthT, pageSize1, pageNo1, out recordTotal, orderBy1); //月类型 按月数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetMonthDataTable("高碳烯烃C6-C12", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (tbfactorNames.Contains("低碳烯烃C2-C5"))
                                {
                                    factorType = "a41db3c8-0fb4-4b0e-b1b0-e5950f04eff6";
                                    string sql1 = string.Empty;
                                    if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}' and PollutantCode in (SELECT  PollutantCode FROM [Standard].[TB_PollutantCode] where VOCType!='2')"
                , factorType);
                                    }
                                    else
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    }
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表" && factorsWan.Count() > 0)
                                    {
                                        auditData = m_MonthData.GetMonthDataPager(portIds, factorsWan, monthB, monthF, monthE, monthT, pageSize1, pageNo1, out recordTotal, orderBy1); //月类型 按月数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetMonthDataTable("低碳烯烃C2-C5", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (tbfactorNames.Contains("苯系物"))
                                {
                                    factorType = "e9607fce-75dc-4134-9a8d-af2a1eb4a7bf";
                                    string sql1 = string.Empty;
                                    if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}' and PollutantCode in (SELECT  PollutantCode FROM [Standard].[TB_PollutantCode] where VOCType!='2')"
                , factorType);
                                    }
                                    else
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    }
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表" && factorsWan.Count() > 0)
                                    {
                                        auditData = m_MonthData.GetMonthDataPager(portIds, factorsWan, monthB, monthF, monthE, monthT, pageSize1, pageNo1, out recordTotal, orderBy1); //月类型 按月数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetMonthDataTable("苯系物", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (tbfactorNames.Contains("低碳烷烃C2-C5"))
                                {
                                    factorType = "fb1fc34b-770f-4141-b75a-015919725e0b";
                                    string sql1 = string.Empty;
                                    if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}' and PollutantCode in (SELECT  PollutantCode FROM [Standard].[TB_PollutantCode] where VOCType!='2')"
                , factorType);
                                    }
                                    else
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    }
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表" && factorsWan.Count() > 0)
                                    {
                                        auditData = m_MonthData.GetMonthDataPager(portIds, factorsWan, monthB, monthF, monthE, monthT, pageSize1, pageNo1, out recordTotal, orderBy1); //月类型 按月数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetMonthDataTable("低碳烷烃C2-C5", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (tbfactorNames.Contains("氟利昂"))
                                {
                                    factorType = "053c74fd-d1ae-4341-b258-1788079970bd";

                                    string sql1 = string.Empty;
                                    if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}' and PollutantCode in (SELECT  PollutantCode FROM [Standard].[TB_PollutantCode] where VOCType!='2')"
                , factorType);
                                    }
                                    else
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    }
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表" && factorsWan.Count() > 0)
                                    {
                                        auditData = m_MonthData.GetMonthDataPager(portIds, factorsWan, monthB, monthF, monthE, monthT, pageSize1, pageNo1, out recordTotal, orderBy1); //月类型 按月数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetMonthDataTable("氟利昂", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }

                                }

                                if (tbfactorNames.Contains("卤代芳香烃"))
                                {
                                    factorType = "1eaac416-0d69-48b9-aca1-9ff7904907bb";
                                    string sql1 = string.Empty;
                                    if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}' and PollutantCode in (SELECT  PollutantCode FROM [Standard].[TB_PollutantCode] where VOCType!='2')"
                , factorType);
                                    }
                                    else
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    }
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表" && factorsWan.Count() > 0)
                                    {
                                        auditData = m_MonthData.GetMonthDataPager(portIds, factorsWan, monthB, monthF, monthE, monthT, pageSize1, pageNo1, out recordTotal, orderBy1); //月类型 按月数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetMonthDataTable("卤代芳香烃", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (tbfactorNames.Contains("卤代烯烃"))
                                {
                                    factorType = "21de4143-2c28-4256-b71e-6cb5ce63e417";
                                    string sql1 = string.Empty;
                                    if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}' and PollutantCode in (SELECT  PollutantCode FROM [Standard].[TB_PollutantCode] where VOCType!='2')"
                , factorType);
                                    }
                                    else
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    }
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表" && factorsWan.Count() > 0)
                                    {
                                        auditData = m_MonthData.GetMonthDataPager(portIds, factorsWan, monthB, monthF, monthE, monthT, pageSize1, pageNo1, out recordTotal, orderBy1); //月类型 按月数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetMonthDataTable("卤代烯烃", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (tbfactorNames.Contains("卤代烷烃"))
                                {
                                    factorType = "a0bad5d7-9eec-4fa4-9c36-828aad78041d";
                                    string sql1 = string.Empty;
                                    if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}' and PollutantCode in (SELECT  PollutantCode FROM [Standard].[TB_PollutantCode] where VOCType!='2')"
                , factorType);
                                    }
                                    else
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    }
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表" && factorsWan.Count() > 0)
                                    {
                                        auditData = m_MonthData.GetMonthDataPager(portIds, factorsWan, monthB, monthF, monthE, monthT, pageSize1, pageNo1, out recordTotal, orderBy1); //月类型 按月数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetMonthDataTable("卤代烷烃", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (tbfactorNames.Contains("含氮有机物"))
                                {
                                    factorType = "3bbe4b30-53e4-48a8-a884-c3b38a03b705";
                                    string sql1 = string.Empty;
                                    if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}' and PollutantCode in (SELECT  PollutantCode FROM [Standard].[TB_PollutantCode] where VOCType!='2')"
                , factorType);
                                    }
                                    else
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    }
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表" && factorsWan.Count() > 0)
                                    {
                                        auditData = m_MonthData.GetMonthDataPager(portIds, factorsWan, monthB, monthF, monthE, monthT, pageSize1, pageNo1, out recordTotal, orderBy1); //月类型 按月数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetMonthDataTable("含氮有机物", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }

                                if (tbfactorNames.Contains("醛类有机物"))
                                {
                                    factorType = "8198b6fc-7a77-427d-8e3e-9c9228ac168c";
                                    string sql1 = string.Empty;
                                    if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}' and PollutantCode in (SELECT  PollutantCode FROM [Standard].[TB_PollutantCode] where VOCType!='2')"
                , factorType);
                                    }
                                    else
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    }
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表" && factorsWan.Count() > 0)
                                    {
                                        auditData = m_MonthData.GetMonthDataPager(portIds, factorsWan, monthB, monthF, monthE, monthT, pageSize1, pageNo1, out recordTotal, orderBy1); //月类型 按月数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetMonthDataTable("醛类有机物", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (tbfactorNames.Contains("酮类有机物"))
                                {
                                    factorType = "8c9ce5f3-4716-485e-95e1-72608b2843ce";
                                    string sql1 = string.Empty;
                                    if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}' and PollutantCode in (SELECT  PollutantCode FROM [Standard].[TB_PollutantCode] where VOCType!='2')"
                , factorType);
                                    }
                                    else
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    }
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表" && factorsWan.Count() > 0)
                                    {
                                        auditData = m_MonthData.GetMonthDataPager(portIds, factorsWan, monthB, monthF, monthE, monthT, pageSize1, pageNo1, out recordTotal, orderBy1); //月类型 按月数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetMonthDataTable("酮类有机物", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }


                                if (tbfactorNames.Contains("醚类有机物"))
                                {
                                    factorType = "e5f83fd9-0b77-4d1b-935f-1826fddcc343";
                                    string sql1 = string.Empty;
                                    if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}' and PollutantCode in (SELECT  PollutantCode FROM [Standard].[TB_PollutantCode] where VOCType!='2')"
                , factorType);
                                    }
                                    else
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    }
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表" && factorsWan.Count() > 0)
                                    {
                                        auditData = m_MonthData.GetMonthDataPager(portIds, factorsWan, monthB, monthF, monthE, monthT, pageSize1, pageNo1, out recordTotal, orderBy1); //月类型 按月数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetMonthDataTable("醚类有机物", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }


                                if (type == "列表")
                                {
                                    DataTable dtInstrumen = (DataTable)this.ViewState["dtMonth"];
                                    if (dtInstrumen != null)
                                    {
                                        bool a = dtInstrumen.Columns.Contains("Tstamp");
                                        if (a)
                                        {
                                            if (dtInstrumen.Columns.Count > 2)
                                            {
                                                dtInstrumen.Columns["Tstamp"].SetOrdinal(1);
                                            }
                                        }
                                        bool b = dtInstrumen.Columns.Contains("DateTime");
                                        if (b)
                                        {
                                            if (dtInstrumen.Columns.Count > 2)
                                            {
                                                dtInstrumen.Columns["DateTime"].SetOrdinal(1);
                                            }
                                        }
                                    }
                                    if (dtInstrumen.Columns.Contains("OzoneValue"))
                                    {
                                        for (int i = 0; i < dtInstrumen.Rows.Count; i++) //臭氧的数据要乘以1000
                                        {
                                            decimal value = 0M;

                                            if (decimal.TryParse(dtInstrumen.Rows[i]["OzoneValue"].ToString(), out value))
                                            {
                                                dtInstrumen.Rows[i]["OzoneValue"] = DecimalExtension.GetPollutantValue(value * 1000, 0);
                                            }
                                        }
                                    }

                                    gridAudit.DataSource = dtInstrumen.DefaultView;
                                    //数据总行数
                                    gridAudit.VirtualItemCount = recordTotal;
                                    //【给隐藏域赋值，用于显示Chart】
                                    SetHiddenData(portIds, factors, monthB + ";" + monthF + ";" + monthE + ";" + monthT);
                                    //【给隐藏域赋值，用于显示Chart】
                                    groupErJi();

                                    DataView dvst = dtInstrumen.DefaultView;
                                    dvst.Sort = "Year asc";
                                    dvst.Sort = "MonthOfYear asc";
                                    DataTable dtInstrumens = dvst.ToTable();
                                    string Time = "[";
                                    for (int i = 0; i < dtInstrumens.Rows.Count; i++)
                                    {
                                        Time += "'" + dtInstrumens.Rows[i]["Year"].ToString() + "年" + dtInstrumens.Rows[i]["MonthOfYear"].ToString() + "月',";
                                    }
                                    Time = Time.TrimEnd(',');
                                    Time += "]";

                                    string data = "[{connectNulls:true,";
                                    for (int i = 0; i < typeName.Length; i++)
                                    {
                                        data += "name:'" + typeName[i] + "',data:[";
                                        for (int j = 0; j < dtInstrumens.Rows.Count; j++)
                                        {
                                            if (dtInstrumens.Rows[j][typeName[i]].ToString() == "")
                                            {
                                                data += "null,";
                                            }
                                            else
                                            {
                                                data += dtInstrumens.Rows[j][typeName[i]].ToString() + ",";
                                            }
                                        }
                                        data += "]}, {connectNulls:true,";
                                    }
                                    data = data.Substring(0, data.Length - 21);
                                    data += "]";
                                    hdDTime.Value = Time;
                                    hdDate.Value = data;

                                    //hdGroupFac.Value = string.Join(";", factors.Select(p => p.PollutantCode).ToArray());

                                    hdBegion.Value = monthB.ToString() + "," + monthF.ToString();
                                    hdEnd.Value = monthE.ToString() + "," + monthT.ToString();
                                    hdOrderBy.Value = "PointId,Year,MonthOfYear";
                                }
                                else if (type == "图表")
                                {
                                    //【给隐藏域赋值，用于显示Chart】
                                    SetHiddenData(portIds, factors, monthB + ";" + monthF + ";" + monthE + ";" + monthT);
                                    
                                }
                                else
                                {
                                    //【给隐藏域赋值，用于显示Chart】

                                    hdBegion.Value = monthB.ToString() + "," + monthF.ToString();
                                    hdEnd.Value = monthE.ToString() + "," + monthT.ToString();
                                    hdOrderBy.Value = "PointId,Year,MonthOfYear";
                                    
                                }
                            }
                            #endregion
                            #region 周数据
                            else if (radlDataType.SelectedValue == "Week")
                            {
                                string orderBy1 = "PointId asc,Year desc,WeekOfYear desc";
                                if (TimeSort.SelectedValue == "时间升序")
                                    orderBy1 = "PointId asc,Year asc,WeekOfYear asc";
                                int weekB = weekBegin.SelectedDate.Value.Year;
                                int weekE = weekEnd.SelectedDate.Value.Year;
                                int newyear = DateTime.ParseExact(weekFrom.SelectedValue, "yyyy-MM-dd", null).AddDays(6).Year;
                                int nyear = DateTime.ParseExact(weekTo.SelectedValue, "yyyy-MM-dd", null).Year;
                                int weekF = 0;
                                int weekT = 0;
                                if (newyear > weekB)
                                {
                                    weekF = ChinaDate.WeekOfYear(DateTime.ParseExact(weekFrom.SelectedValue, "yyyy-MM-dd", null));
                                }
                                else
                                    weekF = ChinaDate.WeekOfYear(DateTime.ParseExact(weekFrom.SelectedValue, "yyyy-MM-dd", null).AddDays(6));

                                if (weekE > nyear)
                                {
                                    weekT = ChinaDate.WeekOfYear(DateTime.ParseExact(weekTo.SelectedValue, "yyyy-MM-dd", null).AddDays(6));
                                }
                                else
                                {
                                    weekT = ChinaDate.WeekOfYear(DateTime.ParseExact(weekTo.SelectedValue, "yyyy-MM-dd", null));
                                }

                                dtWeek = new DataTable();
                                dtWeek.Columns.Add("PointId", typeof(System.String));//污染物名称 参数
                                string factorType = "";
                                dtWeek.Columns.Add("Year", typeof(System.Int32));//时间戳
                                dtWeek.Columns.Add("WeekOfYear", typeof(System.Int32));//时间戳
                                foreach (string colName in tbfactorNames)
                                {
                                    dtWeek.Columns.Add(colName, typeof(System.String));//烷烃值
                                }
                                
                                this.ViewState.Add("dtWeek", dtWeek);
                                if (tbfactorNames.Contains("高碳烷烃C6-C12"))
                                {
                                    factorType = "06a02408-6eab-4188-b442-86dd8e97654c";
                                    string sql1 = string.Empty;
                                    if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}' and PollutantCode in (SELECT  PollutantCode FROM [Standard].[TB_PollutantCode] where VOCType!='2')"
                , factorType);
                                    }
                                    else
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    }
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表" && factorsWan.Count() > 0)
                                    {
                                        auditData = m_WeekData.GetWeekDataPager(portIds, factorsWan, weekB, weekF, weekE, weekT, pageSize1, pageNo1, out recordTotal, orderBy1); //周类型 按周数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetWeekDataTable("高碳烷烃C6-C12", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (tbfactorNames.Contains("炔烃"))
                                {
                                    factorType = "5b1918b9-7c92-477a-8e23-64cbae6477f6";
                                    string sql1 = string.Empty;
                                    if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}' and PollutantCode in (SELECT  PollutantCode FROM [Standard].[TB_PollutantCode] where VOCType!='2')"
                , factorType);
                                    }
                                    else
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    }
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表" && factorsWan.Count() > 0)
                                    {
                                        auditData = m_WeekData.GetWeekDataPager(portIds, factorsWan, weekB, weekF, weekE, weekT, pageSize1, pageNo1, out recordTotal, orderBy1); //周类型 按周数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetWeekDataTable("炔烃", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (tbfactorNames.Contains("高碳烯烃C6-C12"))
                                {
                                    factorType = "7bc5f3d8-7cb3-4273-a646-1ed7df60cdd8";
                                    string sql1 = string.Empty;
                                    if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}' and PollutantCode in (SELECT  PollutantCode FROM [Standard].[TB_PollutantCode] where VOCType!='2')"
                , factorType);
                                    }
                                    else
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    }
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表" && factorsWan.Count() > 0)
                                    {
                                        auditData = m_WeekData.GetWeekDataPager(portIds, factorsWan, weekB, weekF, weekE, weekT, pageSize1, pageNo1, out recordTotal, orderBy1); //周类型 按周数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetWeekDataTable("高碳烯烃C6-C12", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (tbfactorNames.Contains("低碳烯烃C2-C5"))
                                {
                                    factorType = "a41db3c8-0fb4-4b0e-b1b0-e5950f04eff6";
                                    string sql1 = string.Empty;
                                    if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}' and PollutantCode in (SELECT  PollutantCode FROM [Standard].[TB_PollutantCode] where VOCType!='2')"
                , factorType);
                                    }
                                    else
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    }
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表" && factorsWan.Count() > 0)
                                    {
                                        auditData = m_WeekData.GetWeekDataPager(portIds, factorsWan, weekB, weekF, weekE, weekT, pageSize1, pageNo1, out recordTotal, orderBy1); //周类型 按周数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetWeekDataTable("低碳烯烃C2-C5", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (tbfactorNames.Contains("苯系物"))
                                {
                                    factorType = "e9607fce-75dc-4134-9a8d-af2a1eb4a7bf";
                                    string sql1 = string.Empty;
                                    if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}' and PollutantCode in (SELECT  PollutantCode FROM [Standard].[TB_PollutantCode] where VOCType!='2')"
                , factorType);
                                    }
                                    else
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    }
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表" && factorsWan.Count() > 0)
                                    {
                                        auditData = m_WeekData.GetWeekDataPager(portIds, factorsWan, weekB, weekF, weekE, weekT, pageSize1, pageNo1, out recordTotal, orderBy1); //周类型 按周数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetWeekDataTable("苯系物", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (tbfactorNames.Contains("低碳烷烃C2-C5"))
                                {
                                    factorType = "fb1fc34b-770f-4141-b75a-015919725e0b";
                                    string sql1 = string.Empty;
                                    if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}' and PollutantCode in (SELECT  PollutantCode FROM [Standard].[TB_PollutantCode] where VOCType!='2')"
                , factorType);
                                    }
                                    else
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    }
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表" && factorsWan.Count() > 0)
                                    {
                                        auditData = m_WeekData.GetWeekDataPager(portIds, factorsWan, weekB, weekF, weekE, weekT, pageSize1, pageNo1, out recordTotal, orderBy1); //周类型 按周数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetWeekDataTable("低碳烷烃C2-C5", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (tbfactorNames.Contains("氟利昂"))
                                {
                                    factorType = "053c74fd-d1ae-4341-b258-1788079970bd";

                                    string sql1 = string.Empty;
                                    if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}' and PollutantCode in (SELECT  PollutantCode FROM [Standard].[TB_PollutantCode] where VOCType!='2')"
                , factorType);
                                    }
                                    else
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    }
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表" && factorsWan.Count() > 0)
                                    {
                                        auditData = m_WeekData.GetWeekDataPager(portIds, factorsWan, weekB, weekF, weekE, weekT, pageSize1, pageNo1, out recordTotal, orderBy1); //周类型 按周数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetWeekDataTable("氟利昂", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }

                                }

                                if (tbfactorNames.Contains("卤代芳香烃"))
                                {
                                    factorType = "1eaac416-0d69-48b9-aca1-9ff7904907bb";
                                    string sql1 = string.Empty;
                                    if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}' and PollutantCode in (SELECT  PollutantCode FROM [Standard].[TB_PollutantCode] where VOCType!='2')"
                , factorType);
                                    }
                                    else
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    }
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表" && factorsWan.Count() > 0)
                                    {
                                        auditData = m_WeekData.GetWeekDataPager(portIds, factorsWan, weekB, weekF, weekE, weekT, pageSize1, pageNo1, out recordTotal, orderBy1); //周类型 按周数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetWeekDataTable("卤代芳香烃", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (tbfactorNames.Contains("卤代烯烃"))
                                {
                                    factorType = "21de4143-2c28-4256-b71e-6cb5ce63e417";
                                    string sql1 = string.Empty;
                                    if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}' and PollutantCode in (SELECT  PollutantCode FROM [Standard].[TB_PollutantCode] where VOCType!='2')"
                , factorType);
                                    }
                                    else
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    }
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表" && factorsWan.Count() > 0)
                                    {
                                        auditData = m_WeekData.GetWeekDataPager(portIds, factorsWan, weekB, weekF, weekE, weekT, pageSize1, pageNo1, out recordTotal, orderBy1); //周类型 按周数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetWeekDataTable("卤代烯烃", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (tbfactorNames.Contains("卤代烷烃"))
                                {
                                    factorType = "a0bad5d7-9eec-4fa4-9c36-828aad78041d";
                                    string sql1 = string.Empty;
                                    if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}' and PollutantCode in (SELECT  PollutantCode FROM [Standard].[TB_PollutantCode] where VOCType!='2')"
                , factorType);
                                    }
                                    else
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    }
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表" && factorsWan.Count() > 0)
                                    {
                                        auditData = m_WeekData.GetWeekDataPager(portIds, factorsWan, weekB, weekF, weekE, weekT, pageSize1, pageNo1, out recordTotal, orderBy1); //周类型 按周数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetWeekDataTable("卤代烷烃", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (tbfactorNames.Contains("含氮有机物"))
                                {
                                    factorType = "3bbe4b30-53e4-48a8-a884-c3b38a03b705";
                                    string sql1 = string.Empty;
                                    if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}' and PollutantCode in (SELECT  PollutantCode FROM [Standard].[TB_PollutantCode] where VOCType!='2')"
                , factorType);
                                    }
                                    else
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    }
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表" && factorsWan.Count() > 0)
                                    {
                                        auditData = m_WeekData.GetWeekDataPager(portIds, factorsWan, weekB, weekF, weekE, weekT, pageSize1, pageNo1, out recordTotal, orderBy1); //周类型 按周数据查询
                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetWeekDataTable("含氮有机物", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }

                                if (tbfactorNames.Contains("醛类有机物"))
                                {
                                    factorType = "8198b6fc-7a77-427d-8e3e-9c9228ac168c";
                                    string sql1 = string.Empty;
                                    if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}' and PollutantCode in (SELECT  PollutantCode FROM [Standard].[TB_PollutantCode] where VOCType!='2')"
                , factorType);
                                    }
                                    else
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    }
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表" && factorsWan.Count() > 0)
                                    {
                                        auditData = m_WeekData.GetWeekDataPager(portIds, factorsWan, weekB, weekF, weekE, weekT, pageSize1, pageNo1, out recordTotal, orderBy1); //周类型 按周数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetWeekDataTable("醛类有机物", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (tbfactorNames.Contains("酮类有机物"))
                                {
                                    factorType = "8c9ce5f3-4716-485e-95e1-72608b2843ce";
                                    string sql1 = string.Empty;
                                    if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}' and PollutantCode in (SELECT  PollutantCode FROM [Standard].[TB_PollutantCode] where VOCType!='2')"
                , factorType);
                                    }
                                    else
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    }
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表" && factorsWan.Count() > 0)
                                    {
                                        auditData = m_WeekData.GetWeekDataPager(portIds, factorsWan, weekB, weekF, weekE, weekT, pageSize1, pageNo1, out recordTotal, orderBy1); //周类型 按周数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetWeekDataTable("酮类有机物", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }


                                if (tbfactorNames.Contains("醚类有机物"))
                                {
                                    factorType = "e5f83fd9-0b77-4d1b-935f-1826fddcc343";
                                    string sql1 = string.Empty;
                                    if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}' and PollutantCode in (SELECT  PollutantCode FROM [Standard].[TB_PollutantCode] where VOCType!='2')"
                , factorType);
                                    }
                                    else
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    }
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表" && factorsWan.Count() > 0)
                                    {
                                        auditData = m_WeekData.GetWeekDataPager(portIds, factorsWan, weekB, weekF, weekE, weekT, pageSize1, pageNo1, out recordTotal, orderBy1); //周类型 按周数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetWeekDataTable("醚类有机物", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }


                                if (type == "列表")
                                {
                                    DataTable dtInstrumen = (DataTable)this.ViewState["dtWeek"];
                                    if (dtInstrumen != null)
                                    {
                                        bool a = dtInstrumen.Columns.Contains("Tstamp");
                                        if (a)
                                        {
                                            if (dtInstrumen.Columns.Count > 2)
                                            {
                                                dtInstrumen.Columns["Tstamp"].SetOrdinal(1);
                                            }
                                        }
                                        bool b = dtInstrumen.Columns.Contains("DateTime");
                                        if (b)
                                        {
                                            if (dtInstrumen.Columns.Count > 2)
                                            {
                                                dtInstrumen.Columns["DateTime"].SetOrdinal(1);
                                            }
                                        }
                                    }
                                    if (dtInstrumen.Columns.Contains("OzoneValue"))
                                    {
                                        for (int i = 0; i < dtInstrumen.Rows.Count; i++) //臭氧的数据要乘以1000
                                        {
                                            decimal value = 0M;

                                            if (decimal.TryParse(dtInstrumen.Rows[i]["OzoneValue"].ToString(), out value))
                                            {
                                                dtInstrumen.Rows[i]["OzoneValue"] = DecimalExtension.GetPollutantValue(value * 1000, 0);
                                            }
                                        }
                                    }

                                    gridAudit.DataSource = dtInstrumen.DefaultView;
                                    //数据总行数
                                    gridAudit.VirtualItemCount = recordTotal;
                                    //【给隐藏域赋值，用于显示Chart】
                                    SetHiddenData(portIds, factors, weekB + ";" + weekF + ";" + weekE + ";" + weekT);
                                    //【给隐藏域赋值，用于显示Chart】
                                    groupErJi();
                                    //hdGroupFac.Value = string.Join(";", factors.Select(p => p.PollutantCode).ToArray());
                                    hdBegion.Value = weekB.ToString() + "," + weekF.ToString();
                                    hdEnd.Value = weekE.ToString() + "," + weekT.ToString();
                                    hdOrderBy.Value = "PointId,Year,WeekOfYear";
                                }
                                else if (type == "图表")
                                {
                                    //【给隐藏域赋值，用于显示Chart】
                                    SetHiddenData(portIds, factors, weekB + ";" + weekF + ";" + weekE + ";" + weekT);
                                    
                                }
                                else
                                {
                                    //【给隐藏域赋值，用于显示Chart】

                                    hdBegion.Value = weekB.ToString() + "," + weekF.ToString();
                                    hdEnd.Value = weekE.ToString() + "," + weekT.ToString();
                                    hdOrderBy.Value = "PointId,Year,WeekOfYear";
                                }
                            }
                            #endregion
                            #region 季数据
                            else if (radlDataType.SelectedValue == "Season")
                            {
                                string orderBy1 = "PointId asc,Year desc,SeasonOfYear desc";
                                if (TimeSort.SelectedValue == "时间升序")
                                    orderBy1 = "PointId asc,Year asc,SeasonOfYear asc";
                                int seasonB = seasonBegin.SelectedDate.Value.Year;
                                int seasonE = seasonEnd.SelectedDate.Value.Year;
                                int seasonF = Convert.ToInt32(seasonFrom.SelectedValue);
                                int seasonT = Convert.ToInt32(seasonTo.SelectedValue);
                                //dtBegion = Convert.ToDateTime(weekFrom.SelectedValue);
                                //dtEnd = DateTime.ParseExact(weekTo.SelectedValue, "yyyy-MM-dd", null).AddDays(6).AddDays(1).AddSeconds(-1);
                                dtSeason = new DataTable();
                                dtSeason.Columns.Add("PointId", typeof(System.String));//污染物名称 参数
                                dtSeason.Columns.Add("Year", typeof(System.Int32));//时间戳
                                dtSeason.Columns.Add("SeasonOfYear", typeof(System.Int32));//时间戳
                                string factorType = "";
                                foreach (string colName in tbfactorNames)
                                {
                                    dtSeason.Columns.Add(colName, typeof(System.String));//烷烃值
                                }
                                
                                this.ViewState.Add("dtSeason", dtSeason);
                                if (tbfactorNames.Contains("高碳烷烃C6-C12"))
                                {
                                    factorType = "06a02408-6eab-4188-b442-86dd8e97654c";
                                    string sql1 = string.Empty;
                                    if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}' and PollutantCode in (SELECT  PollutantCode FROM [Standard].[TB_PollutantCode] where VOCType!='2')"
                , factorType);
                                    }
                                    else
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    }
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表" && factorsWan.Count() > 0)
                                    {
                                        auditData = m_SeasonData.GetSeasonDataPager(portIds, factorsWan, seasonB, seasonF, seasonE, seasonT, pageSize1, pageNo1, out recordTotal, orderBy1); //季类型 按季数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetSeasonDataTable("高碳烷烃C6-C12", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (tbfactorNames.Contains("炔烃"))
                                {
                                    factorType = "5b1918b9-7c92-477a-8e23-64cbae6477f6";
                                    string sql1 = string.Empty;
                                    if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}' and PollutantCode in (SELECT  PollutantCode FROM [Standard].[TB_PollutantCode] where VOCType!='2')"
                , factorType);
                                    }
                                    else
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    }
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表" && factorsWan.Count() > 0)
                                    {
                                        auditData = m_SeasonData.GetSeasonDataPager(portIds, factorsWan, seasonB, seasonF, seasonE, seasonT, pageSize1, pageNo1, out recordTotal, orderBy1); //季类型 按季数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetSeasonDataTable("炔烃", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (tbfactorNames.Contains("高碳烯烃C6-C12"))
                                {
                                    factorType = "7bc5f3d8-7cb3-4273-a646-1ed7df60cdd8";
                                    string sql1 = string.Empty;
                                    if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}' and PollutantCode in (SELECT  PollutantCode FROM [Standard].[TB_PollutantCode] where VOCType!='2')"
                , factorType);
                                    }
                                    else
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    }
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表" && factorsWan.Count() > 0)
                                    {
                                        auditData = m_SeasonData.GetSeasonDataPager(portIds, factorsWan, seasonB, seasonF, seasonE, seasonT, pageSize1, pageNo1, out recordTotal, orderBy1); //季类型 按季数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetSeasonDataTable("高碳烯烃C6-C12", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (tbfactorNames.Contains("低碳烯烃C2-C5"))
                                {
                                    factorType = "a41db3c8-0fb4-4b0e-b1b0-e5950f04eff6";
                                    string sql1 = string.Empty;
                                    if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}' and PollutantCode in (SELECT  PollutantCode FROM [Standard].[TB_PollutantCode] where VOCType!='2')"
                , factorType);
                                    }
                                    else
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    }
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表" && factorsWan.Count() > 0)
                                    {
                                        auditData = m_SeasonData.GetSeasonDataPager(portIds, factorsWan, seasonB, seasonF, seasonE, seasonT, pageSize1, pageNo1, out recordTotal, orderBy1); //季类型 按季数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetSeasonDataTable("低碳烯烃C2-C5", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (tbfactorNames.Contains("苯系物"))
                                {
                                    factorType = "e9607fce-75dc-4134-9a8d-af2a1eb4a7bf";
                                    string sql1 = string.Empty;
                                    if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}' and PollutantCode in (SELECT  PollutantCode FROM [Standard].[TB_PollutantCode] where VOCType!='2')"
                , factorType);
                                    }
                                    else
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    }
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表" && factorsWan.Count() > 0)
                                    {
                                        auditData = m_SeasonData.GetSeasonDataPager(portIds, factorsWan, seasonB, seasonF, seasonE, seasonT, pageSize1, pageNo1, out recordTotal, orderBy1); //季类型 按季数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetSeasonDataTable("苯系物", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (tbfactorNames.Contains("低碳烷烃C2-C5"))
                                {
                                    factorType = "fb1fc34b-770f-4141-b75a-015919725e0b";
                                    string sql1 = string.Empty;
                                    if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}' and PollutantCode in (SELECT  PollutantCode FROM [Standard].[TB_PollutantCode] where VOCType!='2')"
                , factorType);
                                    }
                                    else
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    }
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表" && factorsWan.Count() > 0)
                                    {
                                        auditData = m_SeasonData.GetSeasonDataPager(portIds, factorsWan, seasonB, seasonF, seasonE, seasonT, pageSize1, pageNo1, out recordTotal, orderBy1); //季类型 按季数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetSeasonDataTable("低碳烷烃C2-C5", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (tbfactorNames.Contains("氟利昂"))
                                {
                                    factorType = "053c74fd-d1ae-4341-b258-1788079970bd";

                                    string sql1 = string.Empty;
                                    if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}' and PollutantCode in (SELECT  PollutantCode FROM [Standard].[TB_PollutantCode] where VOCType!='2')"
                , factorType);
                                    }
                                    else
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    }
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表" && factorsWan.Count() > 0)
                                    {
                                        auditData = m_SeasonData.GetSeasonDataPager(portIds, factorsWan, seasonB, seasonF, seasonE, seasonT, pageSize1, pageNo1, out recordTotal, orderBy1); //季类型 按季数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetSeasonDataTable("氟利昂", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }

                                }

                                if (tbfactorNames.Contains("卤代芳香烃"))
                                {
                                    factorType = "1eaac416-0d69-48b9-aca1-9ff7904907bb";
                                    string sql1 = string.Empty;
                                    if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}' and PollutantCode in (SELECT  PollutantCode FROM [Standard].[TB_PollutantCode] where VOCType!='2')"
                , factorType);
                                    }
                                    else
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    }
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表" && factorsWan.Count() > 0)
                                    {
                                        auditData = m_SeasonData.GetSeasonDataPager(portIds, factorsWan, seasonB, seasonF, seasonE, seasonT, pageSize1, pageNo1, out recordTotal, orderBy1); //季类型 按季数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetSeasonDataTable("卤代芳香烃", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (tbfactorNames.Contains("卤代烯烃"))
                                {
                                    factorType = "21de4143-2c28-4256-b71e-6cb5ce63e417";
                                    string sql1 = string.Empty;
                                    if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}' and PollutantCode in (SELECT  PollutantCode FROM [Standard].[TB_PollutantCode] where VOCType!='2')"
                , factorType);
                                    }
                                    else
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    }
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表" && factorsWan.Count() > 0)
                                    {
                                        auditData = m_SeasonData.GetSeasonDataPager(portIds, factorsWan, seasonB, seasonF, seasonE, seasonT, pageSize1, pageNo1, out recordTotal, orderBy1); //季类型 按季数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetSeasonDataTable("卤代烯烃", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (tbfactorNames.Contains("卤代烷烃"))
                                {
                                    factorType = "a0bad5d7-9eec-4fa4-9c36-828aad78041d";
                                    string sql1 = string.Empty;
                                    if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}' and PollutantCode in (SELECT  PollutantCode FROM [Standard].[TB_PollutantCode] where VOCType!='2')"
                , factorType);
                                    }
                                    else
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    }
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表" && factorsWan.Count() > 0)
                                    {
                                        auditData = m_SeasonData.GetSeasonDataPager(portIds, factorsWan, seasonB, seasonF, seasonE, seasonT, pageSize1, pageNo1, out recordTotal, orderBy1); //季类型 按季数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetSeasonDataTable("卤代烷烃", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (tbfactorNames.Contains("含氮有机物"))
                                {
                                    factorType = "3bbe4b30-53e4-48a8-a884-c3b38a03b705";
                                    string sql1 = string.Empty;
                                    if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}' and PollutantCode in (SELECT  PollutantCode FROM [Standard].[TB_PollutantCode] where VOCType!='2')"
                , factorType);
                                    }
                                    else
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    }
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表" && factorsWan.Count() > 0)
                                    {
                                        auditData = m_SeasonData.GetSeasonDataPager(portIds, factorsWan, seasonB, seasonF, seasonE, seasonT, pageSize1, pageNo1, out recordTotal, orderBy1); //季类型 按季数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetSeasonDataTable("含氮有机物", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }

                                if (tbfactorNames.Contains("醛类有机物"))
                                {
                                    factorType = "8198b6fc-7a77-427d-8e3e-9c9228ac168c";
                                    string sql1 = string.Empty;
                                    if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}' and PollutantCode in (SELECT  PollutantCode FROM [Standard].[TB_PollutantCode] where VOCType!='2')"
                , factorType);
                                    }
                                    else
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    }
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表" && factorsWan.Count() > 0)
                                    {
                                        auditData = m_SeasonData.GetSeasonDataPager(portIds, factorsWan, seasonB, seasonF, seasonE, seasonT, pageSize1, pageNo1, out recordTotal, orderBy1); //季类型 按季数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetSeasonDataTable("醛类有机物", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (tbfactorNames.Contains("酮类有机物"))
                                {
                                    factorType = "8c9ce5f3-4716-485e-95e1-72608b2843ce";
                                    string sql1 = string.Empty;
                                    if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}' and PollutantCode in (SELECT  PollutantCode FROM [Standard].[TB_PollutantCode] where VOCType!='2')"
                , factorType);
                                    }
                                    else
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    }
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表" && factorsWan.Count() > 0)
                                    {
                                        auditData = m_SeasonData.GetSeasonDataPager(portIds, factorsWan, seasonB, seasonF, seasonE, seasonT, pageSize1, pageNo1, out recordTotal, orderBy1); //季类型 按季数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetSeasonDataTable("酮类有机物", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }


                                if (tbfactorNames.Contains("醚类有机物"))
                                {
                                    factorType = "e5f83fd9-0b77-4d1b-935f-1826fddcc343";
                                    string sql1 = string.Empty;
                                    if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}' and PollutantCode in (SELECT  PollutantCode FROM [Standard].[TB_PollutantCode] where VOCType!='2')"
                , factorType);
                                    }
                                    else
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    }
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表" && factorsWan.Count() > 0)
                                    {
                                        auditData = m_SeasonData.GetSeasonDataPager(portIds, factorsWan, seasonB, seasonF, seasonE, seasonT, pageSize1, pageNo1, out recordTotal, orderBy1); //季类型 按季数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetSeasonDataTable("醚类有机物", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }


                                if (type == "列表")
                                {
                                    DataTable dtInstrumen = (DataTable)this.ViewState["dtSeason"];
                                    if (dtInstrumen != null)
                                    {
                                        bool a = dtInstrumen.Columns.Contains("Tstamp");
                                        if (a)
                                        {
                                            if (dtInstrumen.Columns.Count > 2)
                                            {
                                                dtInstrumen.Columns["Tstamp"].SetOrdinal(1);
                                            }
                                        }
                                        bool b = dtInstrumen.Columns.Contains("DateTime");
                                        if (b)
                                        {
                                            if (dtInstrumen.Columns.Count > 2)
                                            {
                                                dtInstrumen.Columns["DateTime"].SetOrdinal(1);
                                            }
                                        }
                                    }
                                    if (dtInstrumen.Columns.Contains("OzoneValue"))
                                    {
                                        for (int i = 0; i < dtInstrumen.Rows.Count; i++) //臭氧的数据要乘以1000
                                        {
                                            decimal value = 0M;

                                            if (decimal.TryParse(dtInstrumen.Rows[i]["OzoneValue"].ToString(), out value))
                                            {
                                                dtInstrumen.Rows[i]["OzoneValue"] = DecimalExtension.GetPollutantValue(value * 1000, 0);
                                            }
                                        }
                                    }

                                    gridAudit.DataSource = dtInstrumen.DefaultView;
                                    //数据总行数
                                    gridAudit.VirtualItemCount = recordTotal;
                                    //【给隐藏域赋值，用于显示Chart】
                                    SetHiddenData(portIds, factors, seasonB + ";" + seasonF + ";" + seasonE + ";" + seasonT);
                                    groupErJi();
                                    //hdGroupFac.Value = string.Join(";", factors.Select(p => p.PollutantCode).ToArray());
                                    //【给隐藏域赋值，用于显示Chart】
                                    hdBegion.Value = seasonB.ToString() + "," + seasonF.ToString();
                                    hdEnd.Value = seasonE.ToString() + "," + seasonT.ToString();
                                    hdOrderBy.Value = "PointId,Year,SeasonOfYear";
                                }
                                else if (type == "图表")
                                {
                                    //【给隐藏域赋值，用于显示Chart】
                                    SetHiddenData(portIds, factors, seasonB + ";" + seasonF + ";" + seasonE + ";" + seasonT);
                                    
                                }
                                else
                                {
                                    //【给隐藏域赋值，用于显示Chart】
                                    hdBegion.Value = seasonB.ToString() + "," + seasonF.ToString();
                                    hdEnd.Value = seasonE.ToString() + "," + seasonT.ToString();
                                    hdOrderBy.Value = "PointId,Year,SeasonOfYear";
                                }
                            }
                            #endregion
                            #region 年数据
                            else if (radlDataType.SelectedValue == "Year")
                            {
                                string orderBy1 = "PointId asc,Year desc";
                                if (TimeSort.SelectedValue == "时间升序")
                                    orderBy1 = "PointId asc,Year asc";
                                int yearB = yearBegin.SelectedDate.Value.Year;
                                int yearE = yearEnd.SelectedDate.Value.Year;
                                //dtBegion = Convert.ToDateTime(weekFrom.SelectedValue);
                                //dtEnd = DateTime.ParseExact(weekTo.SelectedValue, "yyyy-MM-dd", null).AddDays(6).AddDays(1).AddSeconds(-1);
                                dtYear = new DataTable();
                                dtYear.Columns.Add("PointId", typeof(System.String));//污染物名称 参数
                                dtYear.Columns.Add("Year", typeof(System.Int32));//时间戳
                                foreach (string colName in tbfactorNames)
                                {
                                    dtYear.Columns.Add(colName, typeof(System.String));//污染物值
                                }

                                this.ViewState.Add("dtYear", dtYear);

                                
                                string factorType = "";
                                if (tbfactorNames.Contains("高碳烷烃C6-C12"))
                                {
                                    factorType = "06a02408-6eab-4188-b442-86dd8e97654c";
                                    string sql1 = string.Empty;
                                    if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}' and PollutantCode in (SELECT  PollutantCode FROM [Standard].[TB_PollutantCode] where VOCType!='2')"
                , factorType);
                                    }
                                    else
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    }
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表" && factorsWan.Count() > 0)
                                    {
                                        auditData = m_YearData.GetYearDataPager(portIds, factorsWan, yearB, yearE, pageSize1, pageNo1, out recordTotal, orderBy1); //年类型 按年数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetYearDataTable("高碳烷烃C6-C12", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (tbfactorNames.Contains("炔烃"))
                                {
                                    factorType = "5b1918b9-7c92-477a-8e23-64cbae6477f6";
                                    string sql1 = string.Empty;
                                    if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}' and PollutantCode in (SELECT  PollutantCode FROM [Standard].[TB_PollutantCode] where VOCType!='2')"
                , factorType);
                                    }
                                    else
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    }
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表" && factorsWan.Count() > 0)
                                    {
                                        auditData = m_YearData.GetYearDataPager(portIds, factorsWan, yearB, yearE, pageSize1, pageNo1, out recordTotal, orderBy1); //年类型 按年数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetYearDataTable("炔烃", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (tbfactorNames.Contains("高碳烯烃C6-C12"))
                                {
                                    factorType = "7bc5f3d8-7cb3-4273-a646-1ed7df60cdd8";
                                    string sql1 = string.Empty;
                                    if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}' and PollutantCode in (SELECT  PollutantCode FROM [Standard].[TB_PollutantCode] where VOCType!='2')"
                , factorType);
                                    }
                                    else
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    }
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表" && factorsWan.Count() > 0)
                                    {
                                        auditData = m_YearData.GetYearDataPager(portIds, factorsWan, yearB, yearE, pageSize1, pageNo1, out recordTotal, orderBy1); //年类型 按年数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetYearDataTable("高碳烯烃C6-C12", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (tbfactorNames.Contains("低碳烯烃C2-C5"))
                                {
                                    factorType = "a41db3c8-0fb4-4b0e-b1b0-e5950f04eff6";
                                    string sql1 = string.Empty;
                                    if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}' and PollutantCode in (SELECT  PollutantCode FROM [Standard].[TB_PollutantCode] where VOCType!='2')"
                , factorType);
                                    }
                                    else
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    }
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表" && factorsWan.Count() > 0)
                                    {
                                        auditData = m_YearData.GetYearDataPager(portIds, factorsWan, yearB, yearE, pageSize1, pageNo1, out recordTotal, orderBy1); //年类型 按年数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetYearDataTable("低碳烯烃C2-C5", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (tbfactorNames.Contains("苯系物"))
                                {
                                    factorType = "e9607fce-75dc-4134-9a8d-af2a1eb4a7bf";
                                    string sql1 = string.Empty;
                                    if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}' and PollutantCode in (SELECT  PollutantCode FROM [Standard].[TB_PollutantCode] where VOCType!='2')"
                , factorType);
                                    }
                                    else
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    }
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表" && factorsWan.Count() > 0)
                                    {
                                        auditData = m_YearData.GetYearDataPager(portIds, factorsWan, yearB, yearE, pageSize1, pageNo1, out recordTotal, orderBy1); //年类型 按年数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetYearDataTable("苯系物", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (tbfactorNames.Contains("低碳烷烃C2-C5"))
                                {
                                    factorType = "fb1fc34b-770f-4141-b75a-015919725e0b";
                                    string sql1 = string.Empty;
                                    if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}' and PollutantCode in (SELECT  PollutantCode FROM [Standard].[TB_PollutantCode] where VOCType!='2')"
                , factorType);
                                    }
                                    else
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    }
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表" && factorsWan.Count() > 0)
                                    {
                                        auditData = m_YearData.GetYearDataPager(portIds, factorsWan, yearB, yearE, pageSize1, pageNo1, out recordTotal, orderBy1); //年类型 按年数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetYearDataTable("低碳烷烃C2-C5", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (tbfactorNames.Contains("氟利昂"))
                                {
                                    factorType = "053c74fd-d1ae-4341-b258-1788079970bd";

                                    string sql1 = string.Empty;
                                    if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}' and PollutantCode in (SELECT  PollutantCode FROM [Standard].[TB_PollutantCode] where VOCType!='2')"
                , factorType);
                                    }
                                    else
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    }
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表" && factorsWan.Count() > 0)
                                    {
                                        auditData = m_YearData.GetYearDataPager(portIds, factorsWan, yearB, yearE, pageSize1, pageNo1, out recordTotal, orderBy1); //年类型 按年数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetYearDataTable("氟利昂", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }

                                }

                                if (tbfactorNames.Contains("卤代芳香烃"))
                                {
                                    factorType = "1eaac416-0d69-48b9-aca1-9ff7904907bb";
                                    string sql1 = string.Empty;
                                    if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}' and PollutantCode in (SELECT  PollutantCode FROM [Standard].[TB_PollutantCode] where VOCType!='2')"
                , factorType);
                                    }
                                    else
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    }
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表" && factorsWan.Count() > 0)
                                    {
                                        auditData = m_YearData.GetYearDataPager(portIds, factorsWan, yearB, yearE, pageSize1, pageNo1, out recordTotal, orderBy1); //年类型 按年数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetYearDataTable("卤代芳香烃", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (tbfactorNames.Contains("卤代烯烃"))
                                {
                                    factorType = "21de4143-2c28-4256-b71e-6cb5ce63e417";
                                    string sql1 = string.Empty;
                                    if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}' and PollutantCode in (SELECT  PollutantCode FROM [Standard].[TB_PollutantCode] where VOCType!='2')"
                , factorType);
                                    }
                                    else
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    }
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表" && factorsWan.Count() > 0)
                                    {
                                        auditData = m_YearData.GetYearDataPager(portIds, factorsWan, yearB, yearE, pageSize1, pageNo1, out recordTotal, orderBy1); //年类型 按年数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetYearDataTable("卤代烯烃", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (tbfactorNames.Contains("卤代烷烃"))
                                {
                                    factorType = "a0bad5d7-9eec-4fa4-9c36-828aad78041d";
                                    string sql1 = string.Empty;
                                    if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}' and PollutantCode in (SELECT  PollutantCode FROM [Standard].[TB_PollutantCode] where VOCType!='2')"
                , factorType);
                                    }
                                    else
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    }
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表" && factorsWan.Count() > 0)
                                    {
                                        auditData = m_YearData.GetYearDataPager(portIds, factorsWan, yearB, yearE, pageSize1, pageNo1, out recordTotal, orderBy1); //年类型 按年数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetYearDataTable("卤代烷烃", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (tbfactorNames.Contains("含氮有机物"))
                                {
                                    factorType = "3bbe4b30-53e4-48a8-a884-c3b38a03b705";
                                    string sql1 = string.Empty;
                                    if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}' and PollutantCode in (SELECT  PollutantCode FROM [Standard].[TB_PollutantCode] where VOCType!='2')"
                , factorType);
                                    }
                                    else
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    }
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表" && factorsWan.Count() > 0)
                                    {
                                        auditData = m_YearData.GetYearDataPager(portIds, factorsWan, yearB, yearE, pageSize1, pageNo1, out recordTotal, orderBy1); //年类型 按年数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetYearDataTable("含氮有机物", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }

                                if (tbfactorNames.Contains("醛类有机物"))
                                {
                                    factorType = "8198b6fc-7a77-427d-8e3e-9c9228ac168c";
                                    string sql1 = string.Empty;
                                    if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}' and PollutantCode in (SELECT  PollutantCode FROM [Standard].[TB_PollutantCode] where VOCType!='2')"
                , factorType);
                                    }
                                    else
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    }
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表" && factorsWan.Count() > 0)
                                    {
                                        auditData = m_YearData.GetYearDataPager(portIds, factorsWan, yearB, yearE, pageSize1, pageNo1, out recordTotal, orderBy1); //年类型 按年数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetYearDataTable("醛类有机物", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (tbfactorNames.Contains("酮类有机物"))
                                {
                                    factorType = "8c9ce5f3-4716-485e-95e1-72608b2843ce";
                                    string sql1 = string.Empty;
                                    if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}' and PollutantCode in (SELECT  PollutantCode FROM [Standard].[TB_PollutantCode] where VOCType!='2')"
                , factorType);
                                    }
                                    else
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    }
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表" && factorsWan.Count() > 0)
                                    {
                                        auditData = m_YearData.GetYearDataPager(portIds, factorsWan, yearB, yearE, pageSize1, pageNo1, out recordTotal, orderBy1); //年类型 按年数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetYearDataTable("酮类有机物", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }


                                if (tbfactorNames.Contains("醚类有机物"))
                                {
                                    factorType = "e5f83fd9-0b77-4d1b-935f-1826fddcc343";
                                    string sql1 = string.Empty;
                                    if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}' and PollutantCode in (SELECT  PollutantCode FROM [Standard].[TB_PollutantCode] where VOCType!='2')"
                , factorType);
                                    }
                                    else
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    }
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表" && factorsWan.Count() > 0)
                                    {
                                        auditData = m_YearData.GetYearDataPager(portIds, factorsWan, yearB, yearE, pageSize1, pageNo1, out recordTotal, orderBy1); //年类型 按年数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetYearDataTable("醚类有机物", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }


                                if (type == "列表")
                                {
                                    DataTable dtInstrumen = (DataTable)this.ViewState["dtYear"];
                                    if (dtInstrumen != null)
                                    {
                                        bool a = dtInstrumen.Columns.Contains("Tstamp");
                                        if (a)
                                        {
                                            if (dtInstrumen.Columns.Count > 2)
                                            {
                                                dtInstrumen.Columns["Tstamp"].SetOrdinal(1);
                                            }
                                        }
                                        bool b = dtInstrumen.Columns.Contains("DateTime");
                                        if (b)
                                        {
                                            if (dtInstrumen.Columns.Count > 2)
                                            {
                                                dtInstrumen.Columns["DateTime"].SetOrdinal(1);
                                            }
                                        }
                                    }
                                    if (dtInstrumen.Columns.Contains("OzoneValue"))
                                    {
                                        for (int i = 0; i < dtInstrumen.Rows.Count; i++) //臭氧的数据要乘以1000
                                        {
                                            decimal value = 0M;

                                            if (decimal.TryParse(dtInstrumen.Rows[i]["OzoneValue"].ToString(), out value))
                                            {
                                                dtInstrumen.Rows[i]["OzoneValue"] = DecimalExtension.GetPollutantValue(value * 1000, 0);
                                            }
                                        }
                                    }

                                    gridAudit.DataSource = dtInstrumen.DefaultView;
                                    //数据总行数
                                    gridAudit.VirtualItemCount = recordTotal;
                                    //【给隐藏域赋值，用于显示Chart】
                                    SetHiddenData(portIds, factors, yearB + ";" + yearE);
                                    //hdGroupFac.Value = string.Join(";", factors.Select(p => p.PollutantCode).ToArray());
                                    groupErJi();
                                    hdBegion.Value = yearB.ToString();
                                    hdEnd.Value = yearE.ToString();
                                    hdOrderBy.Value = orderBy1;
                                }
                                else if (type == "图表")
                                {
                                    //【给隐藏域赋值，用于显示Chart】
                                    //SetHiddenData(portIds, factors, weekB + ";" + weekF + ";" + weekE + ";" + weekT);
                                    
                                }
                                else
                                {
                                    //【给隐藏域赋值，用于显示Chart】
                                    auditData = m_YearData.GetYearDataPager(portIds, factorCodes, yearB, yearE, pageSize1, pageNo1, out recordTotal, orderBy1); //年类型 按年数据查询
                                    hdBegion.Value = yearB.ToString();
                                    hdEnd.Value = yearE.ToString();
                                    hdOrderBy.Value = orderBy1;
                                    
                                }
                            }
                            #endregion
                        }
                        #endregion
                        #region 原始
                        else
                        {
                            #region 原始一分钟
                            hdTimeType.Value = RadioButtonList1.SelectedValue;
                            if (RadioButtonList1.SelectedValue == "Min1")
                            {
                                dtBegion = dtpBegin.SelectedDate.Value;
                                dtEnd = dtpEnd.SelectedDate.Value;
                                dt = new DataTable();
                                dt.Columns.Add("PointId", typeof(System.String));//污染物名称 参数
                                foreach (string colName in tbfactorNames)
                                {
                                    dt.Columns.Add(colName, typeof(System.String));//污染物值
                                }
                                dt.Columns.Add("Tstamp", typeof(System.DateTime));//时间戳
                                this.ViewState.Add("dt", dt);

                                dtIcon = new DataTable();
                                dtIcon.Columns.Add("PointId", typeof(System.String));//污染物名称 参数
                                foreach (string colName in tbfactorNames)
                                {
                                    dtIcon.Columns.Add(colName, typeof(System.Decimal));//污染物值
                                }
                                dtIcon.Columns.Add("Tstamp", typeof(System.DateTime));//时间戳
                                this.ViewState.Add("dtIcon", dtIcon);
                                string orderBy1 = "PointId asc,Tstamp desc";
                                if (TimeSort.SelectedValue == "时间升序")
                                    orderBy1 = "PointId asc,Tstamp asc";
                                string factorType = "";
                                if (tbfactorNames.Contains("高碳烷烃C6-C12"))
                                {
                                    factorType = "06a02408-6eab-4188-b442-86dd8e97654c";
                                    string sql1 = string.Empty;
                                    if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}' and PollutantCode in (SELECT  PollutantCode FROM [Standard].[TB_PollutantCode] where VOCType!='2')"
                , factorType);
                                    }
                                    else
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    }
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表" && factorsWan.Count() > 0)
                                    {
                                        auditData = m_Min1Data.GetDataPager(portIds, factorCodes, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//一分钟类型按 一分钟数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetDataTable("高碳烷烃C6-C12", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (tbfactorNames.Contains("炔烃"))
                                {
                                    factorType = "5b1918b9-7c92-477a-8e23-64cbae6477f6";
                                    string sql1 = string.Empty;
                                    if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}' and PollutantCode in (SELECT  PollutantCode FROM [Standard].[TB_PollutantCode] where VOCType!='2')"
                , factorType);
                                    }
                                    else
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    }
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表" && factorsWan.Count() > 0)
                                    {
                                        auditData = m_Min1Data.GetDataPager(portIds, factorCodes, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//一分钟类型按 一分钟数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetDataTable("炔烃", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (tbfactorNames.Contains("高碳烯烃C6-C12"))
                                {
                                    factorType = "7bc5f3d8-7cb3-4273-a646-1ed7df60cdd8";
                                    string sql1 = string.Empty;
                                    if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}' and PollutantCode in (SELECT  PollutantCode FROM [Standard].[TB_PollutantCode] where VOCType!='2')"
                , factorType);
                                    }
                                    else
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    }
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表" && factorsWan.Count() > 0)
                                    {
                                        auditData = m_Min1Data.GetDataPager(portIds, factorCodes, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//一分钟类型按 一分钟数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetDataTable("高碳烯烃C6-C12", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (tbfactorNames.Contains("低碳烯烃C2-C5"))
                                {
                                    factorType = "a41db3c8-0fb4-4b0e-b1b0-e5950f04eff6";
                                    string sql1 = string.Empty;
                                    if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}' and PollutantCode in (SELECT  PollutantCode FROM [Standard].[TB_PollutantCode] where VOCType!='2')"
                , factorType);
                                    }
                                    else
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    }
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表" && factorsWan.Count() > 0)
                                    {
                                        auditData = m_Min1Data.GetDataPager(portIds, factorCodes, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//一分钟类型按 一分钟数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetDataTable("低碳烯烃C2-C5", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (tbfactorNames.Contains("苯系物"))
                                {
                                    factorType = "e9607fce-75dc-4134-9a8d-af2a1eb4a7bf";
                                    string sql1 = string.Empty;
                                    if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}' and PollutantCode in (SELECT  PollutantCode FROM [Standard].[TB_PollutantCode] where VOCType!='2')"
                , factorType);
                                    }
                                    else
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    }
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表" && factorsWan.Count() > 0)
                                    {
                                        auditData = m_Min1Data.GetDataPager(portIds, factorCodes, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//一分钟类型按 一分钟数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetDataTable("苯系物", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (tbfactorNames.Contains("低碳烷烃C2-C5"))
                                {
                                    factorType = "fb1fc34b-770f-4141-b75a-015919725e0b";
                                    string sql1 = string.Empty;
                                    if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}' and PollutantCode in (SELECT  PollutantCode FROM [Standard].[TB_PollutantCode] where VOCType!='2')"
                , factorType);
                                    }
                                    else
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    }
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表" && factorsWan.Count() > 0)
                                    {
                                        auditData = m_Min1Data.GetDataPager(portIds, factorCodes, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//一分钟类型按 一分钟数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetDataTable("低碳烷烃C2-C5", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (tbfactorNames.Contains("氟利昂"))
                                {
                                    factorType = "053c74fd-d1ae-4341-b258-1788079970bd";

                                    string sql1 = string.Empty;
                                    if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}' and PollutantCode in (SELECT  PollutantCode FROM [Standard].[TB_PollutantCode] where VOCType!='2')"
                , factorType);
                                    }
                                    else
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    }
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表" && factorsWan.Count() > 0)
                                    {
                                        auditData = m_Min1Data.GetDataPager(portIds, factorCodes, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//一分钟类型按 一分钟数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetDataTable("氟利昂", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }

                                }

                                if (tbfactorNames.Contains("卤代芳香烃"))
                                {
                                    factorType = "1eaac416-0d69-48b9-aca1-9ff7904907bb";
                                    string sql1 = string.Empty;
                                    if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}' and PollutantCode in (SELECT  PollutantCode FROM [Standard].[TB_PollutantCode] where VOCType!='2')"
                , factorType);
                                    }
                                    else
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    }
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表" && factorsWan.Count() > 0)
                                    {
                                        auditData = m_Min1Data.GetDataPager(portIds, factorCodes, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//一分钟类型按 一分钟数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetDataTable("卤代芳香烃", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (tbfactorNames.Contains("卤代烯烃"))
                                {
                                    factorType = "21de4143-2c28-4256-b71e-6cb5ce63e417";
                                    string sql1 = string.Empty;
                                    if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}' and PollutantCode in (SELECT  PollutantCode FROM [Standard].[TB_PollutantCode] where VOCType!='2')"
                , factorType);
                                    }
                                    else
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    }
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表" && factorsWan.Count() > 0)
                                    {
                                        auditData = m_Min1Data.GetDataPager(portIds, factorCodes, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//一分钟类型按 一分钟数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetDataTable("卤代烯烃", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (tbfactorNames.Contains("卤代烷烃"))
                                {
                                    factorType = "a0bad5d7-9eec-4fa4-9c36-828aad78041d";
                                    string sql1 = string.Empty;
                                    if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}' and PollutantCode in (SELECT  PollutantCode FROM [Standard].[TB_PollutantCode] where VOCType!='2')"
                , factorType);
                                    }
                                    else
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    }
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表" && factorsWan.Count() > 0)
                                    {
                                        auditData = m_Min1Data.GetDataPager(portIds, factorCodes, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//一分钟类型按 一分钟数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetDataTable("卤代烷烃", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (tbfactorNames.Contains("含氮有机物"))
                                {
                                    factorType = "3bbe4b30-53e4-48a8-a884-c3b38a03b705";
                                    string sql1 = string.Empty;
                                    if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}' and PollutantCode in (SELECT  PollutantCode FROM [Standard].[TB_PollutantCode] where VOCType!='2')"
                , factorType);
                                    }
                                    else
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    }
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表" && factorsWan.Count() > 0)
                                    {
                                        auditData = m_Min1Data.GetDataPager(portIds, factorCodes, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//一分钟类型按 一分钟数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetDataTable("含氮有机物", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }

                                if (tbfactorNames.Contains("醛类有机物"))
                                {
                                    factorType = "8198b6fc-7a77-427d-8e3e-9c9228ac168c";
                                    string sql1 = string.Empty;
                                    if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}' and PollutantCode in (SELECT  PollutantCode FROM [Standard].[TB_PollutantCode] where VOCType!='2')"
                , factorType);
                                    }
                                    else
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    }
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表" && factorsWan.Count() > 0)
                                    {
                                        auditData = m_Min1Data.GetDataPager(portIds, factorCodes, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//一分钟类型按 一分钟数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetDataTable("醛类有机物", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (tbfactorNames.Contains("酮类有机物"))
                                {
                                    factorType = "8c9ce5f3-4716-485e-95e1-72608b2843ce";
                                    string sql1 = string.Empty;
                                    if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}' and PollutantCode in (SELECT  PollutantCode FROM [Standard].[TB_PollutantCode] where VOCType!='2')"
                , factorType);
                                    }
                                    else
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    }
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表" && factorsWan.Count() > 0)
                                    {
                                        auditData = m_Min1Data.GetDataPager(portIds, factorCodes, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//一分钟类型按 一分钟数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetDataTable("酮类有机物", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }


                                if (tbfactorNames.Contains("醚类有机物"))
                                {
                                    factorType = "e5f83fd9-0b77-4d1b-935f-1826fddcc343";
                                    string sql1 = string.Empty;
                                    if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}' and PollutantCode in (SELECT  PollutantCode FROM [Standard].[TB_PollutantCode] where VOCType!='2')"
                , factorType);
                                    }
                                    else
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    }
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表" && factorsWan.Count() > 0)
                                    {
                                        auditData = m_Min1Data.GetDataPager(portIds, factorCodes, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//一分钟类型按 一分钟数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetDataTable("醚类有机物", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }


                                if (type == "列表")
                                {
                                    DataTable dtInstrumen = (DataTable)this.ViewState["dt"];
                                    if (dtInstrumen != null)
                                    {
                                        bool a = dtInstrumen.Columns.Contains("Tstamp");
                                        if (a)
                                        {
                                            if (dtInstrumen.Columns.Count > 2)
                                            {
                                                dtInstrumen.Columns["Tstamp"].SetOrdinal(1);
                                            }
                                        }
                                        bool b = dtInstrumen.Columns.Contains("DateTime");
                                        if (b)
                                        {
                                            if (dtInstrumen.Columns.Count > 2)
                                            {
                                                dtInstrumen.Columns["DateTime"].SetOrdinal(1);
                                            }
                                        }
                                    }
                                    if (dtInstrumen.Columns.Contains("OzoneValue"))
                                    {
                                        for (int i = 0; i < dtInstrumen.Rows.Count; i++) //臭氧的数据要乘以1000
                                        {
                                            decimal value = 0M;

                                            if (decimal.TryParse(dtInstrumen.Rows[i]["OzoneValue"].ToString(), out value))
                                            {
                                                dtInstrumen.Rows[i]["OzoneValue"] = DecimalExtension.GetPollutantValue(value * 1000, 0);
                                            }
                                        }
                                    }

                                    DataView dvsf = dtInstrumen.AsDataView();
                                    gridAudit.DataSource = dvsf;
                                    //数据总行数
                                    gridAudit.VirtualItemCount = recordTotal;
                                    //【给隐藏域赋值，用于显示Chart】
                                    SetHiddenData(portIds, factors, dtBegion, dtEnd);
                                    groupErJi();
                                    DataView dvst = dtInstrumen.DefaultView;
                                    dvst.Sort = "Tstamp asc";
                                    DataTable dtInstrumens = dvst.ToTable();
                                    string Time = "[";
                                    for (int i = 0; i < dtInstrumens.Rows.Count; i++)
                                    {
                                        Time += "'" + dtInstrumens.Rows[i]["Tstamp"].ToString() + "',";
                                    }
                                    Time = Time.TrimEnd(',');
                                    Time += "]";

                                    string data = "[{connectNulls:true,";
                                    for (int i = 0; i < TypeName.Length; i++)
                                    {
                                        data += "name:'" + TypeName[i] + "',data:[";
                                        for (int j = 0; j < dtInstrumens.Rows.Count; j++)
                                        {
                                            if (dtInstrumens.Rows[j][TypeName[i]].ToString() == "")
                                            {
                                                data += "null,";
                                            }
                                            else
                                            {
                                                data += dtInstrumens.Rows[j][TypeName[i]].ToString() + ",";
                                            }
                                        }
                                        data += "]}, {connectNulls:true,";
                                    }
                                    data = data.Substring(0, data.Length - 21);
                                    data += "]";
                                    hdDTime.Value = Time;
                                    hdDate.Value = data;

                                    ////【给隐藏域赋值，用于显示Chart】
                                    //hdGroupFac.Value = string.Join(";", factors.Select(p => p.PollutantCode).ToArray());
                                    hdBegion.Value = dtBegion.ToString("yyyy-MM-dd HH:mm:ss");
                                    hdEnd.Value = dtEnd.ToString("yyyy-MM-dd HH:mm:ss");
                                    hdOrderBy.Value = orderBy1;
                                }
                                else if (type == "图表")
                                {
                                    //【给隐藏域赋值，用于显示Chart】
                                    SetHiddenData(portIds, factors, dtBegion, dtEnd);
                                    
                                }
                                else
                                {
                                    //【给隐藏域赋值，用于显示Chart】
                                    
                                    hdBegion.Value = dtBegion.ToString("yyyy-MM-dd HH:mm:ss");
                                    hdEnd.Value = dtEnd.ToString("yyyy-MM-dd HH:mm:ss");
                                    hdOrderBy.Value = orderBy1;
                                }
                            }
                            #endregion
                            #region 原始五分钟
                            else if (RadioButtonList1.SelectedValue == "Min5")
                            {
                                dtBegion = dtpBegin.SelectedDate.Value;
                                dtEnd = dtpEnd.SelectedDate.Value;
                                dt = new DataTable();
                                dt.Columns.Add("PointId", typeof(System.String));//污染物名称 参数
                                foreach (string colName in tbfactorNames)
                                {
                                    dt.Columns.Add(colName, typeof(System.String));//污染物值
                                }
                                dt.Columns.Add("Tstamp", typeof(System.DateTime));//时间戳
                                this.ViewState.Add("dt", dt);

                                dtIcon = new DataTable();
                                dtIcon.Columns.Add("PointId", typeof(System.String));//污染物名称 参数
                                foreach (string colName in tbfactorNames)
                                {
                                    dtIcon.Columns.Add(colName, typeof(System.Decimal));//污染物值
                                }
                                dtIcon.Columns.Add("Tstamp", typeof(System.DateTime));//时间戳
                                this.ViewState.Add("dtIcon", dtIcon);
                                string orderBy1 = "PointId asc,Tstamp desc";
                                if (TimeSort.SelectedValue == "时间升序")
                                    orderBy1 = "PointId asc,Tstamp asc";
                                string factorType = "";
                                if (tbfactorNames.Contains("高碳烷烃C6-C12"))
                                {
                                    factorType = "06a02408-6eab-4188-b442-86dd8e97654c";
                                    string sql1 = string.Empty;
                                    if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}' and PollutantCode in (SELECT  PollutantCode FROM [Standard].[TB_PollutantCode] where VOCType!='2')"
                , factorType);
                                    }
                                    else
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    }
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表" && factorsWan.Count() > 0)
                                    {
                                        auditData = m_Min5Data.GetDataPager(portIds, factorCodes, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//五分钟类型按 小时数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetDataTable("高碳烷烃C6-C12", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (tbfactorNames.Contains("炔烃"))
                                {
                                    factorType = "5b1918b9-7c92-477a-8e23-64cbae6477f6";
                                    string sql1 = string.Empty;
                                    if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}' and PollutantCode in (SELECT  PollutantCode FROM [Standard].[TB_PollutantCode] where VOCType!='2')"
                , factorType);
                                    }
                                    else
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    }
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表" && factorsWan.Count() > 0)
                                    {
                                        auditData = m_Min5Data.GetDataPager(portIds, factorCodes, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//五分钟类型按 小时数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetDataTable("炔烃", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (tbfactorNames.Contains("高碳烯烃C6-C12"))
                                {
                                    factorType = "7bc5f3d8-7cb3-4273-a646-1ed7df60cdd8";
                                    string sql1 = string.Empty;
                                    if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}' and PollutantCode in (SELECT  PollutantCode FROM [Standard].[TB_PollutantCode] where VOCType!='2')"
                , factorType);
                                    }
                                    else
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    }
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表" && factorsWan.Count() > 0)
                                    {
                                        auditData = m_Min5Data.GetDataPager(portIds, factorCodes, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//五分钟类型按 小时数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetDataTable("高碳烯烃C6-C12", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (tbfactorNames.Contains("低碳烯烃C2-C5"))
                                {
                                    factorType = "a41db3c8-0fb4-4b0e-b1b0-e5950f04eff6";
                                    string sql1 = string.Empty;
                                    if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}' and PollutantCode in (SELECT  PollutantCode FROM [Standard].[TB_PollutantCode] where VOCType!='2')"
                , factorType);
                                    }
                                    else
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    }
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表" && factorsWan.Count() > 0)
                                    {
                                        auditData = m_Min5Data.GetDataPager(portIds, factorCodes, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//五分钟类型按 小时数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetDataTable("低碳烯烃C2-C5", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (tbfactorNames.Contains("苯系物"))
                                {
                                    factorType = "e9607fce-75dc-4134-9a8d-af2a1eb4a7bf";
                                    string sql1 = string.Empty;
                                    if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}' and PollutantCode in (SELECT  PollutantCode FROM [Standard].[TB_PollutantCode] where VOCType!='2')"
                , factorType);
                                    }
                                    else
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    }
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表" && factorsWan.Count() > 0)
                                    {
                                        auditData = m_Min5Data.GetDataPager(portIds, factorCodes, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//五分钟类型按 小时数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetDataTable("苯系物", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (tbfactorNames.Contains("低碳烷烃C2-C5"))
                                {
                                    factorType = "fb1fc34b-770f-4141-b75a-015919725e0b";
                                    string sql1 = string.Empty;
                                    if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}' and PollutantCode in (SELECT  PollutantCode FROM [Standard].[TB_PollutantCode] where VOCType!='2')"
                , factorType);
                                    }
                                    else
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    }
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表" && factorsWan.Count() > 0)
                                    {
                                        auditData = m_Min5Data.GetDataPager(portIds, factorCodes, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//五分钟类型按 小时数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetDataTable("低碳烷烃C2-C5", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (tbfactorNames.Contains("氟利昂"))
                                {
                                    factorType = "053c74fd-d1ae-4341-b258-1788079970bd";

                                    string sql1 = string.Empty;
                                    if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}' and PollutantCode in (SELECT  PollutantCode FROM [Standard].[TB_PollutantCode] where VOCType!='2')"
                , factorType);
                                    }
                                    else
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    }
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表" && factorsWan.Count() > 0)
                                    {
                                        auditData = m_Min5Data.GetDataPager(portIds, factorCodes, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//五分钟类型按 小时数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetDataTable("氟利昂", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }

                                }

                                if (tbfactorNames.Contains("卤代芳香烃"))
                                {
                                    factorType = "1eaac416-0d69-48b9-aca1-9ff7904907bb";
                                    string sql1 = string.Empty;
                                    if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}' and PollutantCode in (SELECT  PollutantCode FROM [Standard].[TB_PollutantCode] where VOCType!='2')"
                , factorType);
                                    }
                                    else
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    }
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表" && factorsWan.Count() > 0)
                                    {
                                        auditData = m_Min5Data.GetDataPager(portIds, factorCodes, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//五分钟类型按 小时数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetDataTable("卤代芳香烃", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (tbfactorNames.Contains("卤代烯烃"))
                                {
                                    factorType = "21de4143-2c28-4256-b71e-6cb5ce63e417";
                                    string sql1 = string.Empty;
                                    if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}' and PollutantCode in (SELECT  PollutantCode FROM [Standard].[TB_PollutantCode] where VOCType!='2')"
                , factorType);
                                    }
                                    else
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    }
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表" && factorsWan.Count() > 0)
                                    {
                                        auditData = m_Min5Data.GetDataPager(portIds, factorCodes, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//五分钟类型按 小时数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetDataTable("卤代烯烃", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (tbfactorNames.Contains("卤代烷烃"))
                                {
                                    factorType = "a0bad5d7-9eec-4fa4-9c36-828aad78041d";
                                    string sql1 = string.Empty;
                                    if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}' and PollutantCode in (SELECT  PollutantCode FROM [Standard].[TB_PollutantCode] where VOCType!='2')"
                , factorType);
                                    }
                                    else
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    }
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表" && factorsWan.Count() > 0)
                                    {
                                        auditData = m_Min5Data.GetDataPager(portIds, factorCodes, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//五分钟类型按 小时数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetDataTable("卤代烷烃", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (tbfactorNames.Contains("含氮有机物"))
                                {
                                    factorType = "3bbe4b30-53e4-48a8-a884-c3b38a03b705";
                                    string sql1 = string.Empty;
                                    if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}' and PollutantCode in (SELECT  PollutantCode FROM [Standard].[TB_PollutantCode] where VOCType!='2')"
                , factorType);
                                    }
                                    else
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    }
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表" && factorsWan.Count() > 0)
                                    {
                                        auditData = m_Min5Data.GetDataPager(portIds, factorCodes, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//五分钟类型按 小时数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetDataTable("含氮有机物", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }

                                if (tbfactorNames.Contains("醛类有机物"))
                                {
                                    factorType = "8198b6fc-7a77-427d-8e3e-9c9228ac168c";
                                    string sql1 = string.Empty;
                                    if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}' and PollutantCode in (SELECT  PollutantCode FROM [Standard].[TB_PollutantCode] where VOCType!='2')"
                , factorType);
                                    }
                                    else
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    }
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表" && factorsWan.Count() > 0)
                                    {
                                        auditData = m_Min5Data.GetDataPager(portIds, factorCodes, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//五分钟类型按 小时数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetDataTable("醛类有机物", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (tbfactorNames.Contains("酮类有机物"))
                                {
                                    factorType = "8c9ce5f3-4716-485e-95e1-72608b2843ce";
                                    string sql1 = string.Empty;
                                    if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}' and PollutantCode in (SELECT  PollutantCode FROM [Standard].[TB_PollutantCode] where VOCType!='2')"
                , factorType);
                                    }
                                    else
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    }
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表" && factorsWan.Count() > 0)
                                    {
                                        auditData = m_Min5Data.GetDataPager(portIds, factorCodes, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//五分钟类型按 小时数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetDataTable("酮类有机物", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }


                                if (tbfactorNames.Contains("醚类有机物"))
                                {
                                    factorType = "e5f83fd9-0b77-4d1b-935f-1826fddcc343";
                                    string sql1 = string.Empty;
                                    if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}' and PollutantCode in (SELECT  PollutantCode FROM [Standard].[TB_PollutantCode] where VOCType!='2')"
                , factorType);
                                    }
                                    else
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    }
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表" && factorsWan.Count() > 0)
                                    {
                                        auditData = m_Min5Data.GetDataPager(portIds, factorCodes, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//五分钟类型按 小时数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetDataTable("醚类有机物", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }


                                if (type == "列表")
                                {
                                    DataTable dtInstrumen = (DataTable)this.ViewState["dt"];
                                    if (dtInstrumen != null)
                                    {
                                        bool a = dtInstrumen.Columns.Contains("Tstamp");
                                        if (a)
                                        {
                                            if (dtInstrumen.Columns.Count > 2)
                                            {
                                                dtInstrumen.Columns["Tstamp"].SetOrdinal(1);
                                            }
                                        }
                                        bool b = dtInstrumen.Columns.Contains("DateTime");
                                        if (b)
                                        {
                                            if (dtInstrumen.Columns.Count > 2)
                                            {
                                                dtInstrumen.Columns["DateTime"].SetOrdinal(1);
                                            }
                                        }
                                    }
                                    if (dtInstrumen.Columns.Contains("OzoneValue"))
                                    {
                                        for (int i = 0; i < dtInstrumen.Rows.Count; i++) //臭氧的数据要乘以1000
                                        {
                                            decimal value = 0M;

                                            if (decimal.TryParse(dtInstrumen.Rows[i]["OzoneValue"].ToString(), out value))
                                            {
                                                dtInstrumen.Rows[i]["OzoneValue"] = DecimalExtension.GetPollutantValue(value * 1000, 0);
                                            }
                                        }
                                    }

                                    DataView dvsf = dtInstrumen.AsDataView();
                                    gridAudit.DataSource = dvsf;
                                    //数据总行数
                                    gridAudit.VirtualItemCount = recordTotal;
                                    //【给隐藏域赋值，用于显示Chart】
                                    SetHiddenData(portIds, factors, dtBegion, dtEnd);
                                    groupErJi();
                                    DataView dvst = dtInstrumen.DefaultView;
                                    dvst.Sort = "Tstamp asc";
                                    DataTable dtInstrumens = dvst.ToTable();
                                    string Time = "[";
                                    for (int i = 0; i < dtInstrumens.Rows.Count; i++)
                                    {
                                        Time += "'" + dtInstrumens.Rows[i]["Tstamp"].ToString() + "',";
                                    }
                                    Time = Time.TrimEnd(',');
                                    Time += "]";

                                    string data = "[{connectNulls:true,";
                                    for (int i = 0; i < TypeName.Length; i++)
                                    {
                                        data += "name:'" + TypeName[i] + "',data:[";
                                        for (int j = 0; j < dtInstrumens.Rows.Count; j++)
                                        {
                                            if (dtInstrumens.Rows[j][TypeName[i]].ToString() == "")
                                            {
                                                data += "null,";
                                            }
                                            else
                                            {
                                                data += dtInstrumens.Rows[j][TypeName[i]].ToString() + ",";
                                            }
                                        }
                                        data += "]}, {connectNulls:true,";
                                    }
                                    data = data.Substring(0, data.Length - 21);
                                    data += "]";
                                    hdDTime.Value = Time;
                                    hdDate.Value = data;

                                    ////【给隐藏域赋值，用于显示Chart】
                                    //hdGroupFac.Value = string.Join(";", factors.Select(p => p.PollutantCode).ToArray());
                                    hdBegion.Value = dtBegion.ToString("yyyy-MM-dd HH:mm:ss");
                                    hdEnd.Value = dtEnd.ToString("yyyy-MM-dd HH:mm:ss");
                                    hdOrderBy.Value = orderBy1;
                                }
                                else if (type == "图表")
                                {
                                    //【给隐藏域赋值，用于显示Chart】
                                    SetHiddenData(portIds, factors, dtBegion, dtEnd);
                                    //auditData1 = m_HourData.GetHourDataPagerNew(portIds, factorCodes, dtBegion, dtEnd, pageSize1, pageNo1, out recordTotal);//60分钟类型按 小时数据查询
                                    auditData = m_Min5Data.GetDataPager(portIds, factorCodes, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//五分钟类型按 小时数据查询
                                }
                                else
                                {
                                    //【给隐藏域赋值，用于显示Chart】
                                    
                                    hdBegion.Value = dtBegion.ToString("yyyy-MM-dd HH:mm:ss");
                                    hdEnd.Value = dtEnd.ToString("yyyy-MM-dd HH:mm:ss");
                                    hdOrderBy.Value = orderBy1;
                                }
                                
                            }
                            #endregion
                            #region 原始一小时
                            else if (RadioButtonList1.SelectedValue == "Min60")
                            {
                                dtBegion = dtpBegin.SelectedDate.Value;
                                dtEnd = dtpEnd.SelectedDate.Value;
                                dt = new DataTable();
                                dt.Columns.Add("PointId", typeof(System.String));//污染物名称 参数
                                foreach (string colName in tbfactorNames)
                                {
                                    dt.Columns.Add(colName, typeof(System.String));//污染物值
                                }
                                dt.Columns.Add("Tstamp", typeof(System.DateTime));//时间戳
                                this.ViewState.Add("dt", dt);

                                dtIcon = new DataTable();
                                dtIcon.Columns.Add("PointId", typeof(System.String));//污染物名称 参数
                                foreach (string colName in tbfactorNames)
                                {
                                    dtIcon.Columns.Add(colName, typeof(System.Decimal));//污染物值
                                }
                                dtIcon.Columns.Add("Tstamp", typeof(System.DateTime));//时间戳
                                this.ViewState.Add("dtIcon", dtIcon);
                                string orderBy1 = "PointId asc,Tstamp desc";
                                if (TimeSort.SelectedValue == "时间升序")
                                    orderBy1 = "PointId asc,Tstamp asc";
                                string factorType = "";
                                if (tbfactorNames.Contains("高碳烷烃C6-C12"))
                                {
                                    factorType = "06a02408-6eab-4188-b442-86dd8e97654c";
                                    string sql1 = string.Empty;
                                    if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}' and PollutantCode in (SELECT  PollutantCode FROM [Standard].[TB_PollutantCode] where VOCType!='2')"
                , factorType);
                                    }
                                    else
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    }
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表")
                                    {
                                        if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                        {
                                            auditData = m_Min60Data.GetDataPagerForO3AllTimeVOCs(portIds, factorsWan, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//60分钟类型按 60分钟数据查询
                                            DataTable Dkqy = auditData.ToTable();
                                            Dkqy.Columns.Remove("rows");
                                            auditData = Dkqy.DefaultView;
                                        }
                                        else
                                        {
                                            auditData = m_Min60Data.GetDataPager(portIds, factorsWan, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//60分钟类型按 60分钟数据查询
                                        }
                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetDataTable("高碳烷烃C6-C12", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (tbfactorNames.Contains("炔烃"))
                                {
                                    factorType = "5b1918b9-7c92-477a-8e23-64cbae6477f6";
                                    string sql1 = string.Empty;
                                    if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}' and PollutantCode in (SELECT  PollutantCode FROM [Standard].[TB_PollutantCode] where VOCType!='2')"
                , factorType);
                                    }
                                    else
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    }
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表")
                                    {
                                        if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                        {
                                            auditData = m_Min60Data.GetDataPagerForO3AllTimeVOCs(portIds, factorsWan, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//60分钟类型按 60分钟数据查询
                                            DataTable Dkqy = auditData.ToTable();
                                            Dkqy.Columns.Remove("rows");
                                            auditData = Dkqy.DefaultView;
                                        }
                                        else
                                        {
                                            auditData = m_Min60Data.GetDataPager(portIds, factorsWan, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//60分钟类型按 60分钟数据查询
                                        }
                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetDataTable("炔烃", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (tbfactorNames.Contains("高碳烯烃C6-C12"))
                                {
                                    factorType = "7bc5f3d8-7cb3-4273-a646-1ed7df60cdd8";
                                    string sql1 = string.Empty;
                                    if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}' and PollutantCode in (SELECT  PollutantCode FROM [Standard].[TB_PollutantCode] where VOCType!='2')"
                , factorType);
                                    }
                                    else
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    }
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表")
                                    {
                                        if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                        {
                                            auditData = m_Min60Data.GetDataPagerForO3AllTimeVOCs(portIds, factorsWan, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//60分钟类型按 60分钟数据查询
                                            DataTable Dkqy = auditData.ToTable();
                                            Dkqy.Columns.Remove("rows");
                                            auditData = Dkqy.DefaultView;
                                        }
                                        else
                                        {
                                            auditData = m_Min60Data.GetDataPager(portIds, factorsWan, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//60分钟类型按 60分钟数据查询
                                        }
                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetDataTable("高碳烯烃C6-C12", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (tbfactorNames.Contains("低碳烯烃C2-C5"))
                                {
                                    factorType = "a41db3c8-0fb4-4b0e-b1b0-e5950f04eff6";
                                    string sql1 = string.Empty;
                                    if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}' and PollutantCode in (SELECT  PollutantCode FROM [Standard].[TB_PollutantCode] where VOCType!='2')"
                , factorType);
                                    }
                                    else
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    }
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表")
                                    {
                                        if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                        {
                                            auditData = m_Min60Data.GetDataPagerForO3AllTimeVOCs(portIds, factorsWan, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//60分钟类型按 60分钟数据查询
                                            DataTable Dkqy = auditData.ToTable();
                                            Dkqy.Columns.Remove("rows");
                                            auditData = Dkqy.DefaultView;
                                        }
                                        else
                                        {
                                            auditData = m_Min60Data.GetDataPager(portIds, factorsWan, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//60分钟类型按 60分钟数据查询
                                        }
                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetDataTable("低碳烯烃C2-C5", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (tbfactorNames.Contains("苯系物"))
                                {
                                    factorType = "e9607fce-75dc-4134-9a8d-af2a1eb4a7bf";
                                    string sql1 = string.Empty;
                                    if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}' and PollutantCode in (SELECT  PollutantCode FROM [Standard].[TB_PollutantCode] where VOCType!='2')"
                , factorType);
                                    }
                                    else
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    }
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表")
                                    {
                                        if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                        {
                                            auditData = m_Min60Data.GetDataPagerForO3AllTimeVOCs(portIds, factorsWan, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//60分钟类型按 60分钟数据查询
                                            DataTable Dkqy = auditData.ToTable();
                                            Dkqy.Columns.Remove("rows");
                                            auditData = Dkqy.DefaultView;
                                        }
                                        else
                                        {
                                            auditData = m_Min60Data.GetDataPager(portIds, factorsWan, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//60分钟类型按 60分钟数据查询
                                        }
                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetDataTable("苯系物", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (tbfactorNames.Contains("低碳烷烃C2-C5"))
                                {
                                    factorType = "fb1fc34b-770f-4141-b75a-015919725e0b";
                                    string sql1 = string.Empty;
                                    if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}' and PollutantCode in (SELECT  PollutantCode FROM [Standard].[TB_PollutantCode] where VOCType!='2')"
                , factorType);
                                    }
                                    else
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    }
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表")
                                    {
                                        if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                        {
                                            auditData = m_Min60Data.GetDataPagerForO3AllTimeVOCs(portIds, factorsWan, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//60分钟类型按 60分钟数据查询
                                            DataTable Dkqy = auditData.ToTable();
                                            Dkqy.Columns.Remove("rows");
                                            auditData = Dkqy.DefaultView;
                                        }
                                        else
                                        {
                                            auditData = m_Min60Data.GetDataPager(portIds, factorsWan, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//60分钟类型按 60分钟数据查询
                                        }
                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetDataTable("低碳烷烃C2-C5", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (tbfactorNames.Contains("氟利昂"))
                                {

                                    factorType = "053c74fd-d1ae-4341-b258-1788079970bd";

                                    string sql1 = string.Empty;
                                    if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}' and PollutantCode in (SELECT  PollutantCode FROM [Standard].[TB_PollutantCode] where VOCType!='2')"
                , factorType);
                                    }
                                    else
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    }
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表" && factorsWan.Count()>0)
                                    {
                                        if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                        {
                                            auditData = m_Min60Data.GetDataPagerForO3AllTimeVOCs(portIds, factorsWan, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//60分钟类型按 60分钟数据查询
                                            DataTable Dkqy = auditData.ToTable();
                                            Dkqy.Columns.Remove("rows");
                                            auditData = Dkqy.DefaultView;
                                        }
                                        else
                                        {
                                            auditData = m_Min60Data.GetDataPager(portIds, factorsWan, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//60分钟类型按 60分钟数据查询
                                        }
                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetDataTable("氟利昂", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }

                                }

                                if (tbfactorNames.Contains("卤代芳香烃"))
                                {
                                    factorType = "1eaac416-0d69-48b9-aca1-9ff7904907bb";
                                    string sql1 = string.Empty;
                                    if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}' and PollutantCode in (SELECT  PollutantCode FROM [Standard].[TB_PollutantCode] where VOCType!='2')"
                , factorType);
                                    }
                                    else
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    }
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表" && factorsWan.Count() > 0)
                                    {
                                        if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                        {
                                            auditData = m_Min60Data.GetDataPagerForO3AllTimeVOCs(portIds, factorsWan, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//60分钟类型按 60分钟数据查询
                                            DataTable Dkqy = auditData.ToTable();
                                            Dkqy.Columns.Remove("rows");
                                            auditData = Dkqy.DefaultView;
                                        }
                                        else
                                        {
                                            auditData = m_Min60Data.GetDataPager(portIds, factorsWan, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//60分钟类型按 60分钟数据查询
                                        }
                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetDataTable("卤代芳香烃", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (tbfactorNames.Contains("卤代烯烃"))
                                {
                                    factorType = "21de4143-2c28-4256-b71e-6cb5ce63e417";
                                    string sql1 = string.Empty;
                                    if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}' and PollutantCode in (SELECT  PollutantCode FROM [Standard].[TB_PollutantCode] where VOCType!='2')"
                , factorType);
                                    }
                                    else
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    }
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表" && factorsWan.Count() > 0)
                                    {
                                        if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                        {
                                            auditData = m_Min60Data.GetDataPagerForO3AllTimeVOCs(portIds, factorsWan, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//60分钟类型按 60分钟数据查询
                                            DataTable Dkqy = auditData.ToTable();
                                            Dkqy.Columns.Remove("rows");
                                            auditData = Dkqy.DefaultView;
                                        }
                                        else
                                        {
                                            auditData = m_Min60Data.GetDataPager(portIds, factorsWan, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//60分钟类型按 60分钟数据查询
                                        }
                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetDataTable("卤代烯烃", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (tbfactorNames.Contains("卤代烷烃"))
                                {
                                    factorType = "a0bad5d7-9eec-4fa4-9c36-828aad78041d";
                                    string sql1 = string.Empty;
                                    if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}' and PollutantCode in (SELECT  PollutantCode FROM [Standard].[TB_PollutantCode] where VOCType!='2')"
                , factorType);
                                    }
                                    else
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    }
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表" && factorsWan.Count() > 0)
                                    {
                                        if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                        {
                                            auditData = m_Min60Data.GetDataPagerForO3AllTimeVOCs(portIds, factorsWan, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//60分钟类型按 60分钟数据查询
                                            DataTable Dkqy = auditData.ToTable();
                                            Dkqy.Columns.Remove("rows");
                                            auditData = Dkqy.DefaultView;
                                        }
                                        else
                                        {
                                            auditData = m_Min60Data.GetDataPager(portIds, factorsWan, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//60分钟类型按 60分钟数据查询
                                        }
                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetDataTable("卤代烷烃", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (tbfactorNames.Contains("含氮有机物"))
                                {
                                    factorType = "3bbe4b30-53e4-48a8-a884-c3b38a03b705";
                                    string sql1 = string.Empty;
                                    if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}' and PollutantCode in (SELECT  PollutantCode FROM [Standard].[TB_PollutantCode] where VOCType!='2')"
                , factorType);
                                    }
                                    else
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    }
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表" && factorsWan.Count() > 0)
                                    {
                                        if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                        {
                                            auditData = m_Min60Data.GetDataPagerForO3AllTimeVOCs(portIds, factorsWan, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//60分钟类型按 60分钟数据查询
                                            DataTable Dkqy = auditData.ToTable();
                                            Dkqy.Columns.Remove("rows");
                                            auditData = Dkqy.DefaultView;
                                        }
                                        else
                                        {
                                            auditData = m_Min60Data.GetDataPager(portIds, factorsWan, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//60分钟类型按 60分钟数据查询
                                        }
                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetDataTable("含氮有机物", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }

                                if (tbfactorNames.Contains("醛类有机物"))
                                {
                                    factorType = "8198b6fc-7a77-427d-8e3e-9c9228ac168c";
                                    string sql1 = string.Empty;
                                    if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}' and PollutantCode in (SELECT  PollutantCode FROM [Standard].[TB_PollutantCode] where VOCType!='2')"
                , factorType);
                                    }
                                    else
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    }
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表" && factorsWan.Count() > 0)
                                    {
                                        if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                        {
                                            auditData = m_Min60Data.GetDataPagerForO3AllTimeVOCs(portIds, factorsWan, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//60分钟类型按 60分钟数据查询
                                            DataTable Dkqy = auditData.ToTable();
                                            Dkqy.Columns.Remove("rows");
                                            auditData = Dkqy.DefaultView;
                                        }
                                        else
                                        {
                                            auditData = m_Min60Data.GetDataPager(portIds, factorsWan, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//60分钟类型按 60分钟数据查询
                                        }
                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetDataTable("醛类有机物", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (tbfactorNames.Contains("酮类有机物"))
                                {
                                    factorType = "8c9ce5f3-4716-485e-95e1-72608b2843ce";
                                    string sql1 = string.Empty;
                                    if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}' and PollutantCode in (SELECT  PollutantCode FROM [Standard].[TB_PollutantCode] where VOCType!='2')"
                , factorType);
                                    }
                                    else
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    }
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表" && factorsWan.Count() > 0)
                                    {
                                        if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                        {
                                            auditData = m_Min60Data.GetDataPagerForO3AllTimeVOCs(portIds, factorsWan, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//60分钟类型按 60分钟数据查询
                                            DataTable Dkqy = auditData.ToTable();
                                            Dkqy.Columns.Remove("rows");
                                            auditData = Dkqy.DefaultView;
                                        }
                                        else
                                        {
                                            auditData = m_Min60Data.GetDataPager(portIds, factorsWan, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//60分钟类型按 60分钟数据查询
                                        }
                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetDataTable("酮类有机物", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }


                                if (tbfactorNames.Contains("醚类有机物"))
                                {
                                    factorType = "e5f83fd9-0b77-4d1b-935f-1826fddcc343";
                                    string sql1 = string.Empty;
                                    if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}' and PollutantCode in (SELECT  PollutantCode FROM [Standard].[TB_PollutantCode] where VOCType!='2')"
                , factorType);
                                    }
                                    else
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    }
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表" && factorsWan.Count() > 0)
                                    {
                                        if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                        {
                                            auditData = m_Min60Data.GetDataPagerForO3AllTimeVOCs(portIds, factorsWan, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//60分钟类型按 60分钟数据查询
                                            recordTotal = auditData.ToTable().Rows.Count;
                                            DataTable Dkqy = auditData.ToTable();
                                            Dkqy.Columns.Remove("rows");
                                            auditData = Dkqy.DefaultView;
                                        }
                                        else
                                        {
                                            auditData = m_Min60Data.GetDataPager(portIds, factorsWan, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//60分钟类型按 60分钟数据查询
                                        }
                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetDataTable("醚类有机物", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                

                                if (type == "列表")
                                {
                                    DataTable dtInstrumen = (DataTable)this.ViewState["dt"];
                                    if (dtInstrumen != null)
                                    {
                                        bool a = dtInstrumen.Columns.Contains("Tstamp");
                                        if (a)
                                        {
                                            if (dtInstrumen.Columns.Count > 2)
                                            {
                                                dtInstrumen.Columns["Tstamp"].SetOrdinal(1);
                                            }
                                        }
                                        bool b = dtInstrumen.Columns.Contains("DateTime");
                                        if (b)
                                        {
                                            if (dtInstrumen.Columns.Count > 2)
                                            {
                                                dtInstrumen.Columns["DateTime"].SetOrdinal(1);
                                            }
                                        }
                                    }
                                    if (dtInstrumen.Columns.Contains("OzoneValue"))
                                    {
                                        for (int i = 0; i < dtInstrumen.Rows.Count; i++) //臭氧的数据要乘以1000
                                        {
                                            decimal value = 0M;

                                            if (decimal.TryParse(dtInstrumen.Rows[i]["OzoneValue"].ToString(), out value))
                                            {
                                                dtInstrumen.Rows[i]["OzoneValue"] = DecimalExtension.GetPollutantValue(value * 1000, 0);
                                            }
                                        }
                                    }
                                    if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                    {
                                        hdTimeType.Value = RadioButtonList1.SelectedValue + "kqy";
                                        
                                    }
                                    DataView dvsf = dtInstrumen.AsDataView();
                                    gridAudit.DataSource = dvsf;
                                    //数据总行数
                                    gridAudit.VirtualItemCount = recordTotal;
                                    //【给隐藏域赋值，用于显示Chart】
                                    SetHiddenData(portIds, factors, dtBegion, dtEnd);
                                    groupErJi();
                                    DataView dvst = dtInstrumen.DefaultView;
                                    dvst.Sort = "Tstamp asc";
                                    DataTable dtInstrumens = dvst.ToTable();
                                    string Time = "[";
                                    for (int i = 0; i < dtInstrumens.Rows.Count; i++)
                                    {
                                        Time += "'" + Convert.ToDateTime(dtInstrumens.Rows[i]["Tstamp"].ToString()).ToString("MM/dd HH时") + "',";
                                    }
                                    Time = Time.TrimEnd(',');
                                    Time += "]";

                                    string data = "[{connectNulls:true,";
                                    for (int i = 0; i < TypeName.Length; i++)
                                    {
                                        data += "name:'" + TypeName[i] + "',data:[";
                                        for (int j = 0; j < dtInstrumens.Rows.Count; j++)
                                        {
                                            if (dtInstrumens.Rows[j][TypeName[i]].ToString() == "")
                                            {
                                                data +="null,";
                                            }
                                            else
                                            {
                                                data += dtInstrumens.Rows[j][TypeName[i]].ToString() + ",";
                                            }
                                            
                                        }
                                        //data.TrimEnd(',');
                                        data += "]}, {connectNulls:true,";
                                    }
                                    data = data.Substring(0, data.Length - 21);
                                    data += "]";
                                    hdDTime.Value = Time;
                                    hdDate.Value = data;

                                    //hdGroupFac.Value = string.Join(";", factors.Select(p => p.PollutantCode).ToArray());
                                    hdBegion.Value = dtBegion.ToString("yyyy-MM-dd HH:mm:ss");
                                    hdEnd.Value = dtEnd.ToString("yyyy-MM-dd HH:mm:ss");
                                    hdOrderBy.Value = orderBy1;
                                }
                                else if (type == "图表")
                                {
                                    //【给隐藏域赋值，用于显示Chart】
                                    if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                    {
                                        hdTimeType.Value = RadioButtonList1.SelectedValue + "kqy";

                                    }
                                    SetHiddenData(portIds, factors, dtBegion, dtEnd);
                                    
                                }
                                else
                                {
                                    if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                    {
                                        hdTimeType.Value = RadioButtonList1.SelectedValue + "kqy";

                                    }
                                    hdBegion.Value = dtBegion.ToString("yyyy-MM-dd HH:mm:ss");
                                    hdEnd.Value = dtEnd.ToString("yyyy-MM-dd HH:mm:ss");
                                    hdOrderBy.Value = orderBy1;
                                    
                                }
                            }
                            #endregion
                            #region 原始日
                            else if (RadioButtonList1.SelectedValue == "OriDay")
                            {
                                dtBegion = dtpDayBegin.SelectedDate.Value;
                                dtEnd = dtpDayEnd.SelectedDate.Value;
                                dt = new DataTable();
                                dt.Columns.Add("PointId", typeof(System.String));//污染物名称 参数
                                foreach (string colName in tbfactorNames)
                                {
                                    dt.Columns.Add(colName, typeof(System.String));//污染物值
                                }
                                dt.Columns.Add("Tstamp", typeof(System.DateTime));//时间戳
                                this.ViewState.Add("dt", dt);

                                dtIcon = new DataTable();
                                dtIcon.Columns.Add("PointId", typeof(System.String));//污染物名称 参数
                                foreach (string colName in tbfactorNames)
                                {
                                    dtIcon.Columns.Add(colName, typeof(System.Decimal));//污染物值
                                }
                                dtIcon.Columns.Add("Tstamp", typeof(System.DateTime));//时间戳
                                this.ViewState.Add("dtIcon", dtIcon);
                                string orderBy1 = "PointId asc,DateTime desc";
                                if (TimeSort.SelectedValue == "时间升序")
                                    orderBy1 = "PointId asc,DateTime asc";
                                string factorType = "";
                                if (tbfactorNames.Contains("高碳烷烃C6-C12"))
                                {
                                    factorType = "06a02408-6eab-4188-b442-86dd8e97654c";
                                    string sql1 = string.Empty;
                                    if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}' and PollutantCode in (SELECT  PollutantCode FROM [Standard].[TB_PollutantCode] where VOCType!='2')"
                , factorType);
                                    }
                                    else
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    }
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表" && factorsWan.Count() > 0)
                                    {
                                        auditData = m_DayOriData.GetDataPagers(portIds, factorsWan, dtBegion, dtEnd, pageSize1, pageNo1, out recordTotal, orderBy1);//原始日数据类型按 原始日数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetDataTable("高碳烷烃C6-C12", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (tbfactorNames.Contains("炔烃"))
                                {
                                    factorType = "5b1918b9-7c92-477a-8e23-64cbae6477f6";
                                    string sql1 = string.Empty;
                                    if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}' and PollutantCode in (SELECT  PollutantCode FROM [Standard].[TB_PollutantCode] where VOCType!='2')"
                , factorType);
                                    }
                                    else
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    }
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表" && factorsWan.Count() > 0)
                                    {
                                        auditData = m_DayOriData.GetDataPagers(portIds, factorsWan, dtBegion, dtEnd, pageSize1, pageNo1, out recordTotal, orderBy1);//原始日数据类型按 原始日数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetDataTable("炔烃", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (tbfactorNames.Contains("高碳烯烃C6-C12"))
                                {
                                    factorType = "7bc5f3d8-7cb3-4273-a646-1ed7df60cdd8";
                                    string sql1 = string.Empty;
                                    if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}' and PollutantCode in (SELECT  PollutantCode FROM [Standard].[TB_PollutantCode] where VOCType!='2')"
                , factorType);
                                    }
                                    else
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    }
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表" && factorsWan.Count() > 0)
                                    {
                                        auditData = m_DayOriData.GetDataPagers(portIds, factorsWan, dtBegion, dtEnd, pageSize1, pageNo1, out recordTotal, orderBy1);//原始日数据类型按 原始日数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetDataTable("高碳烯烃C6-C12", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (tbfactorNames.Contains("低碳烯烃C2-C5"))
                                {
                                    factorType = "a41db3c8-0fb4-4b0e-b1b0-e5950f04eff6";
                                    string sql1 = string.Empty;
                                    if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}' and PollutantCode in (SELECT  PollutantCode FROM [Standard].[TB_PollutantCode] where VOCType!='2')"
                , factorType);
                                    }
                                    else
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    }
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表" && factorsWan.Count() > 0)
                                    {
                                        auditData = m_DayOriData.GetDataPagers(portIds, factorsWan, dtBegion, dtEnd, pageSize1, pageNo1, out recordTotal, orderBy1);//原始日数据类型按 原始日数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetDataTable("低碳烯烃C2-C5", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (tbfactorNames.Contains("苯系物"))
                                {
                                    factorType = "e9607fce-75dc-4134-9a8d-af2a1eb4a7bf";
                                    string sql1 = string.Empty;
                                    if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}' and PollutantCode in (SELECT  PollutantCode FROM [Standard].[TB_PollutantCode] where VOCType!='2')"
                , factorType);
                                    }
                                    else
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    }
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表" && factorsWan.Count() > 0)
                                    {
                                        auditData = m_DayOriData.GetDataPagers(portIds, factorsWan, dtBegion, dtEnd, pageSize1, pageNo1, out recordTotal, orderBy1);//原始日数据类型按 原始日数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetDataTable("苯系物", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (tbfactorNames.Contains("低碳烷烃C2-C5"))
                                {
                                    factorType = "fb1fc34b-770f-4141-b75a-015919725e0b";
                                    string sql1 = string.Empty;
                                    if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}' and PollutantCode in (SELECT  PollutantCode FROM [Standard].[TB_PollutantCode] where VOCType!='2')"
                , factorType);
                                    }
                                    else
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    }
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表" && factorsWan.Count() > 0)
                                    {
                                        auditData = m_DayOriData.GetDataPagers(portIds, factorsWan, dtBegion, dtEnd, pageSize1, pageNo1, out recordTotal, orderBy1);//原始日数据类型按 原始日数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetDataTable("低碳烷烃C2-C5", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (tbfactorNames.Contains("氟利昂"))
                                {
                                    factorType = "053c74fd-d1ae-4341-b258-1788079970bd";

                                    string sql1 = string.Empty;
                                    if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}' and PollutantCode in (SELECT  PollutantCode FROM [Standard].[TB_PollutantCode] where VOCType!='2')"
                , factorType);
                                    }
                                    else
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    }
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表" && factorsWan.Count() > 0)
                                    {
                                        auditData = m_DayOriData.GetDataPagers(portIds, factorsWan, dtBegion, dtEnd, pageSize1, pageNo1, out recordTotal, orderBy1);//原始日数据类型按 原始日数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetDataTable("氟利昂", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }

                                }

                                if (tbfactorNames.Contains("卤代芳香烃"))
                                {
                                    factorType = "1eaac416-0d69-48b9-aca1-9ff7904907bb";
                                    string sql1 = string.Empty;
                                    if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}' and PollutantCode in (SELECT  PollutantCode FROM [Standard].[TB_PollutantCode] where VOCType!='2')"
                , factorType);
                                    }
                                    else
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    }
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表" && factorsWan.Count() > 0)
                                    {
                                        auditData = m_DayOriData.GetDataPagers(portIds, factorsWan, dtBegion, dtEnd, pageSize1, pageNo1, out recordTotal, orderBy1);//原始日数据类型按 原始日数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetDataTable("卤代芳香烃", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (tbfactorNames.Contains("卤代烯烃"))
                                {
                                    factorType = "21de4143-2c28-4256-b71e-6cb5ce63e417";
                                    string sql1 = string.Empty;
                                    if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}' and PollutantCode in (SELECT  PollutantCode FROM [Standard].[TB_PollutantCode] where VOCType!='2')"
                , factorType);
                                    }
                                    else
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    }
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表" && factorsWan.Count() > 0)
                                    {
                                        auditData = m_DayOriData.GetDataPagers(portIds, factorsWan, dtBegion, dtEnd, pageSize1, pageNo1, out recordTotal, orderBy1);//原始日数据类型按 原始日数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetDataTable("卤代烯烃", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (tbfactorNames.Contains("卤代烷烃"))
                                {
                                    factorType = "a0bad5d7-9eec-4fa4-9c36-828aad78041d";
                                    string sql1 = string.Empty;
                                    if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}' and PollutantCode in (SELECT  PollutantCode FROM [Standard].[TB_PollutantCode] where VOCType!='2')"
                , factorType);
                                    }
                                    else
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    }
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表" && factorsWan.Count() > 0)
                                    {
                                        auditData = m_DayOriData.GetDataPagers(portIds, factorsWan, dtBegion, dtEnd, pageSize1, pageNo1, out recordTotal, orderBy1);//原始日数据类型按 原始日数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetDataTable("卤代烷烃", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (tbfactorNames.Contains("含氮有机物"))
                                {
                                    factorType = "3bbe4b30-53e4-48a8-a884-c3b38a03b705";
                                    string sql1 = string.Empty;
                                    if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}' and PollutantCode in (SELECT  PollutantCode FROM [Standard].[TB_PollutantCode] where VOCType!='2')"
                , factorType);
                                    }
                                    else
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    }
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表" && factorsWan.Count() > 0)
                                    {
                                        auditData = m_DayOriData.GetDataPagers(portIds, factorsWan, dtBegion, dtEnd, pageSize1, pageNo1, out recordTotal, orderBy1);//原始日数据类型按 原始日数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetDataTable("含氮有机物", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }

                                if (tbfactorNames.Contains("醛类有机物"))
                                {
                                    factorType = "8198b6fc-7a77-427d-8e3e-9c9228ac168c";
                                    string sql1 = string.Empty;
                                    if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}' and PollutantCode in (SELECT  PollutantCode FROM [Standard].[TB_PollutantCode] where VOCType!='2')"
                , factorType);
                                    }
                                    else
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    }
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表" && factorsWan.Count() > 0)
                                    {
                                        auditData = m_DayOriData.GetDataPagers(portIds, factorsWan, dtBegion, dtEnd, pageSize1, pageNo1, out recordTotal, orderBy1);//原始日数据类型按 原始日数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetDataTable("醛类有机物", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (tbfactorNames.Contains("酮类有机物"))
                                {
                                    factorType = "8c9ce5f3-4716-485e-95e1-72608b2843ce";
                                    string sql1 = string.Empty;
                                    if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}' and PollutantCode in (SELECT  PollutantCode FROM [Standard].[TB_PollutantCode] where VOCType!='2')"
                , factorType);
                                    }
                                    else
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    }
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表" && factorsWan.Count() > 0)
                                    {
                                        auditData = m_DayOriData.GetDataPagers(portIds, factorsWan, dtBegion, dtEnd, pageSize1, pageNo1, out recordTotal, orderBy1);//原始日数据类型按 原始日数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetDataTable("酮类有机物", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }


                                if (tbfactorNames.Contains("醚类有机物"))
                                {
                                    factorType = "e5f83fd9-0b77-4d1b-935f-1826fddcc343";
                                    string sql1 = string.Empty;
                                    if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}' and PollutantCode in (SELECT  PollutantCode FROM [Standard].[TB_PollutantCode] where VOCType!='2')"
                , factorType);
                                    }
                                    else
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    }
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表" && factorsWan.Count() > 0)
                                    {
                                        auditData = m_DayOriData.GetDataPagers(portIds, factorsWan, dtBegion, dtEnd, pageSize1, pageNo1, out recordTotal, orderBy1);//原始日数据类型按 原始日数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetDataTable("醚类有机物", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }


                                if (type == "列表")
                                {
                                    DataTable dtInstrumen = (DataTable)this.ViewState["dt"];
                                    if (dtInstrumen != null)
                                    {
                                        bool a = dtInstrumen.Columns.Contains("Tstamp");
                                        if (a)
                                        {
                                            if (dtInstrumen.Columns.Count > 2)
                                            {
                                                dtInstrumen.Columns["Tstamp"].SetOrdinal(1);
                                            }
                                        }
                                        bool b = dtInstrumen.Columns.Contains("DateTime");
                                        if (b)
                                        {
                                            if (dtInstrumen.Columns.Count > 2)
                                            {
                                                dtInstrumen.Columns["DateTime"].SetOrdinal(1);
                                            }
                                        }
                                    }
                                    if (dtInstrumen.Columns.Contains("OzoneValue"))
                                    {
                                        for (int i = 0; i < dtInstrumen.Rows.Count; i++) //臭氧的数据要乘以1000
                                        {
                                            decimal value = 0M;

                                            if (decimal.TryParse(dtInstrumen.Rows[i]["OzoneValue"].ToString(), out value))
                                            {
                                                dtInstrumen.Rows[i]["OzoneValue"] = DecimalExtension.GetPollutantValue(value * 1000, 0);
                                            }
                                        }
                                    }

                                    DataView dvsf = dtInstrumen.AsDataView();
                                    gridAudit.DataSource = dvsf;
                                    //数据总行数
                                    gridAudit.VirtualItemCount = recordTotal;
                                    //【给隐藏域赋值，用于显示Chart】
                                    SetHiddenData(portIds, factors, dtBegion, dtEnd);
                                    groupErJi();
                                    DataView dvst = dtInstrumen.DefaultView;
                                    dvst.Sort = "Tstamp asc";
                                    DataTable dtInstrumens = dvst.ToTable();
                                    string Time = "[";
                                    for (int i = 0; i < dtInstrumens.Rows.Count; i++)
                                    {
                                        Time += "'" + Convert.ToDateTime(dtInstrumens.Rows[i]["Tstamp"].ToString()).ToString("yyyy/MM/dd") + "',";
                                    }
                                    Time = Time.TrimEnd(',');
                                    Time += "]";

                                    string data = "[{connectNulls:true,";
                                    for (int i = 0; i < TypeName.Length; i++)
                                    {
                                        data += "name:'" + TypeName[i] + "',data:[";
                                        for (int j = 0; j < dtInstrumens.Rows.Count; j++)
                                        {
                                            if (dtInstrumens.Rows[j][TypeName[i]].ToString() == "")
                                            {
                                                data += "null,";
                                            }
                                            else
                                            {
                                                data += dtInstrumens.Rows[j][TypeName[i]].ToString() + ",";
                                            }
                                        }
                                        data += "]}, {connectNulls:true,";
                                    }
                                    data = data.Substring(0, data.Length - 21);
                                    data += "]";
                                    hdDTime.Value = Time;
                                    hdDate.Value = data;

                                    ////【给隐藏域赋值，用于显示Chart】
                                    //hdGroupFac.Value = string.Join(";", factors.Select(p => p.PollutantCode).ToArray());
                                    auditData = m_DayOriData.GetDataPagers(portIds, factorCodes, dtBegion, dtEnd, pageSize1, pageNo1, out recordTotal, orderBy1);//原始日数据类型按 原始日数据查询
                                    hdBegion.Value = dtBegion.ToString("yyyy-MM-dd HH:mm:ss");
                                    hdEnd.Value = dtEnd.ToString("yyyy-MM-dd HH:mm:ss");
                                    hdOrderBy.Value = orderBy1;
                                }
                                else if (type == "图表")
                                {
                                    //【给隐藏域赋值，用于显示Chart】
                                    SetHiddenData(portIds, factors, dtBegion, dtEnd);
                                    
                                }
                                else
                                {
                                    //【给隐藏域赋值，用于显示Chart】
                                    auditData = m_DayOriData.GetDataPagers(portIds, factorCodes, dtBegion, dtEnd, pageSize1, pageNo1, out recordTotal, orderBy1);//原始日数据类型按 原始日数据查询
                                    hdBegion.Value = dtBegion.ToString("yyyy-MM-dd HH:mm:ss");
                                    hdEnd.Value = dtEnd.ToString("yyyy-MM-dd HH:mm:ss");
                                    hdOrderBy.Value = orderBy1;
                                    
                                }
                                
                            }
                            #endregion
                            #region 原始月
                            else if (RadioButtonList1.SelectedValue == "OriMonth")
                            {
                                string orderBy1 = "PointId asc,Year desc,MonthOfYear desc";
                                if (TimeSort.SelectedValue == "时间升序")
                                    orderBy1 = "PointId asc,Year asc,MonthOfYear asc";
                                dtBegion = dtpMonthBegin.SelectedDate.Value;
                                dtEnd = dtpMonthEnd.SelectedDate.Value;
                                dtMonth = new DataTable();
                                dtMonth.Columns.Add("PointId", typeof(System.String));//污染物名称 参数
                                string factorType = "";
                                foreach (string colName in tbfactorNames)
                                {
                                    dtMonth.Columns.Add(colName, typeof(System.String));//烷烃值
                                }
                                dtMonth.Columns.Add("Year", typeof(System.Int32));//时间戳
                                dtMonth.Columns.Add("MonthOfYear", typeof(System.Int32));//时间戳
                                this.ViewState.Add("dtMonth", dtMonth);
                                if (tbfactorNames.Contains("高碳烷烃C6-C12"))
                                {
                                    factorType = "06a02408-6eab-4188-b442-86dd8e97654c";
                                    string sql1 = string.Empty;
                                    if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}' and PollutantCode in (SELECT  PollutantCode FROM [Standard].[TB_PollutantCode] where VOCType!='2')"
                , factorType);
                                    }
                                    else
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    }
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表" && factorsWan.Count() > 0)
                                    {
                                        auditData = m_MonthOriData.GetOriDataPager(portIds, factorsWan, dtBegion, dtEnd, pageSize1, pageNo1, out recordTotal, orderBy1);//原始月数据类型按 原始月数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetMonthDataTable("高碳烷烃C6-C12", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (tbfactorNames.Contains("炔烃"))
                                {
                                    factorType = "5b1918b9-7c92-477a-8e23-64cbae6477f6";
                                    string sql1 = string.Empty;
                                    if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}' and PollutantCode in (SELECT  PollutantCode FROM [Standard].[TB_PollutantCode] where VOCType!='2')"
                , factorType);
                                    }
                                    else
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    }
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表" && factorsWan.Count() > 0)
                                    {
                                        auditData = m_MonthOriData.GetOriDataPager(portIds, factorsWan, dtBegion, dtEnd, pageSize1, pageNo1, out recordTotal, orderBy1);//原始月数据类型按 原始月数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetMonthDataTable("炔烃", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (tbfactorNames.Contains("高碳烯烃C6-C12"))
                                {
                                    factorType = "7bc5f3d8-7cb3-4273-a646-1ed7df60cdd8";
                                    string sql1 = string.Empty;
                                    if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}' and PollutantCode in (SELECT  PollutantCode FROM [Standard].[TB_PollutantCode] where VOCType!='2')"
                , factorType);
                                    }
                                    else
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    }
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表" && factorsWan.Count() > 0)
                                    {
                                        auditData = m_MonthOriData.GetOriDataPager(portIds, factorsWan, dtBegion, dtEnd, pageSize1, pageNo1, out recordTotal, orderBy1);//原始月数据类型按 原始月数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetMonthDataTable("高碳烯烃C6-C12", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (tbfactorNames.Contains("低碳烯烃C2-C5"))
                                {
                                    factorType = "a41db3c8-0fb4-4b0e-b1b0-e5950f04eff6";
                                    string sql1 = string.Empty;
                                    if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}' and PollutantCode in (SELECT  PollutantCode FROM [Standard].[TB_PollutantCode] where VOCType!='2')"
                , factorType);
                                    }
                                    else
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    }
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表" && factorsWan.Count() > 0)
                                    {
                                        auditData = m_MonthOriData.GetOriDataPager(portIds, factorsWan, dtBegion, dtEnd, pageSize1, pageNo1, out recordTotal, orderBy1);//原始月数据类型按 原始月数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetMonthDataTable("低碳烯烃C2-C5", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (tbfactorNames.Contains("苯系物"))
                                {
                                    factorType = "e9607fce-75dc-4134-9a8d-af2a1eb4a7bf";
                                    string sql1 = string.Empty;
                                    if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}' and PollutantCode in (SELECT  PollutantCode FROM [Standard].[TB_PollutantCode] where VOCType!='2')"
                , factorType);
                                    }
                                    else
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    }
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表" && factorsWan.Count() > 0)
                                    {
                                        auditData = m_MonthOriData.GetOriDataPager(portIds, factorsWan, dtBegion, dtEnd, pageSize1, pageNo1, out recordTotal, orderBy1);//原始月数据类型按 原始月数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetMonthDataTable("苯系物", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (tbfactorNames.Contains("低碳烷烃C2-C5"))
                                {
                                    factorType = "fb1fc34b-770f-4141-b75a-015919725e0b";
                                    string sql1 = string.Empty;
                                    if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}' and PollutantCode in (SELECT  PollutantCode FROM [Standard].[TB_PollutantCode] where VOCType!='2')"
                , factorType);
                                    }
                                    else
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    }
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表" && factorsWan.Count() > 0)
                                    {
                                        auditData = m_MonthOriData.GetOriDataPager(portIds, factorsWan, dtBegion, dtEnd, pageSize1, pageNo1, out recordTotal, orderBy1);//原始月数据类型按 原始月数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetMonthDataTable("低碳烷烃C2-C5", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (tbfactorNames.Contains("氟利昂"))
                                {
                                    factorType = "053c74fd-d1ae-4341-b258-1788079970bd";

                                    string sql1 = string.Empty;
                                    if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}' and PollutantCode in (SELECT  PollutantCode FROM [Standard].[TB_PollutantCode] where VOCType!='2')"
                , factorType);
                                    }
                                    else
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    }
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表" && factorsWan.Count() > 0)
                                    {
                                        auditData = m_MonthOriData.GetOriDataPager(portIds, factorsWan, dtBegion, dtEnd, pageSize1, pageNo1, out recordTotal, orderBy1);//原始月数据类型按 原始月数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetMonthDataTable("氟利昂", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }

                                }

                                if (tbfactorNames.Contains("卤代芳香烃"))
                                {
                                    factorType = "1eaac416-0d69-48b9-aca1-9ff7904907bb";
                                    string sql1 = string.Empty;
                                    if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}' and PollutantCode in (SELECT  PollutantCode FROM [Standard].[TB_PollutantCode] where VOCType!='2')"
                , factorType);
                                    }
                                    else
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    }
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表" && factorsWan.Count() > 0)
                                    {
                                        auditData = m_MonthOriData.GetOriDataPager(portIds, factorsWan, dtBegion, dtEnd, pageSize1, pageNo1, out recordTotal, orderBy1);//原始月数据类型按 原始月数据查询
                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetMonthDataTable("卤代芳香烃", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (tbfactorNames.Contains("卤代烯烃"))
                                {
                                    factorType = "21de4143-2c28-4256-b71e-6cb5ce63e417";
                                    string sql1 = string.Empty;
                                    if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}' and PollutantCode in (SELECT  PollutantCode FROM [Standard].[TB_PollutantCode] where VOCType!='2')"
                , factorType);
                                    }
                                    else
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    }
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表" && factorsWan.Count() > 0)
                                    {
                                        auditData = m_MonthOriData.GetOriDataPager(portIds, factorsWan, dtBegion, dtEnd, pageSize1, pageNo1, out recordTotal, orderBy1);//原始月数据类型按 原始月数据查询
                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetMonthDataTable("卤代烯烃", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (tbfactorNames.Contains("卤代烷烃"))
                                {
                                    factorType = "a0bad5d7-9eec-4fa4-9c36-828aad78041d";
                                    string sql1 = string.Empty;
                                    if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}' and PollutantCode in (SELECT  PollutantCode FROM [Standard].[TB_PollutantCode] where VOCType!='2')"
                , factorType);
                                    }
                                    else
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    }
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表" && factorsWan.Count() > 0)
                                    {
                                        auditData = m_MonthOriData.GetOriDataPager(portIds, factorsWan, dtBegion, dtEnd, pageSize1, pageNo1, out recordTotal, orderBy1);//原始月数据类型按 原始月数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetMonthDataTable("卤代烷烃", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (tbfactorNames.Contains("含氮有机物"))
                                {
                                    factorType = "3bbe4b30-53e4-48a8-a884-c3b38a03b705";
                                    string sql1 = string.Empty;
                                    if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}' and PollutantCode in (SELECT  PollutantCode FROM [Standard].[TB_PollutantCode] where VOCType!='2')"
                , factorType);
                                    }
                                    else
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    }
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表" && factorsWan.Count() > 0)
                                    {
                                        auditData = m_MonthOriData.GetOriDataPager(portIds, factorsWan, dtBegion, dtEnd, pageSize1, pageNo1, out recordTotal, orderBy1);//原始月数据类型按 原始月数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetMonthDataTable("含氮有机物", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }

                                if (tbfactorNames.Contains("醛类有机物"))
                                {
                                    factorType = "8198b6fc-7a77-427d-8e3e-9c9228ac168c";
                                    string sql1 = string.Empty;
                                    if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}' and PollutantCode in (SELECT  PollutantCode FROM [Standard].[TB_PollutantCode] where VOCType!='2')"
                , factorType);
                                    }
                                    else
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    }
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表" && factorsWan.Count() > 0)
                                    {
                                        auditData = m_MonthOriData.GetOriDataPager(portIds, factorsWan, dtBegion, dtEnd, pageSize1, pageNo1, out recordTotal, orderBy1);//原始月数据类型按 原始月数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetMonthDataTable("醛类有机物", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (tbfactorNames.Contains("酮类有机物"))
                                {
                                    factorType = "8c9ce5f3-4716-485e-95e1-72608b2843ce";
                                    string sql1 = string.Empty;
                                    if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}' and PollutantCode in (SELECT  PollutantCode FROM [Standard].[TB_PollutantCode] where VOCType!='2')"
                , factorType);
                                    }
                                    else
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    }
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表" && factorsWan.Count() > 0)
                                    {
                                        auditData = m_MonthOriData.GetOriDataPager(portIds, factorsWan, dtBegion, dtEnd, pageSize1, pageNo1, out recordTotal, orderBy1);//原始月数据类型按 原始月数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetMonthDataTable("酮类有机物", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }


                                if (tbfactorNames.Contains("醚类有机物"))
                                {
                                    factorType = "e5f83fd9-0b77-4d1b-935f-1826fddcc343";
                                    string sql1 = string.Empty;
                                    if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}' and PollutantCode in (SELECT  PollutantCode FROM [Standard].[TB_PollutantCode] where VOCType!='2')"
                , factorType);
                                    }
                                    else
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    }
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表" && factorsWan.Count() > 0)
                                    {
                                        auditData = m_MonthOriData.GetOriDataPager(portIds, factorsWan, dtBegion, dtEnd, pageSize1, pageNo1, out recordTotal, orderBy1);//原始月数据类型按 原始月数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetMonthDataTable("醚类有机物", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }


                                if (type == "列表")
                                {
                                    DataTable dtInstrumen = (DataTable)this.ViewState["dtMonth"];
                                    if (dtInstrumen != null)
                                    {
                                        bool a = dtInstrumen.Columns.Contains("Tstamp");
                                        if (a)
                                        {
                                            if (dtInstrumen.Columns.Count > 2)
                                            {
                                                dtInstrumen.Columns["Tstamp"].SetOrdinal(1);
                                            }
                                        }
                                        bool b = dtInstrumen.Columns.Contains("DateTime");
                                        if (b)
                                        {
                                            if (dtInstrumen.Columns.Count > 2)
                                            {
                                                dtInstrumen.Columns["DateTime"].SetOrdinal(1);
                                            }
                                        }
                                    }
                                    if (dtInstrumen.Columns.Contains("OzoneValue"))
                                    {
                                        for (int i = 0; i < dtInstrumen.Rows.Count; i++) //臭氧的数据要乘以1000
                                        {
                                            decimal value = 0M;

                                            if (decimal.TryParse(dtInstrumen.Rows[i]["OzoneValue"].ToString(), out value))
                                            {
                                                dtInstrumen.Rows[i]["OzoneValue"] = DecimalExtension.GetPollutantValue(value * 1000, 0);
                                            }
                                        }
                                    }

                                    gridAudit.DataSource = dtInstrumen.DefaultView;
                                    //数据总行数
                                    gridAudit.VirtualItemCount = recordTotal;
                                    //【给隐藏域赋值，用于显示Chart】
                                    SetHiddenData(portIds, factors, dtBegion, dtEnd);
                                    groupErJi();
                                    //hdGroupFac.Value = string.Join(";", factors.Select(p => p.PollutantCode).ToArray());

                                    DataView dvst = dtInstrumen.DefaultView;
                                    dvst.Sort = "Year asc";
                                    dvst.Sort = "MonthOfYear asc";
                                    DataTable dtInstrumens = dvst.ToTable();
                                    string Time = "[";
                                    for (int i = 0; i < dtInstrumens.Rows.Count; i++)
                                    {
                                        Time += "'" + dtInstrumens.Rows[i]["Year"].ToString() + "年" + dtInstrumens.Rows[i]["MonthOfYear"].ToString() + "月',";
                                    }
                                    Time = Time.TrimEnd(',');
                                    Time += "]";

                                    string data = "[{connectNulls:true,";
                                    for (int i = 0; i < typeName.Length; i++)
                                    {
                                        data += "name:'" + typeName[i] + "',data:[";
                                        for (int j = 0; j < dtInstrumens.Rows.Count; j++)
                                        {
                                            if (dtInstrumens.Rows[j][typeName[i]].ToString() == "")
                                            {
                                                data += "null,";
                                            }
                                            else
                                            {
                                                data += dtInstrumens.Rows[j][typeName[i]].ToString() + ",";
                                            }
                                        }
                                        data += "]}, {connectNulls:true,";
                                    }
                                    data = data.Substring(0, data.Length - 21);
                                    data += "]";
                                    hdDTime.Value = Time;
                                    hdDate.Value = data;


                                    //【给隐藏域赋值，用于显示Chart】
                                    hdBegion.Value = dtBegion.ToString("yyyy-MM-dd HH:mm:ss");
                                    hdEnd.Value = dtEnd.ToString("yyyy-MM-dd HH:mm:ss");
                                    hdOrderBy.Value = orderBy1;
                                }
                                else if (type == "图表")
                                {
                                    //【给隐藏域赋值，用于显示Chart】
                                    SetHiddenData(portIds, factors, dtBegion, dtEnd);
                                    
                                }
                                else
                                {
                                    //【给隐藏域赋值，用于显示Chart】
                                    hdBegion.Value = dtBegion.ToString("yyyy-MM-dd HH:mm:ss");
                                    hdEnd.Value = dtEnd.ToString("yyyy-MM-dd HH:mm:ss");
                                    hdOrderBy.Value = orderBy1;
                                }
                            }
                            #endregion
                        }
                        #endregion
                    }
                    #endregion
                    #region 分三大类
                    else
                    {
                        Pie1.Visible = false;
                        Pie2.Visible = true;
                        Pie3.Visible = false;
                        //PointChart.Visible = true;
                        //chartcontainers.Visible = false;
                        //ChartContainer.Visible = true;
                        #region 审核
                        if (ddlDataSource.SelectedValue == "AuditData")
                        {
                            hdTimeType.Value = radlDataType.SelectedValue;
                            #region 小时数据
                            if (radlDataType.SelectedValue == "Hour")
                            {
                                string orderBy1 = "PointId asc,Tstamp desc";
                                if (TimeSort.SelectedValue == "时间升序")
                                    orderBy1 = "PointId asc,Tstamp asc";
                                dtBegion = hourBegin.SelectedDate.Value;
                                dtEnd = hourEnd.SelectedDate.Value.AddDays(1).AddSeconds(-1);
                                dt = new DataTable();
                                dt.Columns.Add("PointId", typeof(System.String));//污染物名称 参数
                                foreach (string colName in cblistTypeName)
                                {
                                    dt.Columns.Add(colName, typeof(System.String));//污染物值
                                }
                                dt.Columns.Add("Tstamp", typeof(System.DateTime));//时间戳
                                //dt.Columns.Add("TVOC", typeof(System.String));//污染物值
                                this.ViewState.Add("dt", dt);

                                dtIcon = new DataTable();
                                dtIcon.Columns.Add("PointId", typeof(System.String));//污染物名称 参数
                                foreach (string colName in cblistTypeName)
                                {
                                    dtIcon.Columns.Add(colName, typeof(System.Decimal));//污染物值
                                }
                                dtIcon.Columns.Add("Tstamp", typeof(System.DateTime));//时间戳
                                //dtIcon.Columns.Add("TVOC", typeof(System.Decimal));
                                this.ViewState.Add("dtIcon", dtIcon);
                                if (cblistTypeName.Contains("非甲烷碳氢化合物"))
                                {
                                    string factorWan = "";
                                    if (cblistTypeName.Contains("卤代烃类VOCs"))
                                    {
                                        factorWan += "'卤代烃类VOCs',";
                                    }
                                    if (cblistTypeName.Contains("含氧（氮）类VOCs"))
                                    {
                                        factorWan += "'含氧（氮）类VOCs',";
                                    }
                                    string sql1 = string.Empty;
                                    if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type]
where VOC1TypeGuid IN (SELECT RowGuid from [dbo].[DT_VOC1Type] where VOC1Type in ({0})) and  PollutantCode in (SELECT  PollutantCode FROM [Standard].[TB_PollutantCode] where VOCType!='2') "
                , factorWan.TrimEnd(','));
                                    }
                                    else
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type]
where VOC1TypeGuid IN (SELECT RowGuid from [dbo].[DT_VOC1Type] where VOC1Type in ({0})) "
                , factorWan.TrimEnd(','));
                                    } 
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表")
                                    {
                                        if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                        {
                                            auditData = m_HourData.GetVOCsKQYHourDataPagerNew(portIds, factorCodes, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//小时类型按 小时数据查询
                                        }
                                        else
                                        {
                                            auditData = m_HourData.GetHourDataPagerNew(portIds, factorCodes, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//小时类型按 小时数据查询
                                        }

                                        DataTable auDT = auditData.ToTable();
                                        for (int j = 0; j < factorsWan.Length; j++)
                                            if (factorsWan[j] != "")
                                                auDT.Columns.Remove(factorsWan[j]);
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetDataTable("非甲烷碳氢化合物", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }

                                }
                                if (cblistTypeName.Contains("卤代烃类VOCs"))
                                {
                                    string factorXi = "";
                                    if (cblistTypeName.Contains("非甲烷碳氢化合物"))
                                    {
                                        factorXi += "'非甲烷碳氢化合物',";
                                    }
                                    if (cblistTypeName.Contains("含氧（氮）类VOCs"))
                                    {
                                        factorXi += "'含氧（氮）类VOCs',";
                                    }
                                    string sql2 = string.Empty;
                                    if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                    {
                                        sql2 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type]
where VOC1TypeGuid IN (SELECT RowGuid from [dbo].[DT_VOC1Type] where VOC1Type in ({0})) and  PollutantCode in (SELECT  PollutantCode FROM [Standard].[TB_PollutantCode] where VOCType!='2') "
                , factorXi.TrimEnd(','));
                                    }
                                    else
                                    {
                                        sql2 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type]
where VOC1TypeGuid IN (SELECT RowGuid from [dbo].[DT_VOC1Type] where VOC1Type in ({0})) "
                , factorXi.TrimEnd(','));
                                    } 
//                                    string sql2 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type]
//where VOC1TypeGuid IN (SELECT RowGuid from [dbo].[DT_VOC1Type] where VOC1Type in ({0}))"
//                , factorXi.TrimEnd(','));
                                    DataTable dt2 = g_DatabaseHelper.ExecuteDataTable(sql2, "AMS_BaseDataConnection");
                                    string[] factorsXi = dtToArr(dt2);
                                    if (type == "列表")
                                    {
                                        if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                        {
                                            auditData = m_HourData.GetVOCsKQYHourDataPagerNew(portIds, factorCodes, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//小时类型按 小时数据查询
                                        }
                                        else
                                        {
                                            auditData = m_HourData.GetHourDataPagerNew(portIds, factorCodes, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//小时类型按 小时数据查询
                                        }
                                        DataTable auDT = auditData.ToTable();
                                        for (int i = 0; i < factorsXi.Length; i++)
                                            if (factorsXi[i] != "")
                                                auDT.Columns.Remove(factorsXi[i]);
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetDataTable("卤代烃类VOCs", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (cblistTypeName.Contains("含氧（氮）类VOCs"))
                                {
                                    string factorTing = "";
                                    if (cblistTypeName.Contains("非甲烷碳氢化合物"))
                                    {
                                        factorTing += "'非甲烷碳氢化合物',";
                                    }
                                    if (cblistTypeName.Contains("卤代烃类VOCs"))
                                    {
                                        factorTing += "'卤代烃类VOCs',";
                                    }
                                    string sql3 = string.Empty;
                                    if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                    {
                                        sql3 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type]
where VOC1TypeGuid IN (SELECT RowGuid from [dbo].[DT_VOC1Type] where VOC1Type in ({0})) and  PollutantCode in (SELECT  PollutantCode FROM [Standard].[TB_PollutantCode] where VOCType!='2') "
                , factorTing.TrimEnd(','));
                                    }
                                    else
                                    {
                                        sql3 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type]
where VOC1TypeGuid IN (SELECT RowGuid from [dbo].[DT_VOC1Type] where VOC1Type in ({0})) "
                , factorTing.TrimEnd(','));
                                    } 
//                                    string sql3 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type]
//where VOC1TypeGuid IN (SELECT RowGuid from [dbo].[DT_VOC1Type] where VOC1Type in ({0}))"
//                , factorTing.TrimEnd(','));
                                    DataTable dt3 = g_DatabaseHelper.ExecuteDataTable(sql3, "AMS_BaseDataConnection");
                                    string[] factorsTing = dtToArr(dt3);

                                    if (type == "列表")
                                    {
                                        if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                        {
                                            auditData = m_HourData.GetVOCsKQYHourDataPagerNew(portIds, factorCodes, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//小时类型按 小时数据查询
                                        }
                                        else
                                        {
                                            auditData = m_HourData.GetHourDataPagerNew(portIds, factorCodes, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//小时类型按 小时数据查询
                                        }
                                        DataTable auDT = auditData.ToTable();
                                        for (int i = 0; i < factorsTing.Length; i++)
                                        {
                                            if (factorsTing[i] != "")
                                                auDT.Columns.Remove(factorsTing[i]);
                                        }
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetDataTable("含氧（氮）类VOCs", auDT, 0, Ade);

                                        }
                                    }
                                    else
                                    {

                                    }
                                }
                                if (cblistTypeName.Contains("TVOC"))
                                {
                                    if (type == "列表")
                                    {
                                        if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                        {
                                            auditData = m_HourData.GetVOCsKQYHourDataPagerNew(portIds, factorCodes, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//小时类型按 小时数据查询
                                        }
                                        else
                                        {
                                            auditData = m_HourData.GetHourDataPagerNew(portIds, factorCodes, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//小时类型按 小时数据查询
                                        }
                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetDataTable("TVOC", auDT, 0, Ade);

                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (type == "列表")
                                {
                                    DataTable dtInstrumen = (DataTable)this.ViewState["dt"];
                                    if (dtInstrumen != null)
                                    {
                                        bool a = dtInstrumen.Columns.Contains("Tstamp");
                                        if (a)
                                        {
                                            if (dtInstrumen.Columns.Count > 2)
                                            {
                                                dtInstrumen.Columns["Tstamp"].SetOrdinal(1);
                                            }
                                        }
                                        bool b = dtInstrumen.Columns.Contains("DateTime");
                                        if (b)
                                        {
                                            if (dtInstrumen.Columns.Count > 2)
                                            {
                                                dtInstrumen.Columns["DateTime"].SetOrdinal(1);
                                            }
                                        }
                                    }
                                    if (dtInstrumen.Columns.Contains("OzoneValue"))
                                    {
                                        for (int i = 0; i < dtInstrumen.Rows.Count; i++) //臭氧的数据要乘以1000
                                        {
                                            decimal value = 0M;

                                            if (decimal.TryParse(dtInstrumen.Rows[i]["OzoneValue"].ToString(), out value))
                                            {
                                                dtInstrumen.Rows[i]["OzoneValue"] = DecimalExtension.GetPollutantValue(value * 1000, 0);
                                            }
                                        }
                                    }
                                    if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                    {
                                        hdTimeType.Value = RadioButtonList1.SelectedValue + "s";

                                    }
                                    DataView dvsf = dtInstrumen.AsDataView();
                                    gridAudit.DataSource = dvsf;
                                    //数据总行数
                                    gridAudit.VirtualItemCount = recordTotal;
                                    //【给隐藏域赋值，用于显示Chart】
                                    SetHiddenData(portIds, factors, dtBegion, dtEnd);
                                    groupYiJi();
                                    DataView dvst = dtInstrumen.DefaultView;
                                    dvst.Sort = "Tstamp asc";
                                    DataTable dtInstrumens = dvst.ToTable();
                                    string Time = "[";
                                    for (int i = 0; i < dtInstrumens.Rows.Count; i++)
                                    {
                                        Time += "'" + Convert.ToDateTime(dtInstrumens.Rows[i]["Tstamp"].ToString()).ToString("MM/dd HH时") + "',";
                                    }
                                    Time = Time.TrimEnd(',');
                                    Time += "]";

                                    string data = "[{connectNulls:true,";
                                    for (int i = 0; i < typeName.Length; i++)
                                    {
                                        data += "name:'" + typeName[i] + "',data:[";
                                        for (int j = 0; j < dtInstrumens.Rows.Count; j++)
                                        {
                                            if (dtInstrumens.Rows[j][typeName[i]].ToString() == "")
                                            {
                                                data += "null,";
                                            }
                                            else
                                            {
                                                data += dtInstrumens.Rows[j][typeName[i]].ToString() + ",";
                                            }
                                        }
                                        data += "]}, {connectNulls:true,";
                                    }
                                    data = data.Substring(0, data.Length - 21);
                                    data += "]";
                                    hdDTime.Value = Time;
                                    hdDate.Value = data;
                                    
                                    //hdGroupFac.Value = string.Join(";", factors.Select(p => p.PollutantCode).ToArray());
                                    //【给隐藏域赋值，用于显示Chart】
                                    hdBegion.Value = dtBegion.ToString("yyyy-MM-dd HH:mm:ss");
                                    hdEnd.Value = dtEnd.ToString("yyyy-MM-dd HH:mm:ss");
                                    hdOrderBy.Value = orderBy1;
                                }
                                else if (type == "图表")
                                {
                                    if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                    {
                                        hdTimeType.Value = RadioButtonList1.SelectedValue + "s";

                                    }
                                    //【给隐藏域赋值，用于显示Chart】
                                    SetHiddenData(portIds, factors, dtBegion, dtEnd);
                                    auditData1 = m_HourData.GetHourDataPagerNew(portIds, factorCodes, dtBegion, dtEnd, pageSize1, pageNo1, out recordTotal);//小时类型按 小时数据查询
                                }
                                else
                                {
                                    if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                    {
                                        hdTimeType.Value = RadioButtonList1.SelectedValue + "s";

                                    }
                                    //【给隐藏域赋值，用于显示Chart】
                                    hdBegion.Value = dtBegion.ToString("yyyy-MM-dd HH:mm:ss");
                                    hdEnd.Value = dtEnd.ToString("yyyy-MM-dd HH:mm:ss");
                                    hdOrderBy.Value = orderBy1;
                                }
                            }
                            #endregion
                            #region 日数据
                            else if (radlDataType.SelectedValue == "Day")
                            {
                                string orderBy1 = "PointId asc,DateTime desc";
                                if (TimeSort.SelectedValue == "时间升序")
                                    orderBy1 = "PointId asc,DateTime asc";
                                dtBegion = dayBegin.SelectedDate.Value;
                                dtEnd = dayEnd.SelectedDate.Value;
                                dt = new DataTable();
                                dt.Columns.Add("PointId", typeof(System.String));//污染物名称 参数
                                foreach (string colName in cblistTypeName)
                                {
                                    dt.Columns.Add(colName, typeof(System.String));//污染物值
                                }
                                dt.Columns.Add("Tstamp", typeof(System.DateTime));//时间戳
                                //dt.Columns.Add("TVOC", typeof(System.String));//污染物值
                                this.ViewState.Add("dt", dt);

                                dtIcon = new DataTable();
                                dtIcon.Columns.Add("PointId", typeof(System.String));//污染物名称 参数
                                foreach (string colName in cblistTypeName)
                                {
                                    dtIcon.Columns.Add(colName, typeof(System.Decimal));//污染物值
                                }
                                dtIcon.Columns.Add("Tstamp", typeof(System.DateTime));//时间戳
                                //dtIcon.Columns.Add("TVOC", typeof(System.Decimal));
                                this.ViewState.Add("dtIcon", dtIcon);
                                if (cblistTypeName.Contains("非甲烷碳氢化合物"))
                                {
                                    string factorWan = "";
                                    if (cblistTypeName.Contains("卤代烃类VOCs"))
                                    {
                                        factorWan += "'卤代烃类VOCs',";
                                    }
                                    if (cblistTypeName.Contains("含氧（氮）类VOCs"))
                                    {
                                        factorWan += "'含氧（氮）类VOCs',";
                                    }
                                    string sql1 = string.Empty;
                                    if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type]
where VOC1TypeGuid IN (SELECT RowGuid from [dbo].[DT_VOC1Type] where VOC1Type in ({0})) and  PollutantCode in (SELECT  PollutantCode FROM [Standard].[TB_PollutantCode] where VOCType!='2') "
                , factorWan.TrimEnd(','));
                                    }
                                    else
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type]
where VOC1TypeGuid IN (SELECT RowGuid from [dbo].[DT_VOC1Type] where VOC1Type in ({0})) "
                , factorWan.TrimEnd(','));
                                    } 
//                                    string sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type]
//where VOC1TypeGuid IN (SELECT RowGuid from [dbo].[DT_VOC1Type] where VOC1Type in ({0}))"
//                , factorWan.TrimEnd(','));
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表")
                                    {

                                        auditData = m_DayData.GetDayData(portIds, factorCodes, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//日类型按 日数据查询

                                        DataTable auDT = auditData.ToTable();
                                        for (int j = 0; j < factorsWan.Length; j++)
                                            if (factorsWan[j] != "")
                                                auDT.Columns.Remove(factorsWan[j]);
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetDataTable("非甲烷碳氢化合物", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }

                                }
                                if (cblistTypeName.Contains("卤代烃类VOCs"))
                                {
                                    string factorXi = "";
                                    if (cblistTypeName.Contains("非甲烷碳氢化合物"))
                                    {
                                        factorXi += "'非甲烷碳氢化合物',";
                                    }
                                    if (cblistTypeName.Contains("含氧（氮）类VOCs"))
                                    {
                                        factorXi += "'含氧（氮）类VOCs',";
                                    }
                                    string sql2 = string.Empty;
                                    if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                    {
                                        sql2 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type]
where VOC1TypeGuid IN (SELECT RowGuid from [dbo].[DT_VOC1Type] where VOC1Type in ({0})) and  PollutantCode in (SELECT  PollutantCode FROM [Standard].[TB_PollutantCode] where VOCType!='2') "
                , factorXi.TrimEnd(','));
                                    }
                                    else
                                    {
                                        sql2 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type]
where VOC1TypeGuid IN (SELECT RowGuid from [dbo].[DT_VOC1Type] where VOC1Type in ({0})) "
                , factorXi.TrimEnd(','));
                                    } 
//                                    string sql2 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type]
//where VOC1TypeGuid IN (SELECT RowGuid from [dbo].[DT_VOC1Type] where VOC1Type in ({0}))"
//                , factorXi.TrimEnd(','));
                                    DataTable dt2 = g_DatabaseHelper.ExecuteDataTable(sql2, "AMS_BaseDataConnection");
                                    string[] factorsXi = dtToArr(dt2);
                                    if (type == "列表")
                                    {
                                        auditData = m_DayData.GetDayData(portIds, factorCodes, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//日类型按 日数据查询

                                        DataTable auDT = auditData.ToTable();
                                        for (int i = 0; i < factorsXi.Length; i++)
                                            if (factorsXi[i] != "")
                                                auDT.Columns.Remove(factorsXi[i]);
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetDataTable("卤代烃类VOCs", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (cblistTypeName.Contains("含氧（氮）类VOCs"))
                                {
                                    string factorTing = "";
                                    if (cblistTypeName.Contains("非甲烷碳氢化合物"))
                                    {
                                        factorTing += "'非甲烷碳氢化合物',";
                                    }
                                    if (cblistTypeName.Contains("卤代烃类VOCs"))
                                    {
                                        factorTing += "'卤代烃类VOCs',";
                                    }
                                    string sql3 = string.Empty;
                                    if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                    {
                                        sql3 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type]
where VOC1TypeGuid IN (SELECT RowGuid from [dbo].[DT_VOC1Type] where VOC1Type in ({0})) and  PollutantCode in (SELECT  PollutantCode FROM [Standard].[TB_PollutantCode] where VOCType!='2') "
                , factorTing.TrimEnd(','));
                                    }
                                    else
                                    {
                                        sql3 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type]
where VOC1TypeGuid IN (SELECT RowGuid from [dbo].[DT_VOC1Type] where VOC1Type in ({0})) "
                , factorTing.TrimEnd(','));
                                    } 
//                                    string sql3 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type]
//where VOC1TypeGuid IN (SELECT RowGuid from [dbo].[DT_VOC1Type] where VOC1Type in ({0}))"
//                , factorTing.TrimEnd(','));
                                    DataTable dt3 = g_DatabaseHelper.ExecuteDataTable(sql3, "AMS_BaseDataConnection");
                                    string[] factorsTing = dtToArr(dt3);

                                    if (type == "列表")
                                    {
                                        auditData = m_DayData.GetDayData(portIds, factorCodes, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//日类型按 日数据查询

                                        DataTable auDT = auditData.ToTable();
                                        for (int i = 0; i < factorsTing.Length; i++)
                                        {
                                            if (factorsTing[i] != "")
                                                auDT.Columns.Remove(factorsTing[i]);
                                        }
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetDataTable("含氧（氮）类VOCs", auDT, 0, Ade);

                                        }
                                    }
                                    else
                                    {

                                    }
                                }
                                if (cblistTypeName.Contains("TVOC"))
                                {
                                    string factorZong = "";
                                    if (cblistTypeName.Contains("非甲烷碳氢化合物"))
                                    {
                                        factorZong += "'非甲烷碳氢化合物',";
                                    }
                                    if (cblistTypeName.Contains("卤代烃类VOCs"))
                                    {
                                        factorZong += "'卤代烃类VOCs',";
                                    }
                                    if (cblistTypeName.Contains("含氧（氮）类VOCs"))
                                    {
                                        factorZong += "含氧（氮）类VOCs";
                                    }
                                    string sql4 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type]
where VOC1TypeGuid IN (SELECT RowGuid from [dbo].[DT_VOC1Type] where VOC1Type in ({0}))"
                , factorZong.TrimEnd(','));
                                    DataTable dt4 = g_DatabaseHelper.ExecuteDataTable(sql4, "AMS_BaseDataConnection");
                                    string[] factorsTing = dtToArr(dt4);
                                    //factorTing = factorTing.Trim(',');
                                    //string[] factorsTing = factorTing.Split(',');

                                    if (type == "列表")
                                    {
                                        auditData = m_DayData.GetDayData(portIds, factorCodes, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//日类型按 日数据查询

                                        DataTable auDT = auditData.ToTable();
                                        //for (int i = 0; i < factorsTing.Length; i++)
                                        //{
                                        //    if (factorsTing[i] != "")
                                        //        auDT.Columns.Remove(factorsTing[i]);
                                        //}
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetDataTable("TVOC", auDT, 0, Ade);

                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (type == "列表")
                                {
                                    DataTable dtInstrumen = (DataTable)this.ViewState["dt"];
                                    if (dtInstrumen != null)
                                    {
                                        bool a = dtInstrumen.Columns.Contains("Tstamp");
                                        if (a)
                                        {
                                            if (dtInstrumen.Columns.Count > 2)
                                            {
                                                dtInstrumen.Columns["Tstamp"].SetOrdinal(1);
                                            }
                                        }
                                        bool b = dtInstrumen.Columns.Contains("DateTime");
                                        if (b)
                                        {
                                            if (dtInstrumen.Columns.Count > 2)
                                            {
                                                dtInstrumen.Columns["DateTime"].SetOrdinal(1);
                                            }
                                        }
                                    }
                                    if (dtInstrumen.Columns.Contains("OzoneValue"))
                                    {
                                        for (int i = 0; i < dtInstrumen.Rows.Count; i++) //臭氧的数据要乘以1000
                                        {
                                            decimal value = 0M;

                                            if (decimal.TryParse(dtInstrumen.Rows[i]["OzoneValue"].ToString(), out value))
                                            {
                                                dtInstrumen.Rows[i]["OzoneValue"] = DecimalExtension.GetPollutantValue(value * 1000, 0);
                                            }
                                        }
                                    }

                                    DataView dvsf = dtInstrumen.AsDataView();
                                    gridAudit.DataSource = dvsf;
                                    //数据总行数
                                    gridAudit.VirtualItemCount = recordTotal;
                                    //【给隐藏域赋值，用于显示Chart】
                                    SetHiddenData(portIds, factors, dtBegion, dtEnd);
                                    groupYiJi();
                                    DataView dvst = dtInstrumen.DefaultView;
                                    dvst.Sort = "Tstamp asc";
                                    DataTable dtInstrumens = dvst.ToTable();
                                    string Time = "[";
                                    for (int i = 0; i < dtInstrumens.Rows.Count; i++)
                                    {
                                        Time += "'" + Convert.ToDateTime(dtInstrumens.Rows[i]["Tstamp"].ToString()).ToString("yyyy/MM/dd") + "',";
                                    }
                                    Time = Time.TrimEnd(',');
                                    Time += "]";

                                    string data = "[{connectNulls:true,";
                                    for (int i = 0; i < typeName.Length; i++)
                                    {
                                        data += "name:'" + typeName[i] + "',data:[";
                                        for (int j = 0; j < dtInstrumens.Rows.Count; j++)
                                        {
                                            if (dtInstrumens.Rows[j][typeName[i]].ToString() == "")
                                            {
                                                data += "null,";
                                            }
                                            else
                                            {
                                                data += dtInstrumens.Rows[j][typeName[i]].ToString() + ",";
                                            }
                                        }
                                        data += "]}, {connectNulls:true,";
                                    }
                                    data = data.Substring(0, data.Length - 21);
                                    data += "]";
                                    hdDTime.Value = Time;
                                    hdDate.Value = data;

                                    //hdGroupFac.Value = string.Join(";", factors.Select(p => p.PollutantCode).ToArray());
                                    //【给隐藏域赋值，用于显示Chart】
                                    hdBegion.Value = dtBegion.ToString("yyyy-MM-dd HH:mm:ss");
                                    hdEnd.Value = dtEnd.ToString("yyyy-MM-dd HH:mm:ss");
                                    hdOrderBy.Value = orderBy1;
                                }
                                else if (type == "图表")
                                {
                                    //【给隐藏域赋值，用于显示Chart】
                                    SetHiddenData(portIds, factors, dtBegion, dtEnd);
                                }
                                else
                                {
                                    //【给隐藏域赋值，用于显示Chart】
                                    hdBegion.Value = dtBegion.ToString("yyyy-MM-dd HH:mm:ss");
                                    hdEnd.Value = dtEnd.ToString("yyyy-MM-dd HH:mm:ss");
                                    hdOrderBy.Value = orderBy1;
                                }
                            }
                            #endregion
                            #region  月数据

                            else if (radlDataType.SelectedValue == "Month")
                            {
                                string orderBy1 = "PointId asc,Year desc,MonthOfYear desc";
                                if (TimeSort.SelectedValue == "时间升序")
                                    orderBy1 = "PointId asc,Year asc,MonthOfYear asc";
                                int monthB = monthBegin.SelectedDate.Value.Year;
                                int monthE = monthEnd.SelectedDate.Value.Year;
                                int monthF = monthBegin.SelectedDate.Value.Month;
                                int monthT = monthEnd.SelectedDate.Value.Month;

                                DateTime mtBegin = monthBegin.SelectedDate.Value;
                                //本月第一天时间 
                                dtBegion = mtBegin.AddDays(-(mtBegin.Day) + 1);

                                DateTime mtEnd = monthEnd.SelectedDate.Value;
                                //将本月月数+1 
                                DateTime dt2 = mtEnd.AddMonths(1);
                                //本月最后一天时间 
                                dtEnd = dt2.AddDays(-(mtEnd.Day)).AddDays(1).AddSeconds(-1);
                                dtMonth = new DataTable();
                                dtMonth.Columns.Add("PointId", typeof(System.String));//污染物名称 参数
                                dtMonth.Columns.Add("Year", typeof(System.Int32));//时间戳
                                dtMonth.Columns.Add("MonthOfYear", typeof(System.Int32));//时间戳

                                foreach (string colName in cblistTypeName)
                                {
                                    dtMonth.Columns.Add(colName, typeof(System.String));//烷烃值
                                }
                                //dtMonth.Columns.Add("TVOC", typeof(System.String));//污染物值
                                this.ViewState.Add("dtMonth", dtMonth);
                                if (cblistTypeName.Contains("非甲烷碳氢化合物"))
                                {
                                    string factorWan = "";
                                    if (cblistTypeName.Contains("卤代烃类VOCs"))
                                    {
                                        factorWan += "'卤代烃类VOCs',";
                                    }
                                    if (cblistTypeName.Contains("含氧（氮）类VOCs"))
                                    {
                                        factorWan += "'含氧（氮）类VOCs',";
                                    }
                                    string sql1 = string.Empty;
                                    if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type]
where VOC1TypeGuid IN (SELECT RowGuid from [dbo].[DT_VOC1Type] where VOC1Type in ({0})) and  PollutantCode in (SELECT  PollutantCode FROM [Standard].[TB_PollutantCode] where VOCType!='2') "
                , factorWan.TrimEnd(','));
                                    }
                                    else
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type]
where VOC1TypeGuid IN (SELECT RowGuid from [dbo].[DT_VOC1Type] where VOC1Type in ({0})) "
                , factorWan.TrimEnd(','));
                                    } 
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表")
                                    {

                                        auditData = m_MonthData.GetMonthDataPager(portIds, factorCodes, monthB, monthF, monthE, monthT, pageSize, pageNo, out recordTotal, orderBy1); //月类型 按月数据查询

                                        DataTable auDT = auditData.ToTable();
                                        for (int j = 0; j < factorsWan.Length; j++)
                                            if (factorsWan[j] != "")
                                                auDT.Columns.Remove(factorsWan[j]);
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetMonthDataTable("非甲烷碳氢化合物", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }

                                }
                                if (cblistTypeName.Contains("卤代烃类VOCs"))
                                {
                                    string factorXi = "";
                                    if (cblistTypeName.Contains("非甲烷碳氢化合物"))
                                    {
                                        factorXi += "'非甲烷碳氢化合物',";
                                    }
                                    if (cblistTypeName.Contains("含氧（氮）类VOCs"))
                                    {
                                        factorXi += "'含氧（氮）类VOCs',";
                                    }
                                    string sql2 = string.Empty;
                                    if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                    {
                                        sql2 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type]
where VOC1TypeGuid IN (SELECT RowGuid from [dbo].[DT_VOC1Type] where VOC1Type in ({0})) and  PollutantCode in (SELECT  PollutantCode FROM [Standard].[TB_PollutantCode] where VOCType!='2') "
                , factorXi.TrimEnd(','));
                                    }
                                    else
                                    {
                                        sql2 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type]
where VOC1TypeGuid IN (SELECT RowGuid from [dbo].[DT_VOC1Type] where VOC1Type in ({0})) "
                , factorXi.TrimEnd(','));
                                    } 
                                    DataTable dts = g_DatabaseHelper.ExecuteDataTable(sql2, "AMS_BaseDataConnection");
                                    string[] factorsXi = dtToArr(dts);
                                    if (type == "列表")
                                    {
                                        auditData = m_MonthData.GetMonthDataPager(portIds, factorCodes, monthB, monthF, monthE, monthT, pageSize, pageNo, out recordTotal, orderBy1); //月类型 按月数据查询

                                        DataTable auDT = auditData.ToTable();
                                        for (int i = 0; i < factorsXi.Length; i++)
                                            if (factorsXi[i] != "")
                                                auDT.Columns.Remove(factorsXi[i]);
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetMonthDataTable("卤代烃类VOCs", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (cblistTypeName.Contains("含氧（氮）类VOCs"))
                                {
                                    string factorTing = "";
                                    if (cblistTypeName.Contains("非甲烷碳氢化合物"))
                                    {
                                        factorTing += "'非甲烷碳氢化合物',";
                                    }
                                    if (cblistTypeName.Contains("卤代烃类VOCs"))
                                    {
                                        factorTing += "'卤代烃类VOCs',";
                                    }
                                    string sql3 = string.Empty;
                                    if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                    {
                                        sql3 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type]
where VOC1TypeGuid IN (SELECT RowGuid from [dbo].[DT_VOC1Type] where VOC1Type in ({0})) and  PollutantCode in (SELECT  PollutantCode FROM [Standard].[TB_PollutantCode] where VOCType!='2') "
                , factorTing.TrimEnd(','));
                                    }
                                    else
                                    {
                                        sql3 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type]
where VOC1TypeGuid IN (SELECT RowGuid from [dbo].[DT_VOC1Type] where VOC1Type in ({0})) "
                , factorTing.TrimEnd(','));
                                    } 
                                    DataTable dt3 = g_DatabaseHelper.ExecuteDataTable(sql3, "AMS_BaseDataConnection");
                                    string[] factorsTing = dtToArr(dt3);

                                    if (type == "列表")
                                    {
                                        auditData = m_MonthData.GetMonthDataPager(portIds, factorCodes, monthB, monthF, monthE, monthT, pageSize, pageNo, out recordTotal, orderBy1); //月类型 按月数据查询

                                        DataTable auDT = auditData.ToTable();
                                        for (int i = 0; i < factorsTing.Length; i++)
                                        {
                                            if (factorsTing[i] != "")
                                                auDT.Columns.Remove(factorsTing[i]);
                                        }
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetMonthDataTable("含氧（氮）类VOCs", auDT, 0, Ade);

                                        }
                                    }
                                    else
                                    {

                                    }
                                }
                                if (cblistTypeName.Contains("TVOC"))
                                {
                                    string factorZong = "";
                                    if (cblistTypeName.Contains("非甲烷碳氢化合物"))
                                    {
                                        factorZong += "'非甲烷碳氢化合物',";
                                    }
                                    if (cblistTypeName.Contains("卤代烃类VOCs"))
                                    {
                                        factorZong += "'卤代烃类VOCs',";
                                    }
                                    if (cblistTypeName.Contains("含氧（氮）类VOCs"))
                                    {
                                        factorZong += "含氧（氮）类VOCs";
                                    }
                                    string sql4 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type]
where VOC1TypeGuid IN (SELECT RowGuid from [dbo].[DT_VOC1Type] where VOC1Type in ({0}))"
                , factorZong.TrimEnd(','));
                                    DataTable dt4 = g_DatabaseHelper.ExecuteDataTable(sql4, "AMS_BaseDataConnection");
                                    string[] factorsTing = dtToArr(dt4);
                                    //factorTing = factorTing.Trim(',');
                                    //string[] factorsTing = factorTing.Split(',');

                                    if (type == "列表")
                                    {
                                        auditData = m_MonthData.GetMonthDataPager(portIds, factorCodes, monthB, monthF, monthE, monthT, pageSize, pageNo, out recordTotal, orderBy1); //月类型 按月数据查询

                                        DataTable auDT = auditData.ToTable();
                                        //for (int i = 0; i < factorsTing.Length; i++)
                                        //{
                                        //    if (factorsTing[i] != "")
                                        //        auDT.Columns.Remove(factorsTing[i]);
                                        //}
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetMonthDataTable("TVOC", auDT, 0, Ade);

                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (type == "列表")
                                {
                                    DataTable dtInstrumen = (DataTable)this.ViewState["dtMonth"];
                                    if (dtInstrumen != null)
                                    {
                                        bool a = dtInstrumen.Columns.Contains("Tstamp");
                                        if (a)
                                        {
                                            if (dtInstrumen.Columns.Count > 2)
                                            {
                                                dtInstrumen.Columns["Tstamp"].SetOrdinal(1);
                                            }
                                        }
                                        bool b = dtInstrumen.Columns.Contains("DateTime");
                                        if (b)
                                        {
                                            if (dtInstrumen.Columns.Count > 2)
                                            {
                                                dtInstrumen.Columns["DateTime"].SetOrdinal(1);
                                            }
                                        }
                                    }
                                    if (dtInstrumen.Columns.Contains("OzoneValue"))
                                    {
                                        for (int i = 0; i < dtInstrumen.Rows.Count; i++) //臭氧的数据要乘以1000
                                        {
                                            decimal value = 0M;

                                            if (decimal.TryParse(dtInstrumen.Rows[i]["OzoneValue"].ToString(), out value))
                                            {
                                                dtInstrumen.Rows[i]["OzoneValue"] = DecimalExtension.GetPollutantValue(value * 1000, 0);
                                            }
                                        }
                                    }

                                    gridAudit.DataSource = dtInstrumen.DefaultView;
                                    //数据总行数
                                    gridAudit.VirtualItemCount = recordTotal;
                                    //【给隐藏域赋值，用于显示Chart】
                                    SetHiddenData(portIds, factors, monthB + ";" + monthF + ";" + monthE + ";" + monthT);
                                    groupYiJi();
                                    //【给隐藏域赋值，用于显示Chart】
                                    DataView dvst = dtInstrumen.DefaultView;
                                    dvst.Sort = "Year asc";
                                    dvst.Sort = "MonthOfYear asc";
                                    DataTable dtInstrumens = dvst.ToTable();
                                    string Time = "[";
                                    for (int i = 0; i < dtInstrumens.Rows.Count; i++)
                                    {
                                        Time += "'" + dtInstrumens.Rows[i]["Year"].ToString() + "年" + dtInstrumens.Rows[i]["MonthOfYear"].ToString() + "月',";
                                    }
                                    Time = Time.TrimEnd(',');
                                    Time += "]";

                                    string data = "[{connectNulls:true,";
                                    for (int i = 0; i < typeName.Length; i++)
                                    {
                                        data += "name:'" + typeName[i] + "',data:[";
                                        for (int j = 0; j < dtInstrumens.Rows.Count; j++)
                                        {
                                            if (dtInstrumens.Rows[j][typeName[i]].ToString() == "")
                                            {
                                                data += "null,";
                                            }
                                            else
                                            {
                                                data += dtInstrumens.Rows[j][typeName[i]].ToString() + ",";
                                            }
                                        }
                                        data += "]}, {connectNulls:true,";
                                    }
                                    data = data.Substring(0, data.Length - 21);
                                    data += "]";
                                    hdDTime.Value = Time;
                                    hdDate.Value = data;


                                    hdBegion.Value = monthB.ToString() + "," + monthF.ToString();
                                    hdEnd.Value = monthE.ToString() + "," + monthT.ToString();
                                    hdOrderBy.Value = "PointId,Year,MonthOfYear";
                                }
                                else if (type == "图表")
                                {
                                    //【给隐藏域赋值，用于显示Chart】
                                    SetHiddenData(portIds, factors, monthB + ";" + monthF + ";" + monthE + ";" + monthT);
                                    groupYiJi();
                                }
                                else
                                {
                                    //【给隐藏域赋值，用于显示Chart】
                                    
                                    hdBegion.Value = monthB.ToString() + "," + monthF.ToString();
                                    hdEnd.Value = monthE.ToString() + "," + monthT.ToString();
                                    hdOrderBy.Value = "PointId,Year,MonthOfYear";
                                    
                                }
                            }
                            #endregion
                            #region 周数据
                            else if (radlDataType.SelectedValue == "Week")
                            {
                                string orderBy1 = "PointId asc,Year desc,WeekOfYear desc";
                                if (TimeSort.SelectedValue == "时间升序")
                                    orderBy1 = "PointId asc,Year asc,WeekOfYear asc";
                                int weekB = weekBegin.SelectedDate.Value.Year;
                                int weekE = weekEnd.SelectedDate.Value.Year;
                                int newyear = DateTime.ParseExact(weekFrom.SelectedValue, "yyyy-MM-dd", null).AddDays(6).Year;
                                int nyear = DateTime.ParseExact(weekTo.SelectedValue, "yyyy-MM-dd", null).Year;
                                int weekF = 0;
                                int weekT = 0;
                                if (newyear > weekB)
                                {
                                    weekF = ChinaDate.WeekOfYear(DateTime.ParseExact(weekFrom.SelectedValue, "yyyy-MM-dd", null));
                                }
                                else
                                    weekF = ChinaDate.WeekOfYear(DateTime.ParseExact(weekFrom.SelectedValue, "yyyy-MM-dd", null).AddDays(6));

                                if (weekE > nyear)
                                {
                                    weekT = ChinaDate.WeekOfYear(DateTime.ParseExact(weekTo.SelectedValue, "yyyy-MM-dd", null).AddDays(6));
                                }
                                else
                                {
                                    weekT = ChinaDate.WeekOfYear(DateTime.ParseExact(weekTo.SelectedValue, "yyyy-MM-dd", null));
                                }
                                dtWeek = new DataTable();
                                dtWeek.Columns.Add("PointId", typeof(System.String));//污染物名称 参数
                                dtWeek.Columns.Add("Year", typeof(System.Int32));//时间戳
                                dtWeek.Columns.Add("WeekOfYear", typeof(System.Int32));//时间戳

                                foreach (string colName in cblistTypeName)
                                {
                                    dtWeek.Columns.Add(colName, typeof(System.String));//烷烃值
                                }
                                //dtWeek.Columns.Add("TVOC", typeof(System.String));//污染物值
                                this.ViewState.Add("dtWeek", dtWeek);
                                if (cblistTypeName.Contains("非甲烷碳氢化合物"))
                                {
                                    string factorWan = "";
                                    if (cblistTypeName.Contains("卤代烃类VOCs"))
                                    {
                                        factorWan += "'卤代烃类VOCs',";
                                    }
                                    if (cblistTypeName.Contains("含氧（氮）类VOCs"))
                                    {
                                        factorWan += "'含氧（氮）类VOCs',";
                                    }
                                    string sql1 = string.Empty;
                                    if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type]
where VOC1TypeGuid IN (SELECT RowGuid from [dbo].[DT_VOC1Type] where VOC1Type in ({0})) and  PollutantCode in (SELECT  PollutantCode FROM [Standard].[TB_PollutantCode] where VOCType!='2') "
                , factorWan.TrimEnd(','));
                                    }
                                    else
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type]
where VOC1TypeGuid IN (SELECT RowGuid from [dbo].[DT_VOC1Type] where VOC1Type in ({0})) "
                , factorWan.TrimEnd(','));
                                    } 
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表")
                                    {

                                        auditData = m_WeekData.GetWeekDataPager(portIds, factorCodes, weekB, weekF, weekE, weekT, pageSize, pageNo, out recordTotal, orderBy1); //周类型 按周数据查询

                                        DataTable auDT = auditData.ToTable();
                                        for (int j = 0; j < factorsWan.Length; j++)
                                            if (factorsWan[j] != "")
                                                auDT.Columns.Remove(factorsWan[j]);
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetWeekDataTable("非甲烷碳氢化合物", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }

                                }
                                if (cblistTypeName.Contains("卤代烃类VOCs"))
                                {
                                    string factorXi = "";
                                    if (cblistTypeName.Contains("非甲烷碳氢化合物"))
                                    {
                                        factorXi += "'非甲烷碳氢化合物',";
                                    }
                                    if (cblistTypeName.Contains("含氧（氮）类VOCs"))
                                    {
                                        factorXi += "'含氧（氮）类VOCs',";
                                    }
                                    string sql2 = string.Empty;
                                    if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                    {
                                        sql2 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type]
where VOC1TypeGuid IN (SELECT RowGuid from [dbo].[DT_VOC1Type] where VOC1Type in ({0})) and  PollutantCode in (SELECT  PollutantCode FROM [Standard].[TB_PollutantCode] where VOCType!='2') "
                , factorXi.TrimEnd(','));
                                    }
                                    else
                                    {
                                        sql2 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type]
where VOC1TypeGuid IN (SELECT RowGuid from [dbo].[DT_VOC1Type] where VOC1Type in ({0})) "
                , factorXi.TrimEnd(','));
                                    } 
                                    DataTable dts = g_DatabaseHelper.ExecuteDataTable(sql2, "AMS_BaseDataConnection");
                                    string[] factorsXi = dtToArr(dts);
                                    if (type == "列表")
                                    {
                                        auditData = m_WeekData.GetWeekDataPager(portIds, factorCodes, weekB, weekF, weekE, weekT, pageSize, pageNo, out recordTotal, orderBy1); //周类型 按周数据查询

                                        DataTable auDT = auditData.ToTable();
                                        for (int i = 0; i < factorsXi.Length; i++)
                                            if (factorsXi[i] != "")
                                                auDT.Columns.Remove(factorsXi[i]);
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetWeekDataTable("卤代烃类VOCs", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (cblistTypeName.Contains("含氧（氮）类VOCs"))
                                {
                                    string factorTing = "";
                                    if (cblistTypeName.Contains("非甲烷碳氢化合物"))
                                    {
                                        factorTing += "'非甲烷碳氢化合物',";
                                    }
                                    if (cblistTypeName.Contains("卤代烃类VOCs"))
                                    {
                                        factorTing += "'卤代烃类VOCs',";
                                    }
                                    string sql3 = string.Empty;
                                    if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                    {
                                        sql3 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type]
where VOC1TypeGuid IN (SELECT RowGuid from [dbo].[DT_VOC1Type] where VOC1Type in ({0})) and  PollutantCode in (SELECT  PollutantCode FROM [Standard].[TB_PollutantCode] where VOCType!='2') "
                , factorTing.TrimEnd(','));
                                    }
                                    else
                                    {
                                        sql3 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type]
where VOC1TypeGuid IN (SELECT RowGuid from [dbo].[DT_VOC1Type] where VOC1Type in ({0})) "
                , factorTing.TrimEnd(','));
                                    } 
                                    DataTable dt3 = g_DatabaseHelper.ExecuteDataTable(sql3, "AMS_BaseDataConnection");
                                    string[] factorsTing = dtToArr(dt3);

                                    if (type == "列表")
                                    {
                                        auditData = m_WeekData.GetWeekDataPager(portIds, factorCodes, weekB, weekF, weekE, weekT, pageSize, pageNo, out recordTotal, orderBy1); //周类型 按周数据查询

                                        DataTable auDT = auditData.ToTable();
                                        for (int i = 0; i < factorsTing.Length; i++)
                                        {
                                            if (factorsTing[i] != "")
                                                auDT.Columns.Remove(factorsTing[i]);
                                        }
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetWeekDataTable("含氧（氮）类VOCs", auDT, 0, Ade);

                                        }
                                    }
                                    else
                                    {

                                    }
                                }
                                if (cblistTypeName.Contains("TVOC"))
                                {
                                    string factorZong = "";
                                    if (cblistTypeName.Contains("非甲烷碳氢化合物"))
                                    {
                                        factorZong += "'非甲烷碳氢化合物',";
                                    }
                                    if (cblistTypeName.Contains("卤代烃类VOCs"))
                                    {
                                        factorZong += "'卤代烃类VOCs',";
                                    }
                                    if (cblistTypeName.Contains("含氧（氮）类VOCs"))
                                    {
                                        factorZong += "含氧（氮）类VOCs";
                                    }
                                    string sql4 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type]
where VOC1TypeGuid IN (SELECT RowGuid from [dbo].[DT_VOC1Type] where VOC1Type in ({0}))"
                , factorZong.TrimEnd(','));
                                    DataTable dt4 = g_DatabaseHelper.ExecuteDataTable(sql4, "AMS_BaseDataConnection");
                                    string[] factorsTing = dtToArr(dt4);
                                    //factorTing = factorTing.Trim(',');
                                    //string[] factorsTing = factorTing.Split(',');

                                    if (type == "列表")
                                    {
                                        auditData = m_WeekData.GetWeekDataPager(portIds, factorCodes, weekB, weekF, weekE, weekT, pageSize, pageNo, out recordTotal, orderBy1); //周类型 按周数据查询

                                        DataTable auDT = auditData.ToTable();
                                        //for (int i = 0; i < factorsTing.Length; i++)
                                        //{
                                        //    if (factorsTing[i] != "")
                                        //        auDT.Columns.Remove(factorsTing[i]);
                                        //}
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetWeekDataTable("TVOC", auDT, 0, Ade);

                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (type == "列表")
                                {
                                    DataTable dtInstrumen = (DataTable)this.ViewState["dtWeek"];
                                    if (dtInstrumen != null)
                                    {
                                        bool a = dtInstrumen.Columns.Contains("Tstamp");
                                        if (a)
                                        {
                                            if (dtInstrumen.Columns.Count > 2)
                                            {
                                                dtInstrumen.Columns["Tstamp"].SetOrdinal(1);
                                            }
                                        }
                                        bool b = dtInstrumen.Columns.Contains("DateTime");
                                        if (b)
                                        {
                                            if (dtInstrumen.Columns.Count > 2)
                                            {
                                                dtInstrumen.Columns["DateTime"].SetOrdinal(1);
                                            }
                                        }
                                    }
                                    if (dtInstrumen.Columns.Contains("OzoneValue"))
                                    {
                                        for (int i = 0; i < dtInstrumen.Rows.Count; i++) //臭氧的数据要乘以1000
                                        {
                                            decimal value = 0M;

                                            if (decimal.TryParse(dtInstrumen.Rows[i]["OzoneValue"].ToString(), out value))
                                            {
                                                dtInstrumen.Rows[i]["OzoneValue"] = DecimalExtension.GetPollutantValue(value * 1000, 0);
                                            }
                                        }
                                    }

                                    gridAudit.DataSource = dtInstrumen.DefaultView;
                                    //数据总行数
                                    gridAudit.VirtualItemCount = recordTotal;
                                    //【给隐藏域赋值，用于显示Chart】
                                    SetHiddenData(portIds, factors, weekB + ";" + weekF + ";" + weekE + ";" + weekT);
                                    groupYiJi();
                                    //hdGroupFac.Value = string.Join(";", factors.Select(p => p.PollutantCode).ToArray());
                                    //【给隐藏域赋值，用于显示Chart】

                                    hdBegion.Value = weekB.ToString() + "," + weekF.ToString();
                                    hdEnd.Value = weekE.ToString() + "," + weekT.ToString();
                                    hdOrderBy.Value = "PointId,Year,WeekOfYear";
                                }
                                else if (type == "图表")
                                {
                                    //【给隐藏域赋值，用于显示Chart】
                                    SetHiddenData(portIds, factors, weekB + ";" + weekF + ";" + weekE + ";" + weekT);
                                    groupYiJi();
                                }
                                else
                                {
                                    //【给隐藏域赋值，用于显示Chart】
                                    
                                    hdBegion.Value = weekB.ToString() + "," + weekF.ToString();
                                    hdEnd.Value = weekE.ToString() + "," + weekT.ToString();
                                    hdOrderBy.Value = "PointId,Year,WeekOfYear";
                                }
                            }
                            #endregion
                            #region 季数据
                            else if (radlDataType.SelectedValue == "Season")
                            {
                                string orderBy1 = "PointId asc,Year desc,SeasonOfYear desc";
                                if (TimeSort.SelectedValue == "时间升序")
                                    orderBy1 = "PointId asc,Year asc,SeasonOfYear asc";
                                int seasonB = seasonBegin.SelectedDate.Value.Year;
                                int seasonE = seasonEnd.SelectedDate.Value.Year;
                                int seasonF = Convert.ToInt32(seasonFrom.SelectedValue);
                                int seasonT = Convert.ToInt32(seasonTo.SelectedValue);
                                dtSeason = new DataTable();
                                dtSeason.Columns.Add("PointId", typeof(System.String));//污染物名称 参数
                                dtSeason.Columns.Add("Year", typeof(System.Int32));//时间戳
                                dtSeason.Columns.Add("SeasonOfYear", typeof(System.Int32));//时间戳

                                foreach (string colName in cblistTypeName)
                                {
                                    dtSeason.Columns.Add(colName, typeof(System.String));//烷烃值
                                }
                                //dtSeason.Columns.Add("TVOC", typeof(System.String));//污染物值
                                this.ViewState.Add("dtSeason", dtSeason);
                                if (cblistTypeName.Contains("非甲烷碳氢化合物"))
                                {
                                    string factorWan = "";
                                    if (cblistTypeName.Contains("卤代烃类VOCs"))
                                    {
                                        factorWan += "'卤代烃类VOCs',";
                                    }
                                    if (cblistTypeName.Contains("含氧（氮）类VOCs"))
                                    {
                                        factorWan += "'含氧（氮）类VOCs',";
                                    }
                                    string sql1 = string.Empty;
                                    if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type]
where VOC1TypeGuid IN (SELECT RowGuid from [dbo].[DT_VOC1Type] where VOC1Type in ({0})) and  PollutantCode in (SELECT  PollutantCode FROM [Standard].[TB_PollutantCode] where VOCType!='2') "
                , factorWan.TrimEnd(','));
                                    }
                                    else
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type]
where VOC1TypeGuid IN (SELECT RowGuid from [dbo].[DT_VOC1Type] where VOC1Type in ({0})) "
                , factorWan.TrimEnd(','));
                                    } 
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表")
                                    {

                                        auditData = m_SeasonData.GetSeasonDataPager(portIds, factorCodes, seasonB, seasonF, seasonE, seasonT, pageSize, pageNo, out recordTotal, orderBy1); //季类型 按季数据查询

                                        DataTable auDT = auditData.ToTable();
                                        for (int j = 0; j < factorsWan.Length; j++)
                                            if (factorsWan[j] != "")
                                                auDT.Columns.Remove(factorsWan[j]);
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetSeasonDataTable("非甲烷碳氢化合物", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }

                                }
                                if (cblistTypeName.Contains("卤代烃类VOCs"))
                                {
                                    string factorXi = "";
                                    if (cblistTypeName.Contains("非甲烷碳氢化合物"))
                                    {
                                        factorXi += "'非甲烷碳氢化合物',";
                                    }
                                    if (cblistTypeName.Contains("含氧（氮）类VOCs"))
                                    {
                                        factorXi += "'含氧（氮）类VOCs',";
                                    }
                                    string sql2 = string.Empty;
                                    if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                    {
                                        sql2 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type]
where VOC1TypeGuid IN (SELECT RowGuid from [dbo].[DT_VOC1Type] where VOC1Type in ({0})) and  PollutantCode in (SELECT  PollutantCode FROM [Standard].[TB_PollutantCode] where VOCType!='2') "
                , factorXi.TrimEnd(','));
                                    }
                                    else
                                    {
                                        sql2 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type]
where VOC1TypeGuid IN (SELECT RowGuid from [dbo].[DT_VOC1Type] where VOC1Type in ({0})) "
                , factorXi.TrimEnd(','));
                                    } 
                                    DataTable dts = g_DatabaseHelper.ExecuteDataTable(sql2, "AMS_BaseDataConnection");
                                    string[] factorsXi = dtToArr(dts);
                                    if (type == "列表")
                                    {
                                        auditData = m_SeasonData.GetSeasonDataPager(portIds, factorCodes, seasonB, seasonF, seasonE, seasonT, pageSize, pageNo, out recordTotal, orderBy1); //季类型 按季数据查询

                                        DataTable auDT = auditData.ToTable();
                                        for (int i = 0; i < factorsXi.Length; i++)
                                            if (factorsXi[i] != "")
                                                auDT.Columns.Remove(factorsXi[i]);
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetSeasonDataTable("卤代烃类VOCs", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (cblistTypeName.Contains("含氧（氮）类VOCs"))
                                {
                                    string factorTing = "";
                                    if (cblistTypeName.Contains("非甲烷碳氢化合物"))
                                    {
                                        factorTing += "'非甲烷碳氢化合物',";
                                    }
                                    if (cblistTypeName.Contains("卤代烃类VOCs"))
                                    {
                                        factorTing += "'卤代烃类VOCs',";
                                    }
                                    string sql3 = string.Empty;
                                    if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                    {
                                        sql3 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type]
where VOC1TypeGuid IN (SELECT RowGuid from [dbo].[DT_VOC1Type] where VOC1Type in ({0})) and  PollutantCode in (SELECT  PollutantCode FROM [Standard].[TB_PollutantCode] where VOCType!='2') "
                , factorTing.TrimEnd(','));
                                    }
                                    else
                                    {
                                        sql3 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type]
where VOC1TypeGuid IN (SELECT RowGuid from [dbo].[DT_VOC1Type] where VOC1Type in ({0})) "
                , factorTing.TrimEnd(','));
                                    } 
                                    DataTable dt3 = g_DatabaseHelper.ExecuteDataTable(sql3, "AMS_BaseDataConnection");
                                    string[] factorsTing = dtToArr(dt3);

                                    if (type == "列表")
                                    {
                                        auditData = m_SeasonData.GetSeasonDataPager(portIds, factorCodes, seasonB, seasonF, seasonE, seasonT, pageSize, pageNo, out recordTotal, orderBy1); //季类型 按季数据查询

                                        DataTable auDT = auditData.ToTable();
                                        for (int i = 0; i < factorsTing.Length; i++)
                                        {
                                            if (factorsTing[i] != "")
                                                auDT.Columns.Remove(factorsTing[i]);
                                        }
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetSeasonDataTable("含氧（氮）类VOCs", auDT, 0, Ade);

                                        }
                                    }
                                    else
                                    {

                                    }
                                }
                                if (cblistTypeName.Contains("TVOC"))
                                {
                                    string factorZong = "";
                                    if (cblistTypeName.Contains("非甲烷碳氢化合物"))
                                    {
                                        factorZong += "'非甲烷碳氢化合物',";
                                    }
                                    if (cblistTypeName.Contains("卤代烃类VOCs"))
                                    {
                                        factorZong += "'卤代烃类VOCs',";
                                    }
                                    if (cblistTypeName.Contains("含氧（氮）类VOCs"))
                                    {
                                        factorZong += "含氧（氮）类VOCs";
                                    }
                                    string sql4 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type]
where VOC1TypeGuid IN (SELECT RowGuid from [dbo].[DT_VOC1Type] where VOC1Type in ({0}))"
                , factorZong.TrimEnd(','));
                                    DataTable dt4 = g_DatabaseHelper.ExecuteDataTable(sql4, "AMS_BaseDataConnection");
                                    string[] factorsTing = dtToArr(dt4);
                                    //factorTing = factorTing.Trim(',');
                                    //string[] factorsTing = factorTing.Split(',');

                                    if (type == "列表")
                                    {
                                        auditData = m_SeasonData.GetSeasonDataPager(portIds, factorCodes, seasonB, seasonF, seasonE, seasonT, pageSize, pageNo, out recordTotal, orderBy1); //季类型 按季数据查询

                                        DataTable auDT = auditData.ToTable();
                                        //for (int i = 0; i < factorsTing.Length; i++)
                                        //{
                                        //    if (factorsTing[i] != "")
                                        //        auDT.Columns.Remove(factorsTing[i]);
                                        //}
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetSeasonDataTable("TVOC", auDT, 0, Ade);

                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (type == "列表")
                                {
                                    DataTable dtInstrumen = (DataTable)this.ViewState["dtSeason"];
                                    if (dtInstrumen != null)
                                    {
                                        bool a = dtInstrumen.Columns.Contains("Tstamp");
                                        if (a)
                                        {
                                            if (dtInstrumen.Columns.Count > 2)
                                            {
                                                dtInstrumen.Columns["Tstamp"].SetOrdinal(1);
                                            }
                                        }
                                        bool b = dtInstrumen.Columns.Contains("DateTime");
                                        if (b)
                                        {
                                            if (dtInstrumen.Columns.Count > 2)
                                            {
                                                dtInstrumen.Columns["DateTime"].SetOrdinal(1);
                                            }
                                        }
                                    }
                                    if (dtInstrumen.Columns.Contains("OzoneValue"))
                                    {
                                        for (int i = 0; i < dtInstrumen.Rows.Count; i++) //臭氧的数据要乘以1000
                                        {
                                            decimal value = 0M;

                                            if (decimal.TryParse(dtInstrumen.Rows[i]["OzoneValue"].ToString(), out value))
                                            {
                                                dtInstrumen.Rows[i]["OzoneValue"] = DecimalExtension.GetPollutantValue(value * 1000, 0);
                                            }
                                        }
                                    }

                                    gridAudit.DataSource = dtInstrumen.DefaultView;
                                    //数据总行数
                                    gridAudit.VirtualItemCount = recordTotal;
                                    //【给隐藏域赋值，用于显示Chart】
                                    SetHiddenData(portIds, factors, seasonB + ";" + seasonF + ";" + seasonE + ";" + seasonT);
                                    groupYiJi();
                                    //hdGroupFac.Value = string.Join(";", factors.Select(p => p.PollutantCode).ToArray());
                                    //【给隐藏域赋值，用于显示Chart】
                                    hdBegion.Value = seasonB.ToString() + "," + seasonF.ToString();
                                    hdEnd.Value = seasonE.ToString() + "," + seasonT.ToString();
                                    hdOrderBy.Value = "PointId,Year,SeasonOfYear";
                                }
                                else if (type == "图表")
                                {
                                    //【给隐藏域赋值，用于显示Chart】
                                    SetHiddenData(portIds, factors, seasonB + ";" + seasonF + ";" + seasonE + ";" + seasonT);
                                    groupYiJi();
                                }
                                else
                                {
                                    //【给隐藏域赋值，用于显示Chart】
                                    hdBegion.Value = seasonB.ToString() + "," + seasonF.ToString();
                                    hdEnd.Value = seasonE.ToString() + "," + seasonT.ToString();
                                    hdOrderBy.Value = "PointId,Year,SeasonOfYear";
                                    
                                }
                            }
                            #endregion
                            #region 年数据
                            else if (radlDataType.SelectedValue == "Year")
                            {
                                string orderBy1 = "PointId asc,Year desc";
                                if (TimeSort.SelectedValue == "时间升序")
                                    orderBy1 = "PointId asc,Year asc";
                                int yearB = yearBegin.SelectedDate.Value.Year;
                                int yearE = yearEnd.SelectedDate.Value.Year;
                                dtYear = new DataTable();
                                dtYear.Columns.Add("PointId", typeof(System.String));//污染物名称 参数
                                foreach (string colName in cblistTypeName)
                                {
                                    dtYear.Columns.Add(colName, typeof(System.String));//污染物值
                                }
                                dtYear.Columns.Add("Year", typeof(System.Int32));//时间戳
                                //dtYear.Columns.Add("TVOC", typeof(System.String));//污染物值
                                this.ViewState.Add("dtYear", dtYear);

                                if (cblistTypeName.Contains("非甲烷碳氢化合物"))
                                {
                                    string factorWan = "";
                                    if (cblistTypeName.Contains("卤代烃类VOCs"))
                                    {
                                        factorWan += "'卤代烃类VOCs',";
                                    }
                                    if (cblistTypeName.Contains("含氧（氮）类VOCs"))
                                    {
                                        factorWan += "'含氧（氮）类VOCs',";
                                    }
                                    string sql1 = string.Empty;
                                    if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type]
where VOC1TypeGuid IN (SELECT RowGuid from [dbo].[DT_VOC1Type] where VOC1Type in ({0})) and  PollutantCode in (SELECT  PollutantCode FROM [Standard].[TB_PollutantCode] where VOCType!='2') "
                , factorWan.TrimEnd(','));
                                    }
                                    else
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type]
where VOC1TypeGuid IN (SELECT RowGuid from [dbo].[DT_VOC1Type] where VOC1Type in ({0})) "
                , factorWan.TrimEnd(','));
                                    } 
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表")
                                    {

                                        auditData = m_YearData.GetYearDataPager(portIds, factorCodes, yearB, yearE, pageSize, pageNo, out recordTotal, orderBy1); //年类型 按年数据查询

                                        DataTable auDT = auditData.ToTable();
                                        for (int j = 0; j < factorsWan.Length; j++)
                                            if (factorsWan[j] != "")
                                                auDT.Columns.Remove(factorsWan[j]);
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetYearDataTable("非甲烷碳氢化合物", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }

                                }
                                if (cblistTypeName.Contains("卤代烃类VOCs"))
                                {
                                    string factorXi = "";
                                    if (cblistTypeName.Contains("非甲烷碳氢化合物"))
                                    {
                                        factorXi += "'非甲烷碳氢化合物',";
                                    }
                                    if (cblistTypeName.Contains("含氧（氮）类VOCs"))
                                    {
                                        factorXi += "'含氧（氮）类VOCs',";
                                    }
                                    string sql2 = string.Empty;
                                    if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                    {
                                        sql2 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type]
where VOC1TypeGuid IN (SELECT RowGuid from [dbo].[DT_VOC1Type] where VOC1Type in ({0})) and  PollutantCode in (SELECT  PollutantCode FROM [Standard].[TB_PollutantCode] where VOCType!='2') "
                , factorXi.TrimEnd(','));
                                    }
                                    else
                                    {
                                        sql2 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type]
where VOC1TypeGuid IN (SELECT RowGuid from [dbo].[DT_VOC1Type] where VOC1Type in ({0})) "
                , factorXi.TrimEnd(','));
                                    } 
                                    DataTable dt2 = g_DatabaseHelper.ExecuteDataTable(sql2, "AMS_BaseDataConnection");
                                    string[] factorsXi = dtToArr(dt2);
                                    if (type == "列表")
                                    {
                                        auditData = m_YearData.GetYearDataPager(portIds, factorCodes, yearB, yearE, pageSize, pageNo, out recordTotal, orderBy1); //年类型 按年数据查询

                                        DataTable auDT = auditData.ToTable();
                                        for (int i = 0; i < factorsXi.Length; i++)
                                            if (factorsXi[i] != "")
                                                auDT.Columns.Remove(factorsXi[i]);
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetYearDataTable("卤代烃类VOCs", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (cblistTypeName.Contains("含氧（氮）类VOCs"))
                                {
                                    string factorTing = "";
                                    if (cblistTypeName.Contains("非甲烷碳氢化合物"))
                                    {
                                        factorTing += "'非甲烷碳氢化合物',";
                                    }
                                    if (cblistTypeName.Contains("卤代烃类VOCs"))
                                    {
                                        factorTing += "'卤代烃类VOCs',";
                                    }
                                    string sql3 = string.Empty;
                                    if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                    {
                                        sql3 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type]
where VOC1TypeGuid IN (SELECT RowGuid from [dbo].[DT_VOC1Type] where VOC1Type in ({0})) and  PollutantCode in (SELECT  PollutantCode FROM [Standard].[TB_PollutantCode] where VOCType!='2') "
                , factorTing.TrimEnd(','));
                                    }
                                    else
                                    {
                                        sql3 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type]
where VOC1TypeGuid IN (SELECT RowGuid from [dbo].[DT_VOC1Type] where VOC1Type in ({0})) "
                , factorTing.TrimEnd(','));
                                    } 
                                    DataTable dt3 = g_DatabaseHelper.ExecuteDataTable(sql3, "AMS_BaseDataConnection");
                                    string[] factorsTing = dtToArr(dt3);

                                    if (type == "列表")
                                    {
                                        auditData = m_YearData.GetYearDataPager(portIds, factorCodes, yearB, yearE, pageSize, pageNo, out recordTotal, orderBy1); //年类型 按年数据查询

                                        DataTable auDT = auditData.ToTable();
                                        for (int i = 0; i < factorsTing.Length; i++)
                                        {
                                            if (factorsTing[i] != "")
                                                auDT.Columns.Remove(factorsTing[i]);
                                        }
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetYearDataTable("含氧（氮）类VOCs", auDT, 0, Ade);

                                        }
                                    }
                                    else
                                    {

                                    }
                                }
                                if (cblistTypeName.Contains("TVOC"))
                                {
                                    string factorZong = "";
                                    if (cblistTypeName.Contains("非甲烷碳氢化合物"))
                                    {
                                        factorZong += "'非甲烷碳氢化合物',";
                                    }
                                    if (cblistTypeName.Contains("卤代烃类VOCs"))
                                    {
                                        factorZong += "'卤代烃类VOCs',";
                                    }
                                    if (cblistTypeName.Contains("含氧（氮）类VOCs"))
                                    {
                                        factorZong += "含氧（氮）类VOCs";
                                    }
                                    string sql4 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type]
where VOC1TypeGuid IN (SELECT RowGuid from [dbo].[DT_VOC1Type] where VOC1Type in ({0}))"
                , factorZong.TrimEnd(','));
                                    DataTable dt4 = g_DatabaseHelper.ExecuteDataTable(sql4, "AMS_BaseDataConnection");
                                    string[] factorsTing = dtToArr(dt4);
                                    //factorTing = factorTing.Trim(',');
                                    //string[] factorsTing = factorTing.Split(',');

                                    if (type == "列表")
                                    {
                                        auditData = m_YearData.GetYearDataPager(portIds, factorCodes, yearB, yearE, pageSize, pageNo, out recordTotal, orderBy1); //年类型 按年数据查询

                                        DataTable auDT = auditData.ToTable();
                                        //for (int i = 0; i < factorsTing.Length; i++)
                                        //{
                                        //    if (factorsTing[i] != "")
                                        //        auDT.Columns.Remove(factorsTing[i]);
                                        //}
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetYearDataTable("TVOC", auDT, 0, Ade);

                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (type == "列表")
                                {
                                    DataTable dtInstrumen = (DataTable)this.ViewState["dtYear"];
                                    if (dtInstrumen != null)
                                    {
                                        bool a = dtInstrumen.Columns.Contains("Tstamp");
                                        if (a)
                                        {
                                            if (dtInstrumen.Columns.Count > 2)
                                            {
                                                dtInstrumen.Columns["Tstamp"].SetOrdinal(1);
                                            }
                                        }
                                        bool b = dtInstrumen.Columns.Contains("DateTime");
                                        if (b)
                                        {
                                            if (dtInstrumen.Columns.Count > 2)
                                            {
                                                dtInstrumen.Columns["DateTime"].SetOrdinal(1);
                                            }
                                        }
                                    }
                                    if (dtInstrumen.Columns.Contains("OzoneValue"))
                                    {
                                        for (int i = 0; i < dtInstrumen.Rows.Count; i++) //臭氧的数据要乘以1000
                                        {
                                            decimal value = 0M;

                                            if (decimal.TryParse(dtInstrumen.Rows[i]["OzoneValue"].ToString(), out value))
                                            {
                                                dtInstrumen.Rows[i]["OzoneValue"] = DecimalExtension.GetPollutantValue(value * 1000, 0);
                                            }
                                        }
                                    }

                                    gridAudit.DataSource = dtInstrumen.DefaultView;
                                    //数据总行数
                                    gridAudit.VirtualItemCount = recordTotal;
                                    //【给隐藏域赋值，用于显示Chart】
                                    SetHiddenData(portIds, factors, yearB + ";" + yearE);
                                    groupYiJi();
                                    //hdGroupFac.Value = string.Join(";", factors.Select(p => p.PollutantCode).ToArray());
                                    //【给隐藏域赋值，用于显示Chart】
                                    hdBegion.Value = yearB.ToString();
                                    hdEnd.Value = yearE.ToString();
                                    hdOrderBy.Value = orderBy1;
                                }
                                else if (type == "图表")
                                {
                                    //【给隐藏域赋值，用于显示Chart】
                                    //SetHiddenData(portIds, factors, weekB + ";" + weekF + ";" + weekE + ";" + weekT);
                                }
                                else
                                {
                                    //【给隐藏域赋值，用于显示Chart】
                                    hdBegion.Value = yearB.ToString();
                                    hdEnd.Value = yearE.ToString();
                                    hdOrderBy.Value = orderBy1;
                                }
                            }
                            #endregion
                        }
                        #endregion
                        else
                        {
                            hdTimeType.Value = RadioButtonList1.SelectedValue;
                            #region 原始一分钟
                            if (RadioButtonList1.SelectedValue == "Min1")
                            {
                                dtBegion = dtpBegin.SelectedDate.Value;
                                dtEnd = dtpEnd.SelectedDate.Value;
                                dt = new DataTable();
                                dt.Columns.Add("PointId", typeof(System.String));//污染物名称 参数
                                foreach (string colName in cblistTypeName)
                                {
                                    dt.Columns.Add(colName, typeof(System.String));//污染物值
                                }
                                dt.Columns.Add("Tstamp", typeof(System.DateTime));//时间戳
                                //dt.Columns.Add("TVOC", typeof(System.String));//污染物值
                                this.ViewState.Add("dt", dt);

                                dtIcon = new DataTable();
                                dtIcon.Columns.Add("PointId", typeof(System.String));//污染物名称 参数
                                foreach (string colName in cblistTypeName)
                                {
                                    dtIcon.Columns.Add(colName, typeof(System.Decimal));//污染物值
                                }
                                dtIcon.Columns.Add("Tstamp", typeof(System.DateTime));//时间戳
                                //dtIcon.Columns.Add("TVOC", typeof(System.Decimal));
                                this.ViewState.Add("dtIcon", dtIcon);
                                string orderBy1 = "PointId asc,Tstamp desc";
                                if (TimeSort.SelectedValue == "时间升序")
                                    orderBy1 = "PointId asc,Tstamp asc";
                                if (cblistTypeName.Contains("非甲烷碳氢化合物"))
                                {
                                    string factorWan = "";
                                    if (cblistTypeName.Contains("卤代烃类VOCs"))
                                    {
                                        factorWan += "'卤代烃类VOCs',";
                                    }
                                    if (cblistTypeName.Contains("含氧（氮）类VOCs"))
                                    {
                                        factorWan += "'含氧（氮）类VOCs',";
                                    }
                                    string sql1 = string.Empty;
                                    if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type]
where VOC1TypeGuid IN (SELECT RowGuid from [dbo].[DT_VOC1Type] where VOC1Type in ({0})) and  PollutantCode in (SELECT  PollutantCode FROM [Standard].[TB_PollutantCode] where VOCType!='2') "
                , factorWan.TrimEnd(','));
                                    }
                                    else
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type]
where VOC1TypeGuid IN (SELECT RowGuid from [dbo].[DT_VOC1Type] where VOC1Type in ({0})) "
                , factorWan.TrimEnd(','));
                                    } 
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表")
                                    {

                                        auditData = m_Min1Data.GetDataPager(portIds, factorCodes, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//一分钟类型按 一分钟数据查询

                                        DataTable auDT = auditData.ToTable();
                                        for (int j = 0; j < factorsWan.Length; j++)
                                            if (factorsWan[j] != "")
                                                auDT.Columns.Remove(factorsWan[j]);
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetDataTable("非甲烷碳氢化合物", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }

                                }
                                if (cblistTypeName.Contains("卤代烃类VOCs"))
                                {
                                    string factorXi = "";
                                    if (cblistTypeName.Contains("非甲烷碳氢化合物"))
                                    {
                                        factorXi += "'非甲烷碳氢化合物',";
                                    }
                                    if (cblistTypeName.Contains("含氧（氮）类VOCs"))
                                    {
                                        factorXi += "'含氧（氮）类VOCs',";
                                    }
                                    string sql2 = string.Empty;
                                    if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                    {
                                        sql2 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type]
where VOC1TypeGuid IN (SELECT RowGuid from [dbo].[DT_VOC1Type] where VOC1Type in ({0})) and  PollutantCode in (SELECT  PollutantCode FROM [Standard].[TB_PollutantCode] where VOCType!='2') "
                , factorXi.TrimEnd(','));
                                    }
                                    else
                                    {
                                        sql2 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type]
where VOC1TypeGuid IN (SELECT RowGuid from [dbo].[DT_VOC1Type] where VOC1Type in ({0})) "
                , factorXi.TrimEnd(','));
                                    } 
                                    DataTable dt2 = g_DatabaseHelper.ExecuteDataTable(sql2, "AMS_BaseDataConnection");
                                    string[] factorsXi = dtToArr(dt2);
                                    if (type == "列表")
                                    {
                                        auditData = m_Min1Data.GetDataPager(portIds, factorCodes, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//一分钟类型按 一分钟数据查询

                                        DataTable auDT = auditData.ToTable();
                                        for (int i = 0; i < factorsXi.Length; i++)
                                            if (factorsXi[i] != "")
                                                auDT.Columns.Remove(factorsXi[i]);
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetDataTable("卤代烃类VOCs", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (cblistTypeName.Contains("含氧（氮）类VOCs"))
                                {
                                    string factorTing = "";
                                    if (cblistTypeName.Contains("非甲烷碳氢化合物"))
                                    {
                                        factorTing += "'非甲烷碳氢化合物',";
                                    }
                                    if (cblistTypeName.Contains("卤代烃类VOCs"))
                                    {
                                        factorTing += "'卤代烃类VOCs',";
                                    }
                                    string sql3 = string.Empty;
                                    if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                    {
                                        sql3 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type]
where VOC1TypeGuid IN (SELECT RowGuid from [dbo].[DT_VOC1Type] where VOC1Type in ({0})) and  PollutantCode in (SELECT  PollutantCode FROM [Standard].[TB_PollutantCode] where VOCType!='2') "
                , factorTing.TrimEnd(','));
                                    }
                                    else
                                    {
                                        sql3 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type]
where VOC1TypeGuid IN (SELECT RowGuid from [dbo].[DT_VOC1Type] where VOC1Type in ({0})) "
                , factorTing.TrimEnd(','));
                                    } 
                                    DataTable dt3 = g_DatabaseHelper.ExecuteDataTable(sql3, "AMS_BaseDataConnection");
                                    string[] factorsTing = dtToArr(dt3);

                                    if (type == "列表")
                                    {
                                        auditData = m_Min1Data.GetDataPager(portIds, factorCodes, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//一分钟类型按 一分钟数据查询

                                        DataTable auDT = auditData.ToTable();
                                        for (int i = 0; i < factorsTing.Length; i++)
                                        {
                                            if (factorsTing[i] != "")
                                                auDT.Columns.Remove(factorsTing[i]);
                                        }
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetDataTable("含氧（氮）类VOCs", auDT, 0, Ade);

                                        }
                                    }
                                    else
                                    {
                                        
                                    }
                                }
                                if (cblistTypeName.Contains("TVOC"))
                                {
                                    string factorZong = "";
                                    if (cblistTypeName.Contains("非甲烷碳氢化合物"))
                                    {
                                        factorZong += "'非甲烷碳氢化合物',";
                                    }
                                    if (cblistTypeName.Contains("卤代烃类VOCs"))
                                    {
                                        factorZong += "'卤代烃类VOCs',";
                                    }
                                    if (cblistTypeName.Contains("含氧（氮）类VOCs"))
                                    {
                                        factorZong += "含氧（氮）类VOCs";
                                    }
                                    string sql4 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type]
where VOC1TypeGuid IN (SELECT RowGuid from [dbo].[DT_VOC1Type] where VOC1Type in ({0}))"
                , factorZong.TrimEnd(','));
                                    DataTable dt4 = g_DatabaseHelper.ExecuteDataTable(sql4, "AMS_BaseDataConnection");
                                    string[] factorsTing = dtToArr(dt4);
                                    //factorTing = factorTing.Trim(',');
                                    //string[] factorsTing = factorTing.Split(',');

                                    if (type == "列表")
                                    {
                                        auditData = m_Min1Data.GetDataPager(portIds, factorCodes, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//一分钟类型按 一分钟数据查询

                                        DataTable auDT = auditData.ToTable();
                                       
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetDataTable("TVOC", auDT, 0, Ade);

                                        }
                                    }
                                }
                                if (type == "列表")
                                {
                                    DataTable dtInstrumen = (DataTable)this.ViewState["dt"];
                                    if (dtInstrumen != null)
                                    {
                                        bool a = dtInstrumen.Columns.Contains("Tstamp");
                                        if (a)
                                        {
                                            if (dtInstrumen.Columns.Count > 2)
                                            {
                                                dtInstrumen.Columns["Tstamp"].SetOrdinal(1);
                                            }
                                        }
                                        bool b = dtInstrumen.Columns.Contains("DateTime");
                                        if (b)
                                        {
                                            if (dtInstrumen.Columns.Count > 2)
                                            {
                                                dtInstrumen.Columns["DateTime"].SetOrdinal(1);
                                            }
                                        }
                                    }
                                    if (dtInstrumen.Columns.Contains("OzoneValue"))
                                    {
                                        for (int i = 0; i < dtInstrumen.Rows.Count; i++) //臭氧的数据要乘以1000
                                        {
                                            decimal value = 0M;

                                            if (decimal.TryParse(dtInstrumen.Rows[i]["OzoneValue"].ToString(), out value))
                                            {
                                                dtInstrumen.Rows[i]["OzoneValue"] = DecimalExtension.GetPollutantValue(value * 1000, 0);
                                            }
                                        }
                                    }

                                    DataView dvsf = dtInstrumen.AsDataView();
                                    gridAudit.DataSource = dvsf;
                                    //数据总行数
                                    gridAudit.VirtualItemCount = recordTotal;
                                    //【给隐藏域赋值，用于显示Chart】
                                    SetHiddenData(portIds, factors, dtBegion, dtEnd);
                                    groupYiJi();
                                    DataView dvst = dtInstrumen.DefaultView;
                                    dvst.Sort = "Tstamp asc";
                                    DataTable dtInstrumens = dvst.ToTable();
                                    string Time = "[";
                                    for (int i = 0; i < dtInstrumens.Rows.Count; i++)
                                    {
                                        Time += "'" + dtInstrumens.Rows[i]["Tstamp"].ToString() + "',";
                                    }
                                    Time = Time.TrimEnd(',');
                                    Time += "]";

                                    string data = "[{connectNulls:true,";
                                    for (int i = 0; i < typeName.Length; i++)
                                    {
                                        data += "name:'" + typeName[i] + "',data:[";
                                        for (int j = 0; j < dtInstrumens.Rows.Count; j++)
                                        {
                                            if (dtInstrumens.Rows[j][typeName[i]].ToString() == "")
                                            {
                                                data += "null,";
                                            }
                                            else
                                            {
                                                data += dtInstrumens.Rows[j][typeName[i]].ToString() + ",";
                                            }
                                        }
                                        data += "]}, {connectNulls:true,";
                                    }
                                    data = data.Substring(0, data.Length - 21);
                                    data += "]";
                                    hdDTime.Value = Time;
                                    hdDate.Value = data;

                                    //hdGroupFac.Value = string.Join(";", factors.Select(p => p.PollutantCode).ToArray());
                                    //【给隐藏域赋值，用于显示Chart】

                                    hdBegion.Value = dtBegion.ToString("yyyy-MM-dd HH:mm:ss");
                                    hdEnd.Value = dtEnd.ToString("yyyy-MM-dd HH:mm:ss");
                                    hdOrderBy.Value = orderBy1;
                                }
                                else if (type == "图表")
                                {
                                    //【给隐藏域赋值，用于显示Chart】
                                    SetHiddenData(portIds, factors, dtBegion, dtEnd);
                                    groupYiJi();
                                }
                                else
                                {
                                    //【给隐藏域赋值，用于显示Chart】
                                    
                                    hdBegion.Value = dtBegion.ToString("yyyy-MM-dd HH:mm:ss");
                                    hdEnd.Value = dtEnd.ToString("yyyy-MM-dd HH:mm:ss");
                                    hdOrderBy.Value = orderBy1;
                                }
                                
                            }
                            #endregion
                            #region 原始五分钟
                            else if (RadioButtonList1.SelectedValue == "Min5")
                            {
                                dtBegion = dtpBegin.SelectedDate.Value;
                                dtEnd = dtpEnd.SelectedDate.Value;
                                dt = new DataTable();
                                dt.Columns.Add("PointId", typeof(System.String));//污染物名称 参数
                                foreach (string colName in cblistTypeName)
                                {
                                    dt.Columns.Add(colName, typeof(System.String));//污染物值
                                }
                                dt.Columns.Add("Tstamp", typeof(System.DateTime));//时间戳
                                //dt.Columns.Add("TVOC", typeof(System.String));//污染物值
                                this.ViewState.Add("dt", dt);

                                dtIcon = new DataTable();
                                dtIcon.Columns.Add("PointId", typeof(System.String));//污染物名称 参数
                                foreach (string colName in cblistTypeName)
                                {
                                    dtIcon.Columns.Add(colName, typeof(System.Decimal));//污染物值
                                }
                                dtIcon.Columns.Add("Tstamp", typeof(System.DateTime));//时间戳
                                //dtIcon.Columns.Add("TVOC", typeof(System.Decimal));
                                this.ViewState.Add("dtIcon", dtIcon);
                                string orderBy1 = "PointId asc,Tstamp desc";
                                if (TimeSort.SelectedValue == "时间升序")
                                    orderBy1 = "PointId asc,Tstamp asc";
                                if (cblistTypeName.Contains("非甲烷碳氢化合物"))
                                {
                                    string factorWan = "";
                                    if (cblistTypeName.Contains("卤代烃类VOCs"))
                                    {
                                        factorWan += "'卤代烃类VOCs',";
                                    }
                                    if (cblistTypeName.Contains("含氧（氮）类VOCs"))
                                    {
                                        factorWan += "'含氧（氮）类VOCs',";
                                    }
                                    string sql1 = string.Empty;
                                    if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type]
where VOC1TypeGuid IN (SELECT RowGuid from [dbo].[DT_VOC1Type] where VOC1Type in ({0})) and  PollutantCode in (SELECT  PollutantCode FROM [Standard].[TB_PollutantCode] where VOCType!='2') "
                , factorWan.TrimEnd(','));
                                    }
                                    else
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type]
where VOC1TypeGuid IN (SELECT RowGuid from [dbo].[DT_VOC1Type] where VOC1Type in ({0})) "
                , factorWan.TrimEnd(','));
                                    } 
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表")
                                    {

                                        auditData = m_Min5Data.GetDataPager(portIds, factorCodes, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//五分钟类型按 小时数据查询

                                        DataTable auDT = auditData.ToTable();
                                        for (int j = 0; j < factorsWan.Length; j++)
                                            if (factorsWan[j] != "")
                                                auDT.Columns.Remove(factorsWan[j]);
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetDataTable("非甲烷碳氢化合物", auDT, 0, Ade);
                                        }
                                    }
                                    
                                }
                                if (cblistTypeName.Contains("卤代烃类VOCs"))
                                {
                                    string factorXi = "";
                                    if (cblistTypeName.Contains("非甲烷碳氢化合物"))
                                    {
                                        factorXi += "'非甲烷碳氢化合物',";
                                    }
                                    if (cblistTypeName.Contains("含氧（氮）类VOCs"))
                                    {
                                        factorXi += "'含氧（氮）类VOCs',";
                                    }
                                    string sql2 = string.Empty;
                                    if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                    {
                                        sql2 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type]
where VOC1TypeGuid IN (SELECT RowGuid from [dbo].[DT_VOC1Type] where VOC1Type in ({0})) and  PollutantCode in (SELECT  PollutantCode FROM [Standard].[TB_PollutantCode] where VOCType!='2') "
                , factorXi.TrimEnd(','));
                                    }
                                    else
                                    {
                                        sql2 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type]
where VOC1TypeGuid IN (SELECT RowGuid from [dbo].[DT_VOC1Type] where VOC1Type in ({0})) "
                , factorXi.TrimEnd(','));
                                    } 
                                    DataTable dt2 = g_DatabaseHelper.ExecuteDataTable(sql2, "AMS_BaseDataConnection");
                                    string[] factorsXi = dtToArr(dt2);
                                    //factorXi = factorXi.Trim(',');
                                    //string[] factorsXi = factorXi.Split(',');
                                    if (type == "列表")
                                    {
                                        auditData = m_Min5Data.GetDataPager(portIds, factorCodes, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//五分钟类型按 小时数据查询

                                        DataTable auDT = auditData.ToTable();
                                        for (int i = 0; i < factorsXi.Length; i++)
                                            if (factorsXi[i] != "")
                                                auDT.Columns.Remove(factorsXi[i]);
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetDataTable("卤代烃类VOCs", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (cblistTypeName.Contains("含氧（氮）类VOCs"))
                                {
                                    string factorTing = "";
                                    if (cblistTypeName.Contains("非甲烷碳氢化合物"))
                                    {
                                        factorTing += "'非甲烷碳氢化合物',";
                                    }
                                    if (cblistTypeName.Contains("卤代烃类VOCs"))
                                    {
                                        factorTing += "'卤代烃类VOCs',";
                                    }
                                    string sql3 = string.Empty;
                                    if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                    {
                                        sql3 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type]
where VOC1TypeGuid IN (SELECT RowGuid from [dbo].[DT_VOC1Type] where VOC1Type in ({0})) and  PollutantCode in (SELECT  PollutantCode FROM [Standard].[TB_PollutantCode] where VOCType!='2') "
                , factorTing.TrimEnd(','));
                                    }
                                    else
                                    {
                                        sql3 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type]
where VOC1TypeGuid IN (SELECT RowGuid from [dbo].[DT_VOC1Type] where VOC1Type in ({0})) "
                , factorTing.TrimEnd(','));
                                    } 
                                    DataTable dt3 = g_DatabaseHelper.ExecuteDataTable(sql3, "AMS_BaseDataConnection");
                                    string[] factorsTing = dtToArr(dt3);
                                    //factorTing = factorTing.Trim(',');
                                    //string[] factorsTing = factorTing.Split(',');

                                    if (type == "列表")
                                    {
                                        auditData = m_Min5Data.GetDataPager(portIds, factorCodes, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//五分钟类型按 小时数据查询

                                        DataTable auDT = auditData.ToTable();
                                        for (int i = 0; i < factorsTing.Length; i++)
                                        {
                                            if (factorsTing[i] != "")
                                                auDT.Columns.Remove(factorsTing[i]);
                                        }
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetDataTable("含氧（氮）类VOCs", auDT, 0, Ade);

                                        }
                                    }
                                    
                                }
                                if (cblistTypeName.Contains("TVOC"))
                                {
                                    string factorZong = "";
                                    if (cblistTypeName.Contains("非甲烷碳氢化合物"))
                                    {
                                        factorZong += "'非甲烷碳氢化合物',";
                                    }
                                    if (cblistTypeName.Contains("卤代烃类VOCs"))
                                    {
                                        factorZong += "'卤代烃类VOCs',";
                                    }
                                    if (cblistTypeName.Contains("含氧（氮）类VOCs"))
                                    {
                                        factorZong += "含氧（氮）类VOCs";
                                    }
                                    string sql4 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type]
where VOC1TypeGuid IN (SELECT RowGuid from [dbo].[DT_VOC1Type] where VOC1Type in ({0}))"
                , factorZong.TrimEnd(','));
                                    DataTable dt4 = g_DatabaseHelper.ExecuteDataTable(sql4, "AMS_BaseDataConnection");
                                    string[] factorsTing = dtToArr(dt4);
                                    //factorTing = factorTing.Trim(',');
                                    //string[] factorsTing = factorTing.Split(',');

                                    if (type == "列表")
                                    {
                                        auditData = m_Min5Data.GetDataPager(portIds, factorCodes, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//五分钟类型按 小时数据查询

                                        DataTable auDT = auditData.ToTable();
                                        //for (int i = 0; i < factorsTing.Length; i++)
                                        //{
                                        //    if (factorsTing[i] != "")
                                        //        auDT.Columns.Remove(factorsTing[i]);
                                        //}
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetDataTable("TVOC", auDT, 0, Ade);

                                        }
                                    }
                                    
                                }
                                if (type == "列表")
                                {
                                    DataTable dtInstrumen = (DataTable)this.ViewState["dt"];
                                    if (dtInstrumen != null)
                                    {
                                        bool a = dtInstrumen.Columns.Contains("Tstamp");
                                        if (a)
                                        {
                                            if (dtInstrumen.Columns.Count > 2)
                                            {
                                                dtInstrumen.Columns["Tstamp"].SetOrdinal(1);
                                            }
                                        }
                                        bool b = dtInstrumen.Columns.Contains("DateTime");
                                        if (b)
                                        {
                                            if (dtInstrumen.Columns.Count > 2)
                                            {
                                                dtInstrumen.Columns["DateTime"].SetOrdinal(1);
                                            }
                                        }
                                    }
                                    if (dtInstrumen.Columns.Contains("OzoneValue"))
                                    {
                                        for (int i = 0; i < dtInstrumen.Rows.Count; i++) //臭氧的数据要乘以1000
                                        {
                                            decimal value = 0M;

                                            if (decimal.TryParse(dtInstrumen.Rows[i]["OzoneValue"].ToString(), out value))
                                            {
                                                dtInstrumen.Rows[i]["OzoneValue"] = DecimalExtension.GetPollutantValue(value * 1000, 0);
                                            }
                                        }
                                    }

                                    DataView dvsf = dtInstrumen.AsDataView();
                                    gridAudit.DataSource = dvsf;
                                    //数据总行数
                                    gridAudit.VirtualItemCount = recordTotal;
                                    //【给隐藏域赋值，用于显示Chart】
                                    SetHiddenData(portIds, factors, dtBegion, dtEnd);
                                    groupYiJi();
                                    DataView dvst = dtInstrumen.DefaultView;
                                    dvst.Sort = "Tstamp asc";
                                    DataTable dtInstrumens = dvst.ToTable();
                                    string Time = "[";
                                    for (int i = 0; i < dtInstrumens.Rows.Count; i++)
                                    {
                                        Time += "'" + dtInstrumens.Rows[i]["Tstamp"].ToString() + "',";
                                    }
                                    Time = Time.TrimEnd(',');
                                    Time += "]";

                                    string data = "[{connectNulls:true,";
                                    for (int i = 0; i < typeName.Length; i++)
                                    {
                                        data += "name:'" + typeName[i] + "',data:[";
                                        for (int j = 0; j < dtInstrumens.Rows.Count; j++)
                                        {
                                            if (dtInstrumens.Rows[j][typeName[i]].ToString() == "")
                                            {
                                                data += "null,";
                                            }
                                            else
                                            {
                                                data += dtInstrumens.Rows[j][typeName[i]].ToString() + ",";
                                            }
                                        }
                                        data += "]}, {connectNulls:true,";
                                    }
                                    data = data.Substring(0, data.Length - 21);
                                    data += "]";
                                    hdDTime.Value = Time;
                                    hdDate.Value = data;

                                    //hdGroupFac.Value = string.Join(";", factors.Select(p => p.PollutantCode).ToArray());
                                    //【给隐藏域赋值，用于显示Chart】
                                    hdBegion.Value = dtBegion.ToString("yyyy-MM-dd HH:mm:ss");
                                    hdEnd.Value = dtEnd.ToString("yyyy-MM-dd HH:mm:ss");
                                    hdOrderBy.Value = orderBy1;
                                }
                                else if (type == "图表")
                                {
                                    //【给隐藏域赋值，用于显示Chart】
                                    SetHiddenData(portIds, factors, dtBegion, dtEnd);
                                    groupYiJi();
                                }
                                else
                                {
                                    //【给隐藏域赋值，用于显示Chart】
                                    auditData = m_Min5Data.GetDataPager(portIds, factorCodes, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//五分钟类型按 小时数据查询
                                    hdBegion.Value = dtBegion.ToString("yyyy-MM-dd HH:mm:ss");
                                    hdEnd.Value = dtEnd.ToString("yyyy-MM-dd HH:mm:ss");
                                    hdOrderBy.Value = orderBy1;
                                    
                                }
                                
                            }
                            #endregion
                            #region 原始小时
                            else if (RadioButtonList1.SelectedValue == "Min60")
                            {
                                dtBegion = dtpBegin.SelectedDate.Value;
                                dtEnd = dtpEnd.SelectedDate.Value;
                                dt = new DataTable();
                                dt.Columns.Add("PointId", typeof(System.String));//污染物名称 参数
                                foreach (string colName in cblistTypeName)
                                {
                                    dt.Columns.Add(colName, typeof(System.String));//污染物值
                                }
                                dt.Columns.Add("Tstamp", typeof(System.DateTime));//时间戳
                                //dt.Columns.Add("TVOC", typeof(System.String));//污染物值
                                this.ViewState.Add("dt", dt);

                                dtIcon = new DataTable();
                                dtIcon.Columns.Add("PointId", typeof(System.String));//污染物名称 参数
                                foreach (string colName in cblistTypeName)
                                {
                                    dtIcon.Columns.Add(colName, typeof(System.Decimal));//污染物值
                                }
                                dtIcon.Columns.Add("Tstamp", typeof(System.DateTime));//时间戳
                                //dtIcon.Columns.Add("TVOC", typeof(System.Decimal));
                                this.ViewState.Add("dtIcon", dtIcon);
                                string orderBy1 = "PointId asc,Tstamp desc";
                                if (TimeSort.SelectedValue == "时间升序")
                                    orderBy1 = "PointId asc,Tstamp asc";
                                if (cblistTypeName.Contains("非甲烷碳氢化合物"))
                                {
                                    string factorWan = "";
                                    if (cblistTypeName.Contains("卤代烃类VOCs"))
                                    {
                                        factorWan += "'卤代烃类VOCs',";
                                    }
                                    if (cblistTypeName.Contains("含氧（氮）类VOCs"))
                                    {
                                        factorWan += "'含氧（氮）类VOCs',";
                                    }
                                    string sql1 = string.Empty;
                                    if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type]
where VOC1TypeGuid IN (SELECT RowGuid from [dbo].[DT_VOC1Type] where VOC1Type in ({0})) and  PollutantCode in (SELECT  PollutantCode FROM [Standard].[TB_PollutantCode] where VOCType!='2') "
                , factorWan.TrimEnd(','));
                                    }
                                    else
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type]
where VOC1TypeGuid IN (SELECT RowGuid from [dbo].[DT_VOC1Type] where VOC1Type in ({0})) "
                , factorWan.TrimEnd(','));
                                    } 
//                                    string sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type]
//where VOC1TypeGuid IN (SELECT RowGuid from [dbo].[DT_VOC1Type] where VOC1Type in ({0}))"
//                , factorWan.TrimEnd(','));
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表")
                                    {

                                        if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                        {
                                            auditData = m_Min60Data.GetDataPagerForO3AllTimeVOCs(portIds, factorCodes, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//60分钟类型按 60分钟数据查询
                                            //recordTotal = auditData.ToTable().Rows.Count;
                                            DataTable Dkqy = auditData.ToTable();
                                            Dkqy.Columns.Remove("rows");
                                            auditData = Dkqy.DefaultView;
                                        }
                                        else
                                        {
                                            auditData = m_Min60Data.GetDataPager(portIds, factorCodes, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//60分钟类型按 60分钟数据查询
                                        }
                                        DataTable auDT = auditData.ToTable();
                                        for (int j = 0; j < factorsWan.Length; j++)
                                            if (factorsWan[j] != "")
                                                auDT.Columns.Remove(factorsWan[j]);
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetDataTable("非甲烷碳氢化合物", auDT, 0, Ade);
                                        }
                                    }
                                    

                                }
                                if (cblistTypeName.Contains("卤代烃类VOCs"))
                                {
                                    string factorXi = "";
                                    if (cblistTypeName.Contains("非甲烷碳氢化合物"))
                                    {
                                        factorXi += "'非甲烷碳氢化合物',";
                                    }
                                    if (cblistTypeName.Contains("含氧（氮）类VOCs"))
                                    {
                                        factorXi += "'含氧（氮）类VOCs',";
                                    }
                                    string sql2 = string.Empty;
                                    if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                    {
                                        sql2 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type]
where VOC1TypeGuid IN (SELECT RowGuid from [dbo].[DT_VOC1Type] where VOC1Type in ({0})) and  PollutantCode in (SELECT  PollutantCode FROM [Standard].[TB_PollutantCode] where VOCType!='2') "
                , factorXi.TrimEnd(','));
                                    }
                                    else
                                    {
                                        sql2 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type]
where VOC1TypeGuid IN (SELECT RowGuid from [dbo].[DT_VOC1Type] where VOC1Type in ({0})) "
                , factorXi.TrimEnd(','));
                                    } 
//                                    string sql2 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type]
//where VOC1TypeGuid IN (SELECT RowGuid from [dbo].[DT_VOC1Type] where VOC1Type in ({0}))"
//                , factorXi.TrimEnd(','));
                                    DataTable dt2 = g_DatabaseHelper.ExecuteDataTable(sql2, "AMS_BaseDataConnection");
                                    string[] factorsXi = dtToArr(dt2);
                                    //factorXi = factorXi.Trim(',');
                                    //string[] factorsXi = factorXi.Split(',');
                                    if (type == "列表")
                                    {
                                        if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                        {
                                            auditData = m_Min60Data.GetDataPagerForO3AllTimeVOCs(portIds, factorCodes, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//60分钟类型按 60分钟数据查询
                                            //recordTotal = auditData.ToTable().Rows.Count;
                                            DataTable Dkqy = auditData.ToTable();
                                            Dkqy.Columns.Remove("rows");
                                            auditData = Dkqy.DefaultView;
                                        }
                                        else
                                        {
                                            auditData = m_Min60Data.GetDataPager(portIds, factorCodes, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//60分钟类型按 60分钟数据查询
                                        }
                                        DataTable auDT = auditData.ToTable();
                                        for (int i = 0; i < factorsXi.Length; i++)
                                            if (factorsXi[i] != "")
                                                auDT.Columns.Remove(factorsXi[i]);
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetDataTable("卤代烃类VOCs", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (cblistTypeName.Contains("含氧（氮）类VOCs"))
                                {
                                    string factorTing = "";
                                    if (cblistTypeName.Contains("非甲烷碳氢化合物"))
                                    {
                                        factorTing += "'非甲烷碳氢化合物',";
                                    }
                                    if (cblistTypeName.Contains("卤代烃类VOCs"))
                                    {
                                        factorTing += "'卤代烃类VOCs',";
                                    }
                                    string sql3 = string.Empty;
                                    if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                    {
                                        sql3 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type]
where VOC1TypeGuid IN (SELECT RowGuid from [dbo].[DT_VOC1Type] where VOC1Type in ({0})) and  PollutantCode in (SELECT  PollutantCode FROM [Standard].[TB_PollutantCode] where VOCType!='2') "
                , factorTing.TrimEnd(','));
                                    }
                                    else
                                    {
                                        sql3 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type]
where VOC1TypeGuid IN (SELECT RowGuid from [dbo].[DT_VOC1Type] where VOC1Type in ({0})) "
                , factorTing.TrimEnd(','));
                                    } 
//                                    string sql3 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type]
//where VOC1TypeGuid IN (SELECT RowGuid from [dbo].[DT_VOC1Type] where VOC1Type in ({0}))"
//                , factorTing.TrimEnd(','));
                                    DataTable dt3 = g_DatabaseHelper.ExecuteDataTable(sql3, "AMS_BaseDataConnection");
                                    string[] factorsTing = dtToArr(dt3);
                                    //factorTing = factorTing.Trim(',');
                                    //string[] factorsTing = factorTing.Split(',');

                                    if (type == "列表")
                                    {
                                        if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                        {
                                            auditData = m_Min60Data.GetDataPagerForO3AllTimeVOCs(portIds, factorCodes, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//60分钟类型按 60分钟数据查询
                                            //recordTotal = auditData.ToTable().Rows.Count;
                                            DataTable Dkqy = auditData.ToTable();
                                            Dkqy.Columns.Remove("rows");
                                            auditData = Dkqy.DefaultView;
                                        }
                                        else
                                        {
                                            auditData = m_Min60Data.GetDataPager(portIds, factorCodes, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//60分钟类型按 60分钟数据查询
                                        }
                                        DataTable auDT = auditData.ToTable();
                                        for (int i = 0; i < factorsTing.Length; i++)
                                        {
                                            if (factorsTing[i] != "")
                                                auDT.Columns.Remove(factorsTing[i]);
                                        }
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetDataTable("含氧（氮）类VOCs", auDT, 0, Ade);

                                        }
                                    }
                                    
                                }
                                if (cblistTypeName.Contains("TVOC"))
                                {
                                    
                                    if (type == "列表")
                                    {
                                        if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                        {
                                            auditData = m_Min60Data.GetDataPagerForO3AllTimeVOCs(portIds, factorCodes, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//60分钟类型按 60分钟数据查询
                                            //recordTotal = auditData.ToTable().Rows.Count;
                                            DataTable Dkqy = auditData.ToTable();
                                            Dkqy.Columns.Remove("rows");
                                            auditData = Dkqy.DefaultView;
                                        }
                                        else
                                        {
                                            auditData = m_Min60Data.GetDataPager(portIds, allCode, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//60分钟类型按 60分钟数据查询
                                        }
                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetDataTable("TVOC", auDT, 0, Ade);

                                        }
                                    }
                                    
                                }
                                if (type == "列表")
                                {
                                    DataTable dtInstrumen = (DataTable)this.ViewState["dt"];
                                    if (dtInstrumen != null)
                                    {
                                        bool a = dtInstrumen.Columns.Contains("Tstamp");
                                        if (a)
                                        {
                                            if (dtInstrumen.Columns.Count > 2)
                                            {
                                                dtInstrumen.Columns["Tstamp"].SetOrdinal(1);
                                            }
                                        }
                                        bool b = dtInstrumen.Columns.Contains("DateTime");
                                        if (b)
                                        {
                                            if (dtInstrumen.Columns.Count > 2)
                                            {
                                                dtInstrumen.Columns["DateTime"].SetOrdinal(1);
                                            }
                                        }
                                    }
                                    if (dtInstrumen.Columns.Contains("OzoneValue"))
                                    {
                                        for (int i = 0; i < dtInstrumen.Rows.Count; i++) //臭氧的数据要乘以1000
                                        {
                                            decimal value = 0M;

                                            if (decimal.TryParse(dtInstrumen.Rows[i]["OzoneValue"].ToString(), out value))
                                            {
                                                dtInstrumen.Rows[i]["OzoneValue"] = DecimalExtension.GetPollutantValue(value * 1000, 0);
                                            }
                                        }
                                    }
                                    DataView dvsf = dtInstrumen.AsDataView();
                                    gridAudit.DataSource = dvsf;
                                    //数据总行数
                                    gridAudit.VirtualItemCount = recordTotal;
                                    if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                    {
                                        hdTimeType.Value = RadioButtonList1.SelectedValue + "kqy";

                                    }
                                    //time = string.Format("Date.UTC({0},{1},{2},{3},{4},{5},{6})", tstamp.Year, tstamp.Month - 1, tstamp.Day, tstamp.Hour, tstamp.Minute, tstamp.Second, tstamp.Millisecond);
                                    //【给隐藏域赋值，用于显示Chart】
                                    SetHiddenData(portIds, factors, dtBegion, dtEnd);
                                    groupYiJi();
                                    DataView dvst = dtInstrumen.DefaultView;
                                    dvst.Sort = "Tstamp asc";
                                    DataTable dtInstrumens = dvst.ToTable();
                                    string Time = "[";
                                    for (int i = 0; i < dtInstrumens.Rows.Count; i++)
                                    {
                                        //Time += "'" + string.Format("Date.UTC({0},{1},{2},{3},{4},{5},{6})", Convert.ToDateTime(dtInstrumen.Rows[i]["Tstamp"].ToString()).Year, Convert.ToDateTime(dtInstrumen.Rows[i]["Tstamp"].ToString()).Month - 1, Convert.ToDateTime(dtInstrumen.Rows[i]["Tstamp"].ToString()).Day, Convert.ToDateTime(dtInstrumen.Rows[i]["Tstamp"].ToString()).Hour, Convert.ToDateTime(dtInstrumen.Rows[i]["Tstamp"].ToString()).Minute, Convert.ToDateTime(dtInstrumen.Rows[i]["Tstamp"].ToString()).Second, Convert.ToDateTime(dtInstrumen.Rows[i]["Tstamp"].ToString()).Millisecond) + "',";
                                        Time += "'" + Convert.ToDateTime(dtInstrumens.Rows[i]["Tstamp"].ToString()).ToString("MM/dd HH时") + "',";
                                    }
                                    Time = Time.TrimEnd(',');
                                    Time += "]";

                                    string data = "[{connectNulls:true,";
                                    for (int i = 0; i < typeName.Length; i++)
                                    {
                                        data += "name:'" + typeName[i] + "',data:[";
                                        for (int j = 0; j < dtInstrumens.Rows.Count; j++)
                                        {
                                            if (dtInstrumens.Rows[j][typeName[i]].ToString() == "")
                                            {
                                                data += "null,";
                                            }
                                            else
                                            {
                                                data += dtInstrumens.Rows[j][typeName[i]].ToString() + ",";
                                            }
                                        }
                                        data += "]}, {connectNulls:true,";
                                    }
                                    data = data.Substring(0, data.Length - 21);
                                    data += "]";
                                    hdDTime.Value = Time;
                                    hdDate.Value = data;
                                    //hdGroupFac.Value = string.Join(";", factors.Select(p => p.PollutantCode).ToArray());
                                    //【给隐藏域赋值，用于显示Chart】

                                    hdBegion.Value = dtBegion.ToString("yyyy-MM-dd HH:mm:ss");
                                    hdEnd.Value = dtEnd.ToString("yyyy-MM-dd HH:mm:ss");
                                    hdOrderBy.Value = orderBy1;
                                }
                                else if (type == "图表")
                                {
                                    //【给隐藏域赋值，用于显示Chart】
                                    if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                    {
                                        hdTimeType.Value = RadioButtonList1.SelectedValue + "kqy";

                                    }
                                    SetHiddenData(portIds, factors, dtBegion, dtEnd);
                                    groupYiJi();
                                }
                                else
                                {
                                    //【给隐藏域赋值，用于显示Chart】
                                    if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                    {
                                        hdTimeType.Value = RadioButtonList1.SelectedValue + "kqy";

                                    }
                                    hdBegion.Value = dtBegion.ToString("yyyy-MM-dd HH:mm:ss");
                                    hdEnd.Value = dtEnd.ToString("yyyy-MM-dd HH:mm:ss");
                                    hdOrderBy.Value = orderBy1;
                                }
                            }
                            #endregion
                            #region 原始日
                            else if (RadioButtonList1.SelectedValue == "OriDay")
                            {
                                dtBegion = dtpDayBegin.SelectedDate.Value;
                                dtEnd = dtpDayEnd.SelectedDate.Value;
                                dt = new DataTable();
                                dt.Columns.Add("PointId", typeof(System.String));//污染物名称 参数
                                foreach (string colName in cblistTypeName)
                                {
                                    dt.Columns.Add(colName, typeof(System.String));//污染物值
                                }
                                dt.Columns.Add("Tstamp", typeof(System.DateTime));//时间戳
                                //dt.Columns.Add("TVOC", typeof(System.String));//污染物值
                                this.ViewState.Add("dt", dt);

                                dtIcon = new DataTable();
                                dtIcon.Columns.Add("PointId", typeof(System.String));//污染物名称 参数
                                foreach (string colName in cblistTypeName)
                                {
                                    dtIcon.Columns.Add(colName, typeof(System.Decimal));//污染物值
                                }
                                dtIcon.Columns.Add("Tstamp", typeof(System.DateTime));//时间戳
                                //dtIcon.Columns.Add("TVOC", typeof(System.Decimal));
                                this.ViewState.Add("dtIcon", dtIcon);
                                string orderBy1 = "PointId asc,DateTime desc";
                                if (TimeSort.SelectedValue == "时间升序")
                                    orderBy1 = "PointId asc,DateTime asc";
                                if (cblistTypeName.Contains("非甲烷碳氢化合物"))
                                {
                                    string factorWan = "";
                                    if (cblistTypeName.Contains("卤代烃类VOCs"))
                                    {
                                        factorWan += "'卤代烃类VOCs',";
                                    }
                                    if (cblistTypeName.Contains("含氧（氮）类VOCs"))
                                    {
                                        factorWan += "'含氧（氮）类VOCs',";
                                    }
                                    string sql1 = string.Empty;
                                    if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type]
where VOC1TypeGuid IN (SELECT RowGuid from [dbo].[DT_VOC1Type] where VOC1Type in ({0})) and  PollutantCode in (SELECT  PollutantCode FROM [Standard].[TB_PollutantCode] where VOCType!='2') "
                , factorWan.TrimEnd(','));
                                    }
                                    else
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type]
where VOC1TypeGuid IN (SELECT RowGuid from [dbo].[DT_VOC1Type] where VOC1Type in ({0})) "
                , factorWan.TrimEnd(','));
                                    } 
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表")
                                    {

                                        auditData = m_DayOriData.GetDataPagers(portIds, factorCodes, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//原始日数据类型按 原始

                                        DataTable auDT = auditData.ToTable();
                                        for (int j = 0; j < factorsWan.Length; j++)
                                            if (factorsWan[j] != "")
                                                auDT.Columns.Remove(factorsWan[j]);
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetDataTable("非甲烷碳氢化合物", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }

                                }
                                if (cblistTypeName.Contains("卤代烃类VOCs"))
                                {
                                    string factorXi = "";
                                    if (cblistTypeName.Contains("非甲烷碳氢化合物"))
                                    {
                                        factorXi += "'非甲烷碳氢化合物',";
                                    }
                                    if (cblistTypeName.Contains("含氧（氮）类VOCs"))
                                    {
                                        factorXi += "'含氧（氮）类VOCs',";
                                    }
                                    string sql2 = string.Empty;
                                    if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                    {
                                        sql2 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type]
where VOC1TypeGuid IN (SELECT RowGuid from [dbo].[DT_VOC1Type] where VOC1Type in ({0})) and  PollutantCode in (SELECT  PollutantCode FROM [Standard].[TB_PollutantCode] where VOCType!='2') "
                , factorXi.TrimEnd(','));
                                    }
                                    else
                                    {
                                        sql2 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type]
where VOC1TypeGuid IN (SELECT RowGuid from [dbo].[DT_VOC1Type] where VOC1Type in ({0})) "
                , factorXi.TrimEnd(','));
                                    } 
                                    DataTable dt2 = g_DatabaseHelper.ExecuteDataTable(sql2, "AMS_BaseDataConnection");
                                    string[] factorsXi = dtToArr(dt2);
                                    if (type == "列表")
                                    {
                                        auditData = m_DayOriData.GetDataPagers(portIds, factorCodes, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//原始日数据类型按 原始

                                        DataTable auDT = auditData.ToTable();
                                        for (int i = 0; i < factorsXi.Length; i++)
                                            if (factorsXi[i] != "")
                                                auDT.Columns.Remove(factorsXi[i]);
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetDataTable("卤代烃类VOCs", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (cblistTypeName.Contains("含氧（氮）类VOCs"))
                                {
                                    string factorTing = "";
                                    if (cblistTypeName.Contains("非甲烷碳氢化合物"))
                                    {
                                        factorTing += "'非甲烷碳氢化合物',";
                                    }
                                    if (cblistTypeName.Contains("卤代烃类VOCs"))
                                    {
                                        factorTing += "'卤代烃类VOCs',";
                                    }
                                    string sql3 = string.Empty;
                                    if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                    {
                                        sql3 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type]
where VOC1TypeGuid IN (SELECT RowGuid from [dbo].[DT_VOC1Type] where VOC1Type in ({0})) and  PollutantCode in (SELECT  PollutantCode FROM [Standard].[TB_PollutantCode] where VOCType!='2') "
                , factorTing.TrimEnd(','));
                                    }
                                    else
                                    {
                                        sql3 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type]
where VOC1TypeGuid IN (SELECT RowGuid from [dbo].[DT_VOC1Type] where VOC1Type in ({0})) "
                , factorTing.TrimEnd(','));
                                    } 
                                    DataTable dt3 = g_DatabaseHelper.ExecuteDataTable(sql3, "AMS_BaseDataConnection");
                                    string[] factorsTing = dtToArr(dt3);

                                    if (type == "列表")
                                    {
                                        auditData = m_DayOriData.GetDataPagers(portIds, factorCodes, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//原始日数据类型按 原始

                                        DataTable auDT = auditData.ToTable();
                                        for (int i = 0; i < factorsTing.Length; i++)
                                        {
                                            if (factorsTing[i] != "")
                                                auDT.Columns.Remove(factorsTing[i]);
                                        }
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetDataTable("含氧（氮）类VOCs", auDT, 0, Ade);

                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (cblistTypeName.Contains("TVOC"))
                                {
                                    string factorZong = "";
                                    if (cblistTypeName.Contains("非甲烷碳氢化合物"))
                                    {
                                        factorZong += "'非甲烷碳氢化合物',";
                                    }
                                    if (cblistTypeName.Contains("卤代烃类VOCs"))
                                    {
                                        factorZong += "'卤代烃类VOCs',";
                                    }
                                    if (cblistTypeName.Contains("含氧（氮）类VOCs"))
                                    {
                                        factorZong += "含氧（氮）类VOCs";
                                    }
                                    string sql4 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type]
where VOC1TypeGuid IN (SELECT RowGuid from [dbo].[DT_VOC1Type] where VOC1Type in ({0}))"
                , factorZong.TrimEnd(','));
                                    DataTable dt4 = g_DatabaseHelper.ExecuteDataTable(sql4, "AMS_BaseDataConnection");
                                    string[] factorsTing = dtToArr(dt4);

                                    if (type == "列表")
                                    {
                                        auditData = m_DayOriData.GetDataPagers(portIds, factorCodes, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//原始日数据类型按 原始

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetDataTable("TVOC", auDT, 0, Ade);

                                        }
                                    }
                                    else
                                    {
                                        
                                    }
                                }
                                if (type == "列表")
                                {
                                    DataTable dtInstrumen = (DataTable)this.ViewState["dt"];
                                    if (dtInstrumen != null)
                                    {
                                        bool a = dtInstrumen.Columns.Contains("Tstamp");
                                        if (a)
                                        {
                                            if (dtInstrumen.Columns.Count > 2)
                                            {
                                                dtInstrumen.Columns["Tstamp"].SetOrdinal(1);
                                            }
                                        }
                                        bool b = dtInstrumen.Columns.Contains("DateTime");
                                        if (b)
                                        {
                                            if (dtInstrumen.Columns.Count > 2)
                                            {
                                                dtInstrumen.Columns["DateTime"].SetOrdinal(1);
                                            }
                                        }
                                    }
                                    if (dtInstrumen.Columns.Contains("OzoneValue"))
                                    {
                                        for (int i = 0; i < dtInstrumen.Rows.Count; i++) //臭氧的数据要乘以1000
                                        {
                                            decimal value = 0M;

                                            if (decimal.TryParse(dtInstrumen.Rows[i]["OzoneValue"].ToString(), out value))
                                            {
                                                dtInstrumen.Rows[i]["OzoneValue"] = DecimalExtension.GetPollutantValue(value * 1000, 0);
                                            }
                                        }
                                    }

                                    DataView dvsf = dtInstrumen.AsDataView();
                                    gridAudit.DataSource = dvsf;
                                    //数据总行数
                                    gridAudit.VirtualItemCount = recordTotal;
                                    //【给隐藏域赋值，用于显示Chart】
                                    SetHiddenData(portIds, factors, dtBegion, dtEnd);
                                    groupYiJi();
                                    DataView dvst = dtInstrumen.DefaultView;
                                    dvst.Sort = "Tstamp asc";
                                    DataTable dtInstrumens = dvst.ToTable();
                                    string Time = "[";
                                    for (int i = 0; i < dtInstrumens.Rows.Count; i++)
                                    {
                                        Time += "'" + Convert.ToDateTime(dtInstrumens.Rows[i]["Tstamp"].ToString()).ToString("yyyy/MM/dd") + "',";
                                    }
                                    Time = Time.TrimEnd(',');
                                    Time += "]";

                                    string data = "[{connectNulls:true,";
                                    for (int i = 0; i < typeName.Length; i++)
                                    {
                                        data += "name:'" + typeName[i] + "',data:[";
                                        for (int j = 0; j < dtInstrumens.Rows.Count; j++)
                                        {
                                            if (dtInstrumens.Rows[j][typeName[i]].ToString() == "")
                                            {
                                                data += "null,";
                                            }
                                            else
                                            {
                                                data += dtInstrumens.Rows[j][typeName[i]].ToString() + ",";
                                            }
                                        }
                                        data += "]}, {connectNulls:true,";
                                    }
                                    data = data.Substring(0, data.Length - 21);
                                    data += "]";
                                    hdDTime.Value = Time;
                                    hdDate.Value = data;

                                    //hdGroupFac.Value = string.Join(";", factors.Select(p => p.PollutantCode).ToArray());
                                    //【给隐藏域赋值，用于显示Chart】
                                    hdBegion.Value = dtBegion.ToString("yyyy-MM-dd HH:mm:ss");
                                    hdEnd.Value = dtEnd.ToString("yyyy-MM-dd HH:mm:ss");
                                    hdOrderBy.Value = orderBy1;
                                }
                                else if (type == "图表")
                                {
                                    //【给隐藏域赋值，用于显示Chart】
                                    SetHiddenData(portIds, factors, dtBegion, dtEnd);
                                    
                                }
                                else
                                {
                                    //【给隐藏域赋值，用于显示Chart】
                                    hdBegion.Value = dtBegion.ToString("yyyy-MM-dd HH:mm:ss");
                                    hdEnd.Value = dtEnd.ToString("yyyy-MM-dd HH:mm:ss");
                                    hdOrderBy.Value = orderBy1;
                                }
                                
                            }
                            #endregion
                            #region 原始月
                            else if (RadioButtonList1.SelectedValue == "OriMonth")
                            {
                                string orderBy1 = "PointId asc,Year desc,MonthOfYear desc";
                                if (TimeSort.SelectedValue == "时间升序")
                                    orderBy1 = "PointId asc,Year asc,MonthOfYear asc";
                                dtBegion = dtpMonthBegin.SelectedDate.Value;
                                dtEnd = dtpMonthEnd.SelectedDate.Value;
                                dtMonth = new DataTable();
                                dtMonth.Columns.Add("PointId", typeof(System.String));//污染物名称 参数
                                dtMonth.Columns.Add("Year", typeof(System.Int32));//时间戳
                                dtMonth.Columns.Add("MonthOfYear", typeof(System.Int32));//时间戳
                                
                                foreach (string colName in cblistTypeName)
                                {
                                    dtMonth.Columns.Add(colName, typeof(System.String));//烷烃值
                                }
                                //dtMonth.Columns.Add("TVOC", typeof(System.String));//污染物值
                                this.ViewState.Add("dtMonth", dtMonth);
                                if (cblistTypeName.Contains("非甲烷碳氢化合物"))
                                {
                                    string factorWan = "";
                                    if (cblistTypeName.Contains("卤代烃类VOCs"))
                                    {
                                        factorWan += "'卤代烃类VOCs',";
                                    }
                                    if (cblistTypeName.Contains("含氧（氮）类VOCs"))
                                    {
                                        factorWan += "'含氧（氮）类VOCs',";
                                    }
                                    string sql1 = string.Empty;
                                    if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type]
where VOC1TypeGuid IN (SELECT RowGuid from [dbo].[DT_VOC1Type] where VOC1Type in ({0})) and  PollutantCode in (SELECT  PollutantCode FROM [Standard].[TB_PollutantCode] where VOCType!='2') "
                , factorWan.TrimEnd(','));
                                    }
                                    else
                                    {
                                        sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type]
where VOC1TypeGuid IN (SELECT RowGuid from [dbo].[DT_VOC1Type] where VOC1Type in ({0})) "
                , factorWan.TrimEnd(','));
                                    } 
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表")
                                    {

                                        auditData = m_MonthOriData.GetOriDataPager(portIds, factorCodes, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//原始月数据类型按 原始月数据查询

                                        DataTable auDT = auditData.ToTable();
                                        for (int j = 0; j < factorsWan.Length; j++)
                                            if (factorsWan[j] != "")
                                                auDT.Columns.Remove(factorsWan[j]);
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetMonthDataTable("非甲烷碳氢化合物", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }

                                }
                                if (cblistTypeName.Contains("卤代烃类VOCs"))
                                {
                                    string factorXi = "";
                                    if (cblistTypeName.Contains("非甲烷碳氢化合物"))
                                    {
                                        factorXi += "'非甲烷碳氢化合物',";
                                    }
                                    if (cblistTypeName.Contains("含氧（氮）类VOCs"))
                                    {
                                        factorXi += "'含氧（氮）类VOCs',";
                                    }
                                    string sql2 = string.Empty;
                                    if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                    {
                                        sql2 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type]
where VOC1TypeGuid IN (SELECT RowGuid from [dbo].[DT_VOC1Type] where VOC1Type in ({0})) and  PollutantCode in (SELECT  PollutantCode FROM [Standard].[TB_PollutantCode] where VOCType!='2') "
                , factorXi.TrimEnd(','));
                                    }
                                    else
                                    {
                                        sql2 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type]
where VOC1TypeGuid IN (SELECT RowGuid from [dbo].[DT_VOC1Type] where VOC1Type in ({0})) "
                , factorXi.TrimEnd(','));
                                    } 
                                    DataTable dt2 = g_DatabaseHelper.ExecuteDataTable(sql2, "AMS_BaseDataConnection");
                                    string[] factorsXi = dtToArr(dt2);
                                    if (type == "列表")
                                    {
                                        auditData = m_MonthOriData.GetOriDataPager(portIds, factorCodes, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//原始月数据类型按 原始月数据查询

                                        DataTable auDT = auditData.ToTable();
                                        for (int i = 0; i < factorsXi.Length; i++)
                                            if (factorsXi[i] != "")
                                                auDT.Columns.Remove(factorsXi[i]);
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetMonthDataTable("卤代烃类VOCs", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (cblistTypeName.Contains("含氧（氮）类VOCs"))
                                {
                                    string factorTing = "";
                                    if (cblistTypeName.Contains("非甲烷碳氢化合物"))
                                    {
                                        factorTing += "'非甲烷碳氢化合物',";
                                    }
                                    if (cblistTypeName.Contains("卤代烃类VOCs"))
                                    {
                                        factorTing += "'卤代烃类VOCs',";
                                    }
                                    string sql3 = string.Empty;
                                    if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                    {
                                        sql3 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type]
where VOC1TypeGuid IN (SELECT RowGuid from [dbo].[DT_VOC1Type] where VOC1Type in ({0})) and  PollutantCode in (SELECT  PollutantCode FROM [Standard].[TB_PollutantCode] where VOCType!='2') "
                , factorTing.TrimEnd(','));
                                    }
                                    else
                                    {
                                        sql3 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type]
where VOC1TypeGuid IN (SELECT RowGuid from [dbo].[DT_VOC1Type] where VOC1Type in ({0})) "
                , factorTing.TrimEnd(','));
                                    } 
                                    DataTable dt3 = g_DatabaseHelper.ExecuteDataTable(sql3, "AMS_BaseDataConnection");
                                    string[] factorsTing = dtToArr(dt3);

                                    if (type == "列表")
                                    {
                                        auditData = m_MonthOriData.GetOriDataPager(portIds, factorCodes, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//原始月数据类型按 原始月数据查询

                                        DataTable auDT = auditData.ToTable();
                                        for (int i = 0; i < factorsTing.Length; i++)
                                        {
                                            if (factorsTing[i] != "")
                                                auDT.Columns.Remove(factorsTing[i]);
                                        }
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetMonthDataTable("含氧（氮）类VOCs", auDT, 0, Ade);

                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (cblistTypeName.Contains("TVOC"))
                                {
                                    string factorZong = "";
                                    if (cblistTypeName.Contains("非甲烷碳氢化合物"))
                                    {
                                        factorZong += "'非甲烷碳氢化合物',";
                                    }
                                    if (cblistTypeName.Contains("卤代烃类VOCs"))
                                    {
                                        factorZong += "'卤代烃类VOCs',";
                                    }
                                    if (cblistTypeName.Contains("含氧（氮）类VOCs"))
                                    {
                                        factorZong += "含氧（氮）类VOCs";
                                    }
                                    string sql4 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type]
where VOC1TypeGuid IN (SELECT RowGuid from [dbo].[DT_VOC1Type] where VOC1Type in ({0}))"
                , factorZong.TrimEnd(','));
                                    DataTable dt4 = g_DatabaseHelper.ExecuteDataTable(sql4, "AMS_BaseDataConnection");
                                    string[] factorsTing = dtToArr(dt4);

                                    if (type == "列表")
                                    {
                                        auditData = m_MonthOriData.GetOriDataPager(portIds, factorCodes, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//原始月数据类型按 原始月数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetMonthDataTable("TVOC", auDT, 0, Ade);

                                        }
                                    }
                                    else
                                    {

                                    }
                                }
                                if (type == "列表")
                                {
                                    DataTable dtInstrumen = (DataTable)this.ViewState["dtMonth"];
                                    if (dtInstrumen != null)
                                    {
                                        bool a = dtInstrumen.Columns.Contains("Tstamp");
                                        if (a)
                                        {
                                            if (dtInstrumen.Columns.Count > 2)
                                            {
                                                dtInstrumen.Columns["Tstamp"].SetOrdinal(1);
                                            }
                                        }
                                        bool b = dtInstrumen.Columns.Contains("DateTime");
                                        if (b)
                                        {
                                            if (dtInstrumen.Columns.Count > 2)
                                            {
                                                dtInstrumen.Columns["DateTime"].SetOrdinal(1);
                                            }
                                        }
                                    }
                                    if (dtInstrumen.Columns.Contains("OzoneValue"))
                                    {
                                        for (int i = 0; i < dtInstrumen.Rows.Count; i++) //臭氧的数据要乘以1000
                                        {
                                            decimal value = 0M;

                                            if (decimal.TryParse(dtInstrumen.Rows[i]["OzoneValue"].ToString(), out value))
                                            {
                                                dtInstrumen.Rows[i]["OzoneValue"] = DecimalExtension.GetPollutantValue(value * 1000, 0);
                                            }
                                        }
                                    }

                                    gridAudit.DataSource = dtInstrumen.DefaultView;
                                    //数据总行数
                                    gridAudit.VirtualItemCount = recordTotal;
                                    //【给隐藏域赋值，用于显示Chart】
                                    SetHiddenData(portIds, factors, dtBegion, dtEnd);
                                    groupYiJi();
                                    //hdGroupFac.Value = string.Join(";", factors.Select(p => p.PollutantCode).ToArray());
                                    //【给隐藏域赋值，用于显示Chart】

                                    DataView dvst = dtInstrumen.DefaultView;
                                    dvst.Sort = "Year asc";
                                    dvst.Sort = "MonthOfYear asc";
                                    DataTable dtInstrumens = dvst.ToTable();
                                    string Time = "[";
                                    for (int i = 0; i < dtInstrumens.Rows.Count; i++)
                                    {
                                        Time += "'" + dtInstrumens.Rows[i]["Year"].ToString() + "年" + dtInstrumens.Rows[i]["MonthOfYear"].ToString() + "月',";
                                    }
                                    Time = Time.TrimEnd(',');
                                    Time += "]";

                                    string data = "[{connectNulls:true,";
                                    for (int i = 0; i < typeName.Length; i++)
                                    {
                                        data += "name:'" + typeName[i] + "',data:[";
                                        for (int j = 0; j < dtInstrumens.Rows.Count; j++)
                                        {
                                            if (dtInstrumens.Rows[j][typeName[i]].ToString() == "")
                                            {
                                                data += "null,";
                                            }
                                            else
                                            {
                                                data += dtInstrumens.Rows[j][typeName[i]].ToString() + ",";
                                            }
                                        }
                                        data += "]}, {connectNulls:true,";
                                    }
                                    data = data.Substring(0, data.Length - 21);
                                    data += "]";
                                    hdDTime.Value = Time;
                                    hdDate.Value = data;

                                    hdBegion.Value = dtBegion.ToString("yyyy-MM-dd HH:mm:ss");
                                    hdEnd.Value = dtEnd.ToString("yyyy-MM-dd HH:mm:ss");
                                    hdOrderBy.Value = orderBy1;
                                }
                                else if (type == "图表")
                                {
                                    //【给隐藏域赋值，用于显示Chart】
                                    SetHiddenData(portIds, factors, dtBegion, dtEnd);
                                    
                                }
                                else
                                {
                                    //【给隐藏域赋值，用于显示Chart】
                                    hdBegion.Value = dtBegion.ToString("yyyy-MM-dd HH:mm:ss");
                                    hdEnd.Value = dtEnd.ToString("yyyy-MM-dd HH:mm:ss");
                                    hdOrderBy.Value = orderBy1;
                                }
                            }
                            #endregion
                        }
                    }
                    #endregion


                }
                else
                {
                    gridAudit.DataSource = new DataTable();
                }
            }
            catch (Exception ex)
            {
                log.Error(ex.ToString());
            }
        }

        /// <summary>
        /// 对一级类分类
        /// </summary>
        public void groupYiJi()
        {

            string sbWan = string.Empty;
            string sbTing = string.Empty;
            string sbXi = string.Empty;

            string factorWan = "'非甲烷碳氢化合物'";
            string factorTing ="'卤代烃类VOCs'";
            string factorXi = "'含氧（氮）类VOCs'";
            string sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type]
where VOC1TypeGuid IN (SELECT RowGuid from [dbo].[DT_VOC1Type] where VOC1Type = {0})"
                , factorWan);
            DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
            //string[] factorsWan = dtToArr(dt1);
            sbWan = dtToString(dt1);

            string sql2 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type]
where VOC1TypeGuid IN (SELECT RowGuid from [dbo].[DT_VOC1Type] where VOC1Type = {0})"
                , factorTing);
            DataTable dt2 = g_DatabaseHelper.ExecuteDataTable(sql2, "AMS_BaseDataConnection");
            //string[] factorsWan = dtToArr(dt1);
            sbTing = dtToString(dt2);

            string sql3 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type]
where VOC1TypeGuid IN (SELECT RowGuid from [dbo].[DT_VOC1Type] where VOC1Type = {0})"
                , factorXi);
            DataTable dt3 = g_DatabaseHelper.ExecuteDataTable(sql3, "AMS_BaseDataConnection");
            //string[] factorsWan = dtToArr(dt1);
            sbXi=dtToString(dt3);

            hdGroupFac.Value = sbWan.ToString().Trim(';') + "|" + sbTing.ToString().Trim(';') + "|" + sbXi.ToString().Trim(';');
            hdGroupName.Value = "非甲烷碳氢化合物|卤代烃类VOCs|含氧（氮）类VOCs";
        }
        
        /// <summary>
        /// 对二级类分类
        /// </summary>
        public void groupErJi()
        {
            string TypeName1 = string.Empty;
            string TypeName2 = string.Empty;
            string TypeName3 = string.Empty;
            string TypeName4 = string.Empty;
            string TypeName5 = string.Empty;
            string TypeName6 = string.Empty;
            string TypeName7 = string.Empty;
            string TypeName8 = string.Empty;
            string TypeName9 = string.Empty;
            string TypeName10 = string.Empty;
            string TypeName11 = string.Empty;
            string TypeName12 = string.Empty;
            string TypeName13 = string.Empty;
            string TypeName14= string.Empty;
            //高碳烷烃C6-C12
            string sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , "06a02408-6eab-4188-b442-86dd8e97654c");
            DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
            TypeName1 = dtToString(dt1);
            //炔烃
            string sql2 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , "5b1918b9-7c92-477a-8e23-64cbae6477f6");
            DataTable dt2 = g_DatabaseHelper.ExecuteDataTable(sql2, "AMS_BaseDataConnection");
            TypeName2 = dtToString(dt2);
            //高碳烯烃C6-C12
            string sql3 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , "7bc5f3d8-7cb3-4273-a646-1ed7df60cdd8");
            DataTable dt3 = g_DatabaseHelper.ExecuteDataTable(sql3, "AMS_BaseDataConnection");
            TypeName3 = dtToString(dt3);
            //低碳烯烃C2-C5
            string sql4 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , "a41db3c8-0fb4-4b0e-b1b0-e5950f04eff6");
            DataTable dt4 = g_DatabaseHelper.ExecuteDataTable(sql4, "AMS_BaseDataConnection");
            TypeName4 = dtToString(dt4);
            //苯系物
            string sql5 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , "e9607fce-75dc-4134-9a8d-af2a1eb4a7bf");
            DataTable dt5 = g_DatabaseHelper.ExecuteDataTable(sql5, "AMS_BaseDataConnection");
            TypeName5 = dtToString(dt5);
            //低碳烷烃C2-C5
            string sql6 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , "fb1fc34b-770f-4141-b75a-015919725e0b");
            DataTable dt6 = g_DatabaseHelper.ExecuteDataTable(sql6, "AMS_BaseDataConnection");
            TypeName6 = dtToString(dt6);
            //氟利昂
            string sql7 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , "053c74fd-d1ae-4341-b258-1788079970bd");
            DataTable dt7 = g_DatabaseHelper.ExecuteDataTable(sql7, "AMS_BaseDataConnection");
            TypeName7 = dtToString(dt7);
            //卤代芳香烃
            string sql8 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , "1eaac416-0d69-48b9-aca1-9ff7904907bb");
            DataTable dt8 = g_DatabaseHelper.ExecuteDataTable(sql8, "AMS_BaseDataConnection");
            TypeName8 = dtToString(dt8);
            //卤代烯烃
            string sql9 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , "21de4143-2c28-4256-b71e-6cb5ce63e417");
            DataTable dt9 = g_DatabaseHelper.ExecuteDataTable(sql9, "AMS_BaseDataConnection");
            TypeName9 = dtToString(dt9);
            //卤代烷烃
            string sql10 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , "a0bad5d7-9eec-4fa4-9c36-828aad78041d");
            DataTable dt10 = g_DatabaseHelper.ExecuteDataTable(sql10, "AMS_BaseDataConnection");
            TypeName10 = dtToString(dt10);
            //含氮有机物
            string sql11 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , "3bbe4b30-53e4-48a8-a884-c3b38a03b705");
            DataTable dt11 = g_DatabaseHelper.ExecuteDataTable(sql11, "AMS_BaseDataConnection");
            TypeName11 = dtToString(dt11);
            //醛类有机物
            string sql12 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , "8198b6fc-7a77-427d-8e3e-9c9228ac168c");
            DataTable dt12 = g_DatabaseHelper.ExecuteDataTable(sql12, "AMS_BaseDataConnection");
            TypeName12 = dtToString(dt12);
            //酮类有机物
            string sql13 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , "8c9ce5f3-4716-485e-95e1-72608b2843ce");
            DataTable dt13 = g_DatabaseHelper.ExecuteDataTable(sql13, "AMS_BaseDataConnection");
            TypeName13 = dtToString(dt13);
            //醚类有机物
            string sql14 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , "e5f83fd9-0b77-4d1b-935f-1826fddcc343");
            DataTable dt14 = g_DatabaseHelper.ExecuteDataTable(sql14, "AMS_BaseDataConnection");
            TypeName14 = dtToString(dt14);

            hdGroupFac.Value = TypeName1.Trim(';') + "|" + TypeName2.Trim(';') + "|" + TypeName3.Trim(';') + "|" + TypeName4.Trim(';') + "|" + TypeName5.Trim(';') + "|" + TypeName6.Trim(';') + "|" + TypeName7.Trim(';') + "|" + TypeName8.Trim(';') + "|" + TypeName9.Trim(';') + "|" + TypeName10.Trim(';') + "|" + TypeName11.Trim(';') + "|" + TypeName12.Trim(';') + "|" + TypeName13.Trim(';') + "|" + TypeName14.Trim(';');
            hdGroupName.Value = "高碳烷烃C6-C12|炔烃|高碳烯烃C6-C12|低碳烯烃C2-C5|苯系物|低碳烷烃C2-C5|氟利昂|卤代芳香烃|卤代烯烃|卤代烷烃|含氮有机物|醛类有机物|酮类有机物|醚类有机物";
        }
    
        /// <summary>
        /// 生成RadGrid的绑定列
        /// </summary>
        /// <param sender></param>
        /// <param e></param>
        protected void gridAudit_ColumnCreated(object sender, GridColumnCreatedEventArgs e)
        {
            try
            {
                
                    //GridColumnGroup cg1 = new GridColumnGroup();
                    //cg1.Name = "非甲烷";
                    //cg1.HeaderText = "非甲烷碳氢化合物";
                    //cg1.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;
                    //gridAudit.MasterTableView.ColumnGroups.Add(cg1);
                
                    //GridColumnGroup cg2 = new GridColumnGroup();
                    //cg2.Name = "卤代烃";
                    //cg2.HeaderText = "卤代烃类VOCs";
                    //cg2.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;
                    //gridAudit.MasterTableView.ColumnGroups.Add(cg2);
                
                    //GridColumnGroup cg4 = new GridColumnGroup();
                    //cg4.Name = "含氧";
                    //cg4.HeaderText = "含氧（氮）类VOCs";
                    //cg4.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;
                    //gridAudit.MasterTableView.ColumnGroups.Add(cg4);
                
                    //GridColumnGroup cg5 = new GridColumnGroup();
                    //cg5.Name = "高碳烷烃";
                    //cg5.HeaderText = "高碳烷烃C6-C12";
                    //cg5.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;
                    //cg5.ParentGroupName = "非甲烷";
                    //gridAudit.MasterTableView.ColumnGroups.Add(cg5);
                
                    //GridColumnGroup cg6 = new GridColumnGroup();
                    //cg6.Name = "炔烃";
                    //cg6.HeaderText = "炔烃";
                    //cg6.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;
                    //cg6.ParentGroupName = "非甲烷";
                    //gridAudit.MasterTableView.ColumnGroups.Add(cg6);
                
                    //GridColumnGroup cg7 = new GridColumnGroup();
                    //cg7.Name = "高碳烯烃";
                    //cg7.HeaderText = "高碳烯烃C6-C12";
                    //cg7.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;
                    //cg7.ParentGroupName = "非甲烷";
                    //gridAudit.MasterTableView.ColumnGroups.Add(cg7);
                
                    //GridColumnGroup cg8 = new GridColumnGroup();
                    //cg8.Name = "低碳烯烃";
                    //cg8.HeaderText = "低碳烯烃C2-C5";
                    //cg8.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;
                    //cg8.ParentGroupName = "非甲烷";
                    //gridAudit.MasterTableView.ColumnGroups.Add(cg8);
                
                    //GridColumnGroup cg9 = new GridColumnGroup();
                    //cg9.Name = "苯系物";
                    //cg9.HeaderText = "苯系物";
                    //cg9.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;
                    //cg9.ParentGroupName = "非甲烷";
                    //gridAudit.MasterTableView.ColumnGroups.Add(cg9);
                
                    //GridColumnGroup cg10 = new GridColumnGroup();
                    //cg10.Name = "低碳烷烃";
                    //cg10.HeaderText = "低碳烷烃C2-C5";
                    //cg10.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;
                    //cg10.ParentGroupName = "非甲烷";
                    //gridAudit.MasterTableView.ColumnGroups.Add(cg10);
                
                    //GridColumnGroup cg11 = new GridColumnGroup();
                    //cg11.Name = "氟利昂";
                    //cg11.HeaderText = "氟利昂";
                    //cg11.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;
                    //cg11.ParentGroupName = "卤代烃";
                    //gridAudit.MasterTableView.ColumnGroups.Add(cg11);
                
                    //GridColumnGroup cg12 = new GridColumnGroup();
                    //cg12.Name = "卤代芳香烃";
                    //cg12.HeaderText = "卤代芳香烃";
                    //cg12.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;
                    //cg12.ParentGroupName = "卤代烃";
                    //gridAudit.MasterTableView.ColumnGroups.Add(cg12);
                
                    //GridColumnGroup cg13 = new GridColumnGroup();
                    //cg13.Name = "卤代烯烃";
                    //cg13.HeaderText = "卤代烯烃";
                    //cg13.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;
                    //cg13.ParentGroupName = "卤代烃";
                    //gridAudit.MasterTableView.ColumnGroups.Add(cg13);
                
                    //GridColumnGroup cg14 = new GridColumnGroup();
                    //cg14.Name = "卤代烷烃";
                    //cg14.HeaderText = "卤代烷烃";
                    //cg14.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;
                    //cg14.ParentGroupName = "卤代烃";
                    //gridAudit.MasterTableView.ColumnGroups.Add(cg14);
                
                    //GridColumnGroup cg15 = new GridColumnGroup();
                    //cg15.Name = "含氮有机物";
                    //cg15.HeaderText = "含氮有机物";
                    //cg15.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;
                    //cg15.ParentGroupName = "含氧";
                    //gridAudit.MasterTableView.ColumnGroups.Add(cg15);
                
                    //GridColumnGroup cg16 = new GridColumnGroup();
                    //cg16.Name = "醛类";
                    //cg16.HeaderText = "醛类有机物";
                    //cg16.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;
                    //cg16.ParentGroupName = "含氧";
                    //gridAudit.MasterTableView.ColumnGroups.Add(cg16);
                
                    //GridColumnGroup cg17 = new GridColumnGroup();
                    //cg17.Name = "酮类";
                    //cg17.HeaderText = "酮类有机物";
                    //cg17.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;
                    //cg17.ParentGroupName = "含氧";
                    //gridAudit.MasterTableView.ColumnGroups.Add(cg17);
                
                    //GridColumnGroup cg18 = new GridColumnGroup();
                    //cg18.Name = "醚类";
                    //cg18.HeaderText = "醚类有机物";
                    //cg18.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;
                    //cg18.ParentGroupName = "含氧";
                    //gridAudit.MasterTableView.ColumnGroups.Add(cg18);
                

                if (e.Column.ColumnType.Equals("GridExpandColumn"))
                    return;
                //追加测点
                GridBoundColumn col = (GridBoundColumn)e.Column;
                string a = col.DataField;
                string TypeName1 = string.Empty;
                string TypeName2 = string.Empty;
                string TypeName3 = string.Empty;
                string TypeName4 = string.Empty;
                string TypeName5 = string.Empty;
                string TypeName6 = string.Empty;
                string TypeName7 = string.Empty;
                string TypeName8 = string.Empty;
                string TypeName9 = string.Empty;
                string TypeName10 = string.Empty;
                string TypeName11 = string.Empty;
                string TypeName12 = string.Empty;
                string TypeName13 = string.Empty;
                string TypeName14 = string.Empty;
                //高碳烷烃C6-C12
                string sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                    , "06a02408-6eab-4188-b442-86dd8e97654c");
                DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                TypeName1 = dtToString(dt1);
                //炔烃
                string sql2 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                    , "5b1918b9-7c92-477a-8e23-64cbae6477f6");
                DataTable dt2 = g_DatabaseHelper.ExecuteDataTable(sql2, "AMS_BaseDataConnection");
                TypeName2 = dtToString(dt2);
                //高碳烯烃C6-C12
                string sql3 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                    , "7bc5f3d8-7cb3-4273-a646-1ed7df60cdd8");
                DataTable dt3 = g_DatabaseHelper.ExecuteDataTable(sql3, "AMS_BaseDataConnection");
                TypeName3 = dtToString(dt3);
                //低碳烯烃C2-C5
                string sql4 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                    , "a41db3c8-0fb4-4b0e-b1b0-e5950f04eff6");
                DataTable dt4 = g_DatabaseHelper.ExecuteDataTable(sql4, "AMS_BaseDataConnection");
                TypeName4 = dtToString(dt4);
                //苯系物
                string sql5 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                    , "e9607fce-75dc-4134-9a8d-af2a1eb4a7bf");
                DataTable dt5 = g_DatabaseHelper.ExecuteDataTable(sql5, "AMS_BaseDataConnection");
                TypeName5 = dtToString(dt5);
                //低碳烷烃C2-C5
                string sql6 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                    , "fb1fc34b-770f-4141-b75a-015919725e0b");
                DataTable dt6 = g_DatabaseHelper.ExecuteDataTable(sql6, "AMS_BaseDataConnection");
                TypeName6 = dtToString(dt6);
                //氟利昂
                string sql7 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                    , "053c74fd-d1ae-4341-b258-1788079970bd");
                DataTable dt7 = g_DatabaseHelper.ExecuteDataTable(sql7, "AMS_BaseDataConnection");
                TypeName7 = dtToString(dt7);
                //卤代芳香烃
                string sql8 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                    , "1eaac416-0d69-48b9-aca1-9ff7904907bb");
                DataTable dt8 = g_DatabaseHelper.ExecuteDataTable(sql8, "AMS_BaseDataConnection");
                TypeName8 = dtToString(dt8);
                //卤代烯烃
                string sql9 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                    , "21de4143-2c28-4256-b71e-6cb5ce63e417");
                DataTable dt9 = g_DatabaseHelper.ExecuteDataTable(sql9, "AMS_BaseDataConnection");
                TypeName9 = dtToString(dt9);
                //卤代烷烃
                string sql10 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                    , "a0bad5d7-9eec-4fa4-9c36-828aad78041d");
                DataTable dt10 = g_DatabaseHelper.ExecuteDataTable(sql10, "AMS_BaseDataConnection");
                TypeName10 = dtToString(dt10);
                //含氮有机物
                string sql11 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                    , "3bbe4b30-53e4-48a8-a884-c3b38a03b705");
                DataTable dt11 = g_DatabaseHelper.ExecuteDataTable(sql11, "AMS_BaseDataConnection");
                TypeName11 = dtToString(dt11);
                //醛类有机物
                string sql12 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                    , "8198b6fc-7a77-427d-8e3e-9c9228ac168c");
                DataTable dt12 = g_DatabaseHelper.ExecuteDataTable(sql12, "AMS_BaseDataConnection");
                TypeName12 = dtToString(dt12);
                //酮类有机物
                string sql13 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                    , "8c9ce5f3-4716-485e-95e1-72608b2843ce");
                DataTable dt13 = g_DatabaseHelper.ExecuteDataTable(sql13, "AMS_BaseDataConnection");
                TypeName13 = dtToString(dt13);
                //醚类有机物
                string sql14 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                    , "e5f83fd9-0b77-4d1b-935f-1826fddcc343");
                DataTable dt14 = g_DatabaseHelper.ExecuteDataTable(sql14, "AMS_BaseDataConnection");
                TypeName14 = dtToString(dt14);

                if (col.DataField == "PointId")
                {
                    col.HeaderText = "测点";
                    col.EmptyDataText = "--";
                    col.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;
                    col.ItemStyle.HorizontalAlign = HorizontalAlign.Center;
                    col.FooterStyle.HorizontalAlign = HorizontalAlign.Center;
                    col.FooterText = "平均值<br>最大值<br>最小值";
                    col.HeaderStyle.Width = Unit.Pixel(110);
                    col.ItemStyle.Width = Unit.Pixel(110);
                }
                else if (col.DataField == "非甲烷碳氢化合物")
                {
                    col.HeaderText = "非甲烷碳氢化合物(ppb)";
                    col.EmptyDataText = "--";
                    col.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;
                    col.ItemStyle.HorizontalAlign = HorizontalAlign.Center;
                    col.FooterStyle.HorizontalAlign = HorizontalAlign.Center;
                    col.HeaderStyle.Width = Unit.Pixel(110);
                    col.ItemStyle.Width = Unit.Pixel(110);
                }
                else if (col.DataField == "卤代烃类VOCs")
                {
                    col.HeaderText = "卤代烃类VOCs(ppb)";
                    col.EmptyDataText = "--";
                    col.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;
                    col.ItemStyle.HorizontalAlign = HorizontalAlign.Center;
                    col.FooterStyle.HorizontalAlign = HorizontalAlign.Center;
                    col.HeaderStyle.Width = Unit.Pixel(110);
                    col.ItemStyle.Width = Unit.Pixel(110);
                }
                else if (col.DataField == "含氧（氮）类VOCs")
                {
                    col.HeaderText = "含氧（氮）类VOCs(ppb)";
                    col.EmptyDataText = "--";
                    col.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;
                    col.ItemStyle.HorizontalAlign = HorizontalAlign.Center;
                    col.FooterStyle.HorizontalAlign = HorizontalAlign.Center;
                    col.HeaderStyle.Width = Unit.Pixel(110);
                    col.ItemStyle.Width = Unit.Pixel(110);
                }
                else if (col.DataField == "TVOC")
                {
                    col.HeaderText = "TVOC(ppb)";
                    col.EmptyDataText = "--";
                    col.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;
                    col.ItemStyle.HorizontalAlign = HorizontalAlign.Center;
                    col.FooterStyle.HorizontalAlign = HorizontalAlign.Center;
                    col.HeaderStyle.Width = Unit.Pixel(110);
                    col.ItemStyle.Width = Unit.Pixel(110);
                }
                
                else if (col.DataField == "高碳烷烃C6-C12")
                {
                    col.HeaderText = "高碳烷烃C6-C12(ppb)";
                    col.EmptyDataText = "--";
                    col.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;
                    col.ItemStyle.HorizontalAlign = HorizontalAlign.Center;
                    col.FooterStyle.HorizontalAlign = HorizontalAlign.Center;
                    col.HeaderStyle.Width = Unit.Pixel(110);
                    col.ItemStyle.Width = Unit.Pixel(110);
                    col.ColumnGroupName = "非甲烷";
                }
                else if (col.DataField == "炔烃")
                {
                    col.HeaderText = "炔烃(ppb)";
                    col.EmptyDataText = "--";
                    col.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;
                    col.ItemStyle.HorizontalAlign = HorizontalAlign.Center;
                    col.FooterStyle.HorizontalAlign = HorizontalAlign.Center;
                    col.HeaderStyle.Width = Unit.Pixel(110);
                    col.ItemStyle.Width = Unit.Pixel(110);
                    col.ColumnGroupName = "非甲烷";
                }
                else if (col.DataField == "高碳烯烃C6-C12")
                {
                    col.HeaderText = "高碳烯烃C6-C12(ppb)";
                    col.EmptyDataText = "--";
                    col.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;
                    col.ItemStyle.HorizontalAlign = HorizontalAlign.Center;
                    col.FooterStyle.HorizontalAlign = HorizontalAlign.Center;
                    col.HeaderStyle.Width = Unit.Pixel(110);
                    col.ItemStyle.Width = Unit.Pixel(110);
                    col.ColumnGroupName = "非甲烷";
                }
                else if (col.DataField == "低碳烯烃C2-C5")
                {
                    col.HeaderText = "低碳烯烃C2-C5(ppb)";
                    col.EmptyDataText = "--";
                    col.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;
                    col.ItemStyle.HorizontalAlign = HorizontalAlign.Center;
                    col.FooterStyle.HorizontalAlign = HorizontalAlign.Center;
                    col.HeaderStyle.Width = Unit.Pixel(110);
                    col.ItemStyle.Width = Unit.Pixel(110);
                    col.ColumnGroupName = "非甲烷";
                }
                else if (col.DataField == "苯系物")
                {
                    col.HeaderText = "苯系物(ppb)";
                    col.EmptyDataText = "--";
                    col.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;
                    col.ItemStyle.HorizontalAlign = HorizontalAlign.Center;
                    col.FooterStyle.HorizontalAlign = HorizontalAlign.Center;
                    col.HeaderStyle.Width = Unit.Pixel(110);
                    col.ItemStyle.Width = Unit.Pixel(110);
                    col.ColumnGroupName = "非甲烷";
                }
                else if (col.DataField == "低碳烷烃C2-C5")
                {
                    col.HeaderText = "低碳烷烃C2-C5(ppb)";
                    col.EmptyDataText = "--";
                    col.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;
                    col.ItemStyle.HorizontalAlign = HorizontalAlign.Center;
                    col.FooterStyle.HorizontalAlign = HorizontalAlign.Center;
                    col.HeaderStyle.Width = Unit.Pixel(110);
                    col.ItemStyle.Width = Unit.Pixel(110);
                    col.ColumnGroupName = "非甲烷";
                }
                else if (col.DataField == "氟利昂")
                {
                    col.HeaderText = "氟利昂(ppb)";
                    col.EmptyDataText = "--";
                    col.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;
                    col.ItemStyle.HorizontalAlign = HorizontalAlign.Center;
                    col.FooterStyle.HorizontalAlign = HorizontalAlign.Center;
                    col.HeaderStyle.Width = Unit.Pixel(110);
                    col.ItemStyle.Width = Unit.Pixel(110);
                    col.ColumnGroupName = "卤代烃";
                }
                else if (col.DataField == "卤代芳香烃")
                {
                    col.HeaderText = "卤代芳香烃(ppb)";
                    col.EmptyDataText = "--";
                    col.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;
                    col.ItemStyle.HorizontalAlign = HorizontalAlign.Center;
                    col.FooterStyle.HorizontalAlign = HorizontalAlign.Center;
                    col.HeaderStyle.Width = Unit.Pixel(110);
                    col.ItemStyle.Width = Unit.Pixel(110);
                    col.ColumnGroupName = "卤代烃";
                }
                else if (col.DataField == "卤代烯烃")
                {
                    col.HeaderText = "卤代烯烃(ppb)";
                    col.EmptyDataText = "--";
                    col.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;
                    col.ItemStyle.HorizontalAlign = HorizontalAlign.Center;
                    col.FooterStyle.HorizontalAlign = HorizontalAlign.Center;
                    col.HeaderStyle.Width = Unit.Pixel(110);
                    col.ItemStyle.Width = Unit.Pixel(110);
                    col.ColumnGroupName = "卤代烃";
                }
                else if (col.DataField == "卤代烷烃")
                {
                    col.HeaderText = "卤代烷烃(ppb)";
                    col.EmptyDataText = "--";
                    col.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;
                    col.ItemStyle.HorizontalAlign = HorizontalAlign.Center;
                    col.FooterStyle.HorizontalAlign = HorizontalAlign.Center;
                    col.HeaderStyle.Width = Unit.Pixel(110);
                    col.ItemStyle.Width = Unit.Pixel(110);
                    col.ColumnGroupName = "卤代烃";
                }
                else if (col.DataField == "含氮有机物")
                {
                    col.HeaderText = "含氮有机物(ppb)";
                    col.EmptyDataText = "--";
                    col.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;
                    col.ItemStyle.HorizontalAlign = HorizontalAlign.Center;
                    col.FooterStyle.HorizontalAlign = HorizontalAlign.Center;
                    col.HeaderStyle.Width = Unit.Pixel(110);
                    col.ItemStyle.Width = Unit.Pixel(110);
                    col.ColumnGroupName = "含氧";
                }
                
                
                else if (col.DataField == "醛类有机物")
                {
                    col.HeaderText = "醛类有机物(ppb)";
                    col.EmptyDataText = "--";
                    col.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;
                    col.ItemStyle.HorizontalAlign = HorizontalAlign.Center;
                    col.FooterStyle.HorizontalAlign = HorizontalAlign.Center;
                    col.HeaderStyle.Width = Unit.Pixel(110);
                    col.ItemStyle.Width = Unit.Pixel(110);
                    col.ColumnGroupName = "含氧";
                }
                else if (col.DataField == "酮类有机物")
                {
                    col.HeaderText = "酮类有机物(ppb)";
                    col.EmptyDataText = "--";
                    col.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;
                    col.ItemStyle.HorizontalAlign = HorizontalAlign.Center;
                    col.FooterStyle.HorizontalAlign = HorizontalAlign.Center;
                    col.HeaderStyle.Width = Unit.Pixel(110);
                    col.ItemStyle.Width = Unit.Pixel(110);
                    col.ColumnGroupName = "含氧";
                }
                
                
                else if (col.DataField == "醚类有机物")
                {
                    col.HeaderText = "醚类有机物(ppb)";
                    col.EmptyDataText = "--";
                    col.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;
                    col.ItemStyle.HorizontalAlign = HorizontalAlign.Center;
                    col.FooterStyle.HorizontalAlign = HorizontalAlign.Center;
                    col.HeaderStyle.Width = Unit.Pixel(110);
                    col.ItemStyle.Width = Unit.Pixel(110);
                    col.ColumnGroupName = "含氧";
                }
                
                //追加日期
                else if (col.DataField == "Tstamp")
                {
                    col = (GridDateTimeColumn)e.Column;
                    string tstcolformat = "{0:MM-dd HH:mm}";
                    if (SmartEP.Core.Enums.EnumMapping.ParseEnum<PollutantDataType>(radlDataType.SelectedValue) == PollutantDataType.Hour)
                        tstcolformat = "{0:MM-dd HH:mm}";
                    col.HeaderText = "日期";
                    col.DataFormatString = tstcolformat;
                    col.EmptyDataText = "--";
                    col.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;
                    col.ItemStyle.HorizontalAlign = HorizontalAlign.Center;
                    col.FooterStyle.HorizontalAlign = HorizontalAlign.Center;
                    col.HeaderStyle.Width = Unit.Pixel(120);
                    col.ItemStyle.Width = Unit.Pixel(120);
                }
                else if (col.DataField == "DateTime")
                {
                    col = (GridDateTimeColumn)e.Column;
                    string tstcolformat = "{0:yyyy-MM-dd}";
                    if (SmartEP.Core.Enums.EnumMapping.ParseEnum<PollutantDataType>(radlDataType.SelectedValue) == PollutantDataType.Day)
                        tstcolformat = "{0:yyyy-MM-dd}";
                    col.HeaderText = "日期";
                    col.DataFormatString = tstcolformat;
                    col.EmptyDataText = "--";
                    col.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;
                    col.ItemStyle.HorizontalAlign = HorizontalAlign.Center;
                    col.FooterStyle.HorizontalAlign = HorizontalAlign.Center;
                    col.HeaderStyle.Width = Unit.Pixel(120);
                    col.ItemStyle.Width = Unit.Pixel(120);
                }
                else if (col.DataField == "Year")
                {
                    col = (GridNumericColumn)e.Column;
                    col.HeaderText = "年份";
                    col.EmptyDataText = "--";
                    col.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;
                    col.ItemStyle.HorizontalAlign = HorizontalAlign.Center;
                    col.FooterStyle.HorizontalAlign = HorizontalAlign.Center;
                    col.HeaderStyle.Width = Unit.Pixel(120);
                    col.ItemStyle.Width = Unit.Pixel(120);
                }
                else if (col.DataField == "WeekOfYear")
                {
                    col = (GridNumericColumn)e.Column;
                    col.HeaderText = "周";
                    col.EmptyDataText = "--";
                    col.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;
                    col.ItemStyle.HorizontalAlign = HorizontalAlign.Center;
                    col.FooterStyle.HorizontalAlign = HorizontalAlign.Center;
                    col.HeaderStyle.Width = Unit.Pixel(120);
                    col.ItemStyle.Width = Unit.Pixel(120);
                }
                else if (col.DataField == "MonthOfYear")
                {
                    col = (GridNumericColumn)e.Column;
                    col.HeaderText = "月份";
                    col.EmptyDataText = "--";
                    col.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;
                    col.ItemStyle.HorizontalAlign = HorizontalAlign.Center;
                    col.FooterStyle.HorizontalAlign = HorizontalAlign.Center;
                    col.HeaderStyle.Width = Unit.Pixel(120);
                    col.ItemStyle.Width = Unit.Pixel(120);
                }
                else if (col.DataField == "SeasonOfYear")
                {
                    col = (GridNumericColumn)e.Column;
                    col.HeaderText = "季";
                    col.EmptyDataText = "--";
                    col.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;
                    col.ItemStyle.HorizontalAlign = HorizontalAlign.Center;
                    col.FooterStyle.HorizontalAlign = HorizontalAlign.Center;
                    col.HeaderStyle.Width = Unit.Pixel(120);
                    col.ItemStyle.Width = Unit.Pixel(120);
                }

                //追加因子
                //else if (cbFactor.CheckedItems.Select(t => t.Value).Contains(col.DataField))//(factors.Select(x => x.PollutantCode).Contains(col.DataField))
                else if (newFactors.Select(x => x.PollutantCode).Contains(col.DataField))
                {
                    string unit = "";
                    int radGridColWidthValue = int.Parse(radGridColWidth.Value.ToString());
                    IPollutant iFactorCode = m_AirPollutantService.GetPollutantInfo(col.DataField);
                    if (iFactorCode != null)
                    {
                        unit = iFactorCode.PollutantMeasureUnit;
                        if (unit == "ng/m³")
                        {
                            unit = "μg/m³";
                        }
                    }
                    IPollutant factor = newFactors.FirstOrDefault(x => x.PollutantCode.Equals(col.DataField));
                    //高碳烷烃C6-C12
                    if (TypeName1.Contains(col.DataField))
                    {
                        col.HeaderText = string.Format("{0}<br>({1})", factor.PollutantName, factor.PollutantMeasureUnit);
                        //col.HeaderText = string.Format("{0}<br>({1})", cbFactor.Items.Where(t => t.Value == col.DataField).Select(t => t.Text).FirstOrDefault(), unit);
                        col.EmptyDataText = "--";
                        col.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;
                        col.ItemStyle.HorizontalAlign = HorizontalAlign.Center;
                        col.FooterStyle.HorizontalAlign = HorizontalAlign.Center;
                        col.HeaderStyle.Width = Unit.Pixel(radGridColWidthValue);
                        col.ItemStyle.Width = Unit.Pixel(radGridColWidthValue);
                        col.ColumnGroupName = "高碳烷烃";
                        SetGridFooterText(col);
                    }
                    //炔烃
                    if(TypeName2.Contains(col.DataField))
                    {
                        col.HeaderText = string.Format("{0}<br>({1})", factor.PollutantName, factor.PollutantMeasureUnit);
                        //col.HeaderText = string.Format("{0}<br>({1})", cbFactor.Items.Where(t => t.Value == col.DataField).Select(t => t.Text).FirstOrDefault(), unit);
                        col.EmptyDataText = "--";
                        col.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;
                        col.ItemStyle.HorizontalAlign = HorizontalAlign.Center;
                        col.FooterStyle.HorizontalAlign = HorizontalAlign.Center;
                        col.HeaderStyle.Width = Unit.Pixel(radGridColWidthValue);
                        col.ItemStyle.Width = Unit.Pixel(radGridColWidthValue);
                        col.ColumnGroupName = "炔烃";
                        SetGridFooterText(col);
                    }
                    //高碳烯烃C6-C12
                    if (TypeName3.Contains(col.DataField))
                    {
                        col.HeaderText = string.Format("{0}<br>({1})", factor.PollutantName, factor.PollutantMeasureUnit);
                        //col.HeaderText = string.Format("{0}<br>({1})", cbFactor.Items.Where(t => t.Value == col.DataField).Select(t => t.Text).FirstOrDefault(), unit);
                        col.EmptyDataText = "--";
                        col.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;
                        col.ItemStyle.HorizontalAlign = HorizontalAlign.Center;
                        col.FooterStyle.HorizontalAlign = HorizontalAlign.Center;
                        col.HeaderStyle.Width = Unit.Pixel(radGridColWidthValue);
                        col.ItemStyle.Width = Unit.Pixel(radGridColWidthValue);
                        col.ColumnGroupName = "高碳烯烃";
                        SetGridFooterText(col);
                    }
                    //低碳烯烃C2-C5
                    if (TypeName4.Contains(col.DataField))
                    {
                        col.HeaderText = string.Format("{0}<br>({1})", factor.PollutantName, factor.PollutantMeasureUnit);
                        //col.HeaderText = string.Format("{0}<br>({1})", cbFactor.Items.Where(t => t.Value == col.DataField).Select(t => t.Text).FirstOrDefault(), unit);
                        col.EmptyDataText = "--";
                        col.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;
                        col.ItemStyle.HorizontalAlign = HorizontalAlign.Center;
                        col.FooterStyle.HorizontalAlign = HorizontalAlign.Center;
                        col.HeaderStyle.Width = Unit.Pixel(radGridColWidthValue);
                        col.ItemStyle.Width = Unit.Pixel(radGridColWidthValue);
                        col.ColumnGroupName = "低碳烯烃";
                        SetGridFooterText(col);
                    }
                    //苯系物
                    if (TypeName5.Contains(col.DataField))
                    {
                        col.HeaderText = string.Format("{0}<br>({1})", factor.PollutantName, factor.PollutantMeasureUnit);
                        //col.HeaderText = string.Format("{0}<br>({1})", cbFactor.Items.Where(t => t.Value == col.DataField).Select(t => t.Text).FirstOrDefault(), unit);
                        col.EmptyDataText = "--";
                        col.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;
                        col.ItemStyle.HorizontalAlign = HorizontalAlign.Center;
                        col.FooterStyle.HorizontalAlign = HorizontalAlign.Center;
                        col.HeaderStyle.Width = Unit.Pixel(radGridColWidthValue);
                        col.ItemStyle.Width = Unit.Pixel(radGridColWidthValue);
                        col.ColumnGroupName = "苯系物";
                        SetGridFooterText(col);
                    }
                    //低碳烷烃C2-C5
                    if (TypeName6.Contains(col.DataField))
                    {
                        col.HeaderText = string.Format("{0}<br>({1})", factor.PollutantName, factor.PollutantMeasureUnit);
                        //col.HeaderText = string.Format("{0}<br>({1})", cbFactor.Items.Where(t => t.Value == col.DataField).Select(t => t.Text).FirstOrDefault(), unit);
                        col.EmptyDataText = "--";
                        col.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;
                        col.ItemStyle.HorizontalAlign = HorizontalAlign.Center;
                        col.FooterStyle.HorizontalAlign = HorizontalAlign.Center;
                        col.HeaderStyle.Width = Unit.Pixel(radGridColWidthValue);
                        col.ItemStyle.Width = Unit.Pixel(radGridColWidthValue);
                        col.ColumnGroupName = "低碳烷烃";
                        SetGridFooterText(col);
                    }
                    //氟利昂
                    if (TypeName7.Contains(col.DataField))
                    {
                        col.HeaderText = string.Format("{0}<br>({1})", factor.PollutantName, factor.PollutantMeasureUnit);
                        //col.HeaderText = string.Format("{0}<br>({1})", cbFactor.Items.Where(t => t.Value == col.DataField).Select(t => t.Text).FirstOrDefault(), unit);
                        col.EmptyDataText = "--";
                        col.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;
                        col.ItemStyle.HorizontalAlign = HorizontalAlign.Center;
                        col.FooterStyle.HorizontalAlign = HorizontalAlign.Center;
                        col.HeaderStyle.Width = Unit.Pixel(radGridColWidthValue);
                        col.ItemStyle.Width = Unit.Pixel(radGridColWidthValue);
                        col.ColumnGroupName = "氟利昂";
                        SetGridFooterText(col);
                    }
                    //卤代芳香烃
                    if (TypeName8.Contains(col.DataField))
                    {
                        col.HeaderText = string.Format("{0}<br>({1})", factor.PollutantName, factor.PollutantMeasureUnit);
                        //col.HeaderText = string.Format("{0}<br>({1})", cbFactor.Items.Where(t => t.Value == col.DataField).Select(t => t.Text).FirstOrDefault(), unit);
                        col.EmptyDataText = "--";
                        col.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;
                        col.ItemStyle.HorizontalAlign = HorizontalAlign.Center;
                        col.FooterStyle.HorizontalAlign = HorizontalAlign.Center;
                        col.HeaderStyle.Width = Unit.Pixel(radGridColWidthValue);
                        col.ItemStyle.Width = Unit.Pixel(radGridColWidthValue);
                        col.ColumnGroupName = "卤代芳香烃";
                        SetGridFooterText(col);
                    }
                    //卤代烯烃
                    if (TypeName9.Contains(col.DataField))
                    {
                        col.HeaderText = string.Format("{0}<br>({1})", factor.PollutantName, factor.PollutantMeasureUnit);
                        //col.HeaderText = string.Format("{0}<br>({1})", cbFactor.Items.Where(t => t.Value == col.DataField).Select(t => t.Text).FirstOrDefault(), unit);
                        col.EmptyDataText = "--";
                        col.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;
                        col.ItemStyle.HorizontalAlign = HorizontalAlign.Center;
                        col.FooterStyle.HorizontalAlign = HorizontalAlign.Center;
                        col.HeaderStyle.Width = Unit.Pixel(radGridColWidthValue);
                        col.ItemStyle.Width = Unit.Pixel(radGridColWidthValue);
                        col.ColumnGroupName = "卤代烯烃";
                        SetGridFooterText(col);
                    }
                    //卤代烷烃
                    if (TypeName10.Contains(col.DataField))
                    {
                        col.HeaderText = string.Format("{0}<br>({1})", factor.PollutantName, factor.PollutantMeasureUnit);
                        //col.HeaderText = string.Format("{0}<br>({1})", cbFactor.Items.Where(t => t.Value == col.DataField).Select(t => t.Text).FirstOrDefault(), unit);
                        col.EmptyDataText = "--";
                        col.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;
                        col.ItemStyle.HorizontalAlign = HorizontalAlign.Center;
                        col.FooterStyle.HorizontalAlign = HorizontalAlign.Center;
                        col.HeaderStyle.Width = Unit.Pixel(radGridColWidthValue);
                        col.ItemStyle.Width = Unit.Pixel(radGridColWidthValue);
                        col.ColumnGroupName = "卤代烷烃";
                        SetGridFooterText(col);
                    }
                    //含氮有机物
                    if (TypeName11.Contains(col.DataField))
                    {
                        col.HeaderText = string.Format("{0}<br>({1})", factor.PollutantName, factor.PollutantMeasureUnit);
                        //col.HeaderText = string.Format("{0}<br>({1})", cbFactor.Items.Where(t => t.Value == col.DataField).Select(t => t.Text).FirstOrDefault(), unit);
                        col.EmptyDataText = "--";
                        col.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;
                        col.ItemStyle.HorizontalAlign = HorizontalAlign.Center;
                        col.FooterStyle.HorizontalAlign = HorizontalAlign.Center;
                        col.HeaderStyle.Width = Unit.Pixel(radGridColWidthValue);
                        col.ItemStyle.Width = Unit.Pixel(radGridColWidthValue);
                        col.ColumnGroupName = "含氮有机物";
                        SetGridFooterText(col);
                    }
                    //醛类有机物
                    if (TypeName12.Contains(col.DataField))
                    {
                        col.HeaderText = string.Format("{0}<br>({1})", factor.PollutantName, factor.PollutantMeasureUnit);
                        //col.HeaderText = string.Format("{0}<br>({1})", cbFactor.Items.Where(t => t.Value == col.DataField).Select(t => t.Text).FirstOrDefault(), unit);
                        col.EmptyDataText = "--";
                        col.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;
                        col.ItemStyle.HorizontalAlign = HorizontalAlign.Center;
                        col.FooterStyle.HorizontalAlign = HorizontalAlign.Center;
                        col.HeaderStyle.Width = Unit.Pixel(radGridColWidthValue);
                        col.ItemStyle.Width = Unit.Pixel(radGridColWidthValue);
                        col.ColumnGroupName = "醛类";
                        SetGridFooterText(col);
                    }
                    //酮类有机物
                    if (TypeName13.Contains(col.DataField))
                    {
                        col.HeaderText = string.Format("{0}<br>({1})", factor.PollutantName, factor.PollutantMeasureUnit);
                        //col.HeaderText = string.Format("{0}<br>({1})", cbFactor.Items.Where(t => t.Value == col.DataField).Select(t => t.Text).FirstOrDefault(), unit);
                        col.EmptyDataText = "--";
                        col.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;
                        col.ItemStyle.HorizontalAlign = HorizontalAlign.Center;
                        col.FooterStyle.HorizontalAlign = HorizontalAlign.Center;
                        col.HeaderStyle.Width = Unit.Pixel(radGridColWidthValue);
                        col.ItemStyle.Width = Unit.Pixel(radGridColWidthValue);
                        col.ColumnGroupName = "酮类";
                        SetGridFooterText(col);
                    }
                    //醚类有机物
                    if (TypeName14.Contains(col.DataField))
                    {
                        col.HeaderText = string.Format("{0}<br>({1})", factor.PollutantName, factor.PollutantMeasureUnit);
                        //col.HeaderText = string.Format("{0}<br>({1})", cbFactor.Items.Where(t => t.Value == col.DataField).Select(t => t.Text).FirstOrDefault(), unit);
                        col.EmptyDataText = "--";
                        col.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;
                        col.ItemStyle.HorizontalAlign = HorizontalAlign.Center;
                        col.FooterStyle.HorizontalAlign = HorizontalAlign.Center;
                        col.HeaderStyle.Width = Unit.Pixel(radGridColWidthValue);
                        col.ItemStyle.Width = Unit.Pixel(radGridColWidthValue);
                        col.ColumnGroupName = "醚类";
                        SetGridFooterText(col);
                    }
                    
                    
                }
                else if (col.DataField == "blankspaceColumn") { }
                else
                {
                    e.Column.Visible = false;
                }

            }
            catch (Exception ex) 
            {
                log.Error(ex.ToString());
                throw ex;
            }
        }
        /// <summary>
        /// 平均大小值
        /// </summary>
        /// <param name="col"></param>
        public void SetGridFooterText(GridBoundColumn col)
        {

        }

        /// <summary>
        /// 页面隐藏域控件赋值（小时、日），将数据需要的参数放入隐藏域，各个参数间用‘|’分割，每个参数内部用‘；’分割
        /// </summary>
        /// <param name="portIds"></param>
        /// <param name="factors"></param>
        /// <param name="dtBegin"></param>
        /// <param name="dtEnd"></param>
        private void SetHiddenData(string[] portIds, IList<IPollutant> factors, DateTime dtBegin, DateTime dtEnd)
        {
            if (ddlDataSource.SelectedValue == "OriData")
            {
                if (RadioButtonList1.SelectedValue == "Min60" && PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                {
                    HiddenData.Value = string.Join(";", portIds) + "|" + string.Join(";", factors.Select(p => p.PollutantCode).ToArray())
                                 + "|" + dtBegin + "|" + dtEnd + "|" + RadioButtonList1.SelectedValue + "kqy" + "|Air";
                    HiddenChartType.Value = ChartType.SelectedValue;
                }
                else
                {
                    HiddenData.Value = string.Join(";", portIds) + "|" + string.Join(";", factors.Select(p => p.PollutantCode).ToArray())
                                 + "|" + dtBegin + "|" + dtEnd + "|" + RadioButtonList1.SelectedValue + "|Air";
                    HiddenChartType.Value = ChartType.SelectedValue;
                }
                
            }
            if (ddlDataSource.SelectedValue == "AuditData")
            {
                if (radlDataType.SelectedValue=="Hour" && PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                {
                    HiddenData.Value = string.Join(";", portIds) + "|" + string.Join(";", factors.Select(p => p.PollutantCode).ToArray())
                                 + "|" + dtBegin + "|" + dtEnd + "|" + radlDataType.SelectedValue + "kqy" + "|Air";
                    HiddenChartType.Value = ChartType.SelectedValue;
                }
                else
                {
                    HiddenData.Value = string.Join(";", portIds) + "|" + string.Join(";", factors.Select(p => p.PollutantCode).ToArray())
                                 + "|" + dtBegin + "|" + dtEnd + "|" + radlDataType.SelectedValue + "|Air";
                    HiddenChartType.Value = ChartType.SelectedValue;
                }
                
            }
        }

        /// <summary>
        /// 页面隐藏域控件赋值,(周、月、季、年)
        /// </summary>
        /// <param name="portIds"></param>
        /// <param name="factors"></param>
        /// <param name="timeStr"></param>
        private void SetHiddenData(string[] portIds, IList<IPollutant> factors, string timeStr)
        {
            if (ddlDataSource.SelectedValue == "OriData")
            {
                if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                {
                    HiddenData.Value = string.Join(";", portIds) + "|" + string.Join(";", factors.Select(p => p.PollutantCode).ToArray())
                                 + "|" + timeStr + "|" + "|" + RadioButtonList1.SelectedValue + "kqy" + "|Air";
                    HiddenChartType.Value = ChartType.SelectedValue;
                }
                else
                {
                    HiddenData.Value = string.Join(";", portIds) + "|" + string.Join(";", factors.Select(p => p.PollutantCode).ToArray())
                                 + "|" + timeStr + "|" + "|" + RadioButtonList1.SelectedValue + "|Air";
                    HiddenChartType.Value = ChartType.SelectedValue;
                }
                
            }
            if (ddlDataSource.SelectedValue == "AuditData")
            {
                if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                {
                    HiddenData.Value = string.Join(";", portIds) + "|" + string.Join(";", factors.Select(p => p.PollutantCode).ToArray())
                                 + "|" + timeStr + "|" + "|" + radlDataType.SelectedValue +"kqy" + "|Air";
                    HiddenChartType.Value = ChartType.SelectedValue;
                }
                else
                {
                    HiddenData.Value = string.Join(";", portIds) + "|" + string.Join(";", factors.Select(p => p.PollutantCode).ToArray())
                                 + "|" + timeStr + "|" + "|" + radlDataType.SelectedValue + "|Air";
                    HiddenChartType.Value = ChartType.SelectedValue;
                }
                
            }
        }

        #endregion

        #region 服务器端控件事件处理
        /// <summary>
        /// 绑定数据源（用于分页、排序）
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        protected void gridAudit_NeedDataSource(object sender, GridNeedDataSourceEventArgs e)
        {
            BindGrid("列表");
            
        }
        /// <summary>
        /// 把IQueryable转化为DataTable
        /// </summary>
        /// <param name="enumerable"></param>
        /// <returns></returns>
        public DataTable ConvertToDataTable(IEnumerable enumerable)
        {
            var dataTable = new DataTable();
            foreach (PropertyDescriptor pd in TypeDescriptor.GetProperties(typeof(ExcessiveSettingInfo)))
            {
                dataTable.Columns.Add(pd.Name);
            }
            foreach (ExcessiveSettingInfo item in enumerable)
            {
                var Row = dataTable.NewRow();

                foreach (PropertyDescriptor dp in TypeDescriptor.GetProperties(typeof(ExcessiveSettingInfo)))
                {
                    Row[dp.Name] = dp.GetValue(item);
                }
                dataTable.Rows.Add(Row);
            }
            return dataTable;
        }
        /// <summary>
        /// 数据行绑定处理
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        protected void gridAudit_ItemDataBound(object sender, GridItemEventArgs e)
        {
            GridDataItem item = e.Item as GridDataItem;
            DataRowView drv = e.Item.DataItem as DataRowView;
            if (TypeNameGroup.SelectedValue=="分因子")
            {
                string DataTypeUid = "1b6367f1-5287-4c14-b120-7a35bd176db1";
                string[] portIds = pointCbxRsm.GetPointValues(CbxRsmReturnType.ID);
                string VOC1Type = string.Empty;
                for (int i = 0; i < cbFactor.CheckedItems.Count(); i++)
                {

                    if (cbFactor.CheckedItems[i].Text.Equals("非甲烷碳氢化合物"))
                    {
                        VOC1Type += "'非甲烷碳氢化合物',";
                    }
                    else if (cbFactor.CheckedItems[i].Text.Equals("卤代烃类VOCs"))
                    {
                        VOC1Type += "'卤代烃类VOCs',";
                    }
                    else if (cbFactor.CheckedItems[i].Text.Equals("含氧（氮）类VOCs"))
                    {
                        VOC1Type += "'含氧（氮）类VOCs',";
                    }
                }
                string sql = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type]
where VOC1TypeGuid IN (SELECT RowGuid from [dbo].[DT_VOC1Type] where VOC1Type in ({0}))"
                , VOC1Type.TrimEnd(','));
                dt = g_DatabaseHelper.ExecuteDataTable(sql, "AMS_BaseDataConnection");
                string[] factorCodes = dtToArr(dt);
                //string[] factorCodes = factorCbxRsm.GetFactorValues(SmartEP.Core.Enums.CbxRsmReturnType.Code);
                IQueryable<ExcessiveSettingInfo> Excessive = m_ExcessiveSettingService.RetrieveListByPointAndFactor(ApplicationValue.Air, factorCodes, portIds, DataTypeUid);
                DataTable dtExcessive = ConvertToDataTable(Excessive);
                
                if (e.Item is GridDataItem)
                {
                    if (item["PointId"] != null)
                    {
                        GridTableCell pointCell = (GridTableCell)item["PointId"];
                        IPoint point = points.FirstOrDefault(x => x.PointID.Equals(pointCell.Text.Trim()));
                        if (points != null)
                            pointCell.Text = point.PointName;
                    }
                    if (RadioButtonList1.SelectedValue == "Min60" && ddlDataSource.SelectedValue == "OriData")
                    {
                        for (int iRow = 0; iRow < newFactors.Count; iRow++)
                        {
                            string siteTypeName = "--";//标记位名称
                            IPollutant factor = newFactors[iRow];
                            GridTableCell cell = (GridTableCell)item[factor.PollutantCode];
                            string factorStatus = drv[factor.PollutantCode + "_Status"] != DBNull.Value ? drv[factor.PollutantCode + "_Status"].ToString() : string.Empty;
                            string factorDataFlag = drv[factor.PollutantCode + "_DataFlag"] != DBNull.Value ? drv[factor.PollutantCode + "_DataFlag"].ToString() : string.Empty;
                            string factorAuditFlag = drv[factor.PollutantCode + "_AuditFlag"] != DBNull.Value ? drv[factor.PollutantCode + "_AuditFlag"].ToString() : string.Empty;
                            decimal value = 0M;
                            if (decimal.TryParse(cell.Text, out value))
                            {
                                if (factor.PollutantMeasureUnit == "μg/m³" && !LZSPfactor.Contains(factor.PollutantCode))
                                {
                                    value = DecimalExtension.GetPollutantValue(value * 1000, string.IsNullOrEmpty(factor.PollutantDecimalNum) ? 0 : Convert.ToInt32(factor.PollutantDecimalNum) - 3);
                                }
                                else
                                {
                                    value = DecimalExtension.GetPollutantValue(value, string.IsNullOrEmpty(factor.PollutantDecimalNum) ? 3 : Convert.ToInt32(factor.PollutantDecimalNum));
                                }
                                cell.Text = value.ToString("");
                        //        if (((factorStatus != "N" && factorStatus != "MF" && factorStatus != "NULL" && !string.IsNullOrEmpty(factorStatus)) || (factorDataFlag != "N" &&factorDataFlag != "MF"&& factorDataFlag != "NULL" && !string.IsNullOrEmpty(factorDataFlag)) || (factorAuditFlag != "N" && factorAuditFlag != "MF"&&factorAuditFlag != "NULL" && !string.IsNullOrEmpty(factorAuditFlag))))
                        //        {
                        //            string markContent = string.Empty;
                        //            if ((factorStatus != "N" && factorStatus != "MF" && factorStatus != "NULL" && !string.IsNullOrEmpty(factorStatus)) || (factorDataFlag != "N" && factorDataFlag != "MF" && factorDataFlag != "NULL" && !string.IsNullOrEmpty(factorDataFlag)) || (factorAuditFlag != "N" && factorAuditFlag != "MF" && factorAuditFlag != "NULL" && !string.IsNullOrEmpty(factorAuditFlag)))
                        //            {
                        //                markContent += factorStatus + factorDataFlag + factorAuditFlag + "|";
                        //                siteTypeName = factorStatus + factorDataFlag + factorAuditFlag + "(" + siteTypeEntites.Where(t => t.ItemValue.Equals(factorStatus))
                        //.Select(t => t.ItemText).FirstOrDefault() + siteTypeEntites.Where(t => t.ItemValue.Equals(factorDataFlag))
                        //.Select(t => t.ItemText).FirstOrDefault() + siteTypeEntites.Where(t => t.ItemValue.Equals(factorAuditFlag))
                        //.Select(t => t.ItemText).FirstOrDefault() + ")" + "|";//标记位名称
                        //            }
                        //            markContent = markContent.TrimEnd('|');
                        //            cell.Text = cell.Text + "(" + markContent + ")";
                        //            cell.ForeColor = System.Drawing.Color.Red;
                        //            cell.Font.Bold = true;
                        //        }
                                if (dtExcessive.DefaultView.Count > 0)
                                {
                                    if (item["PointId"] != null)
                                    {
                                        GridTableCell pointCell = (GridTableCell)item["PointId"];
                                        IPoint point = points.FirstOrDefault(x => x.PointName.Equals(pointCell.Text.Trim()));
                                        DataRow[] drExcessive = dtExcessive.Select("PointID='" + point.PointID + "' and PollutantCode='" + factor.PollutantCode + "'");
                                        if (drExcessive.Count() > 0)
                                        {
                                            cell.ToolTip = "上限：" + drExcessive[0]["excessiveUpper"] + "\n下限：" + drExcessive[0]["excessiveLow"] + "\n标记位：" + siteTypeName.TrimEnd('|');
                                        }
                                        else
                                        {
                                            cell.ToolTip = "上限：-- \n下限：--" + "\n标记位：" + siteTypeName.TrimEnd('|');
                                        }
                                    }
                                }
                                else
                                {
                                    cell.ToolTip = "上限：--\n下限：--";
                                }
                            }
                        }
                    }
                    else if (radlDataType.SelectedValue == "Hour" && ddlDataSource.SelectedValue == "AuditData")
                    {
                        for (int iRow = 0; iRow < newFactors.Count; iRow++)
                        {
                            string siteTypeName = "--";//标记位名称
                            IPollutant factor = newFactors[iRow];
                            GridTableCell cell = (GridTableCell)item[factor.PollutantCode];
                            string factorStatus = drv[factor.PollutantCode + "_Status"] != DBNull.Value ? drv[factor.PollutantCode + "_Status"].ToString() : string.Empty;
                            //string factorDataFlag = drv[factor.PollutantCode + "_DataFlag"] != DBNull.Value ? drv[factor.PollutantCode + "_DataFlag"].ToString() : string.Empty;
                            //string factorAuditFlag = drv[factor.PollutantCode + "_AuditFlag"] != DBNull.Value ? drv[factor.PollutantCode + "_AuditFlag"].ToString() : string.Empty;
                            decimal value = 0M;
                            if (decimal.TryParse(cell.Text, out value))
                            {
                                if (factor.PollutantMeasureUnit == "μg/m³" && !LZSPfactor.Contains(factor.PollutantCode))
                                {
                                    value = DecimalExtension.GetPollutantValue(value * 1000, string.IsNullOrEmpty(factor.PollutantDecimalNum) ? 0 : Convert.ToInt32(factor.PollutantDecimalNum) - 3);
                                }
                                else
                                {
                                    value = DecimalExtension.GetPollutantValue(value, string.IsNullOrEmpty(factor.PollutantDecimalNum) ? 3 : Convert.ToInt32(factor.PollutantDecimalNum));
                                }
                                cell.Text = value.ToString("");
                        //        if (((factorStatus != "N" && factorStatus != "MF" && !string.IsNullOrEmpty(factorStatus))))
                        //        {
                        //            string markContent = string.Empty;
                        //            if ((factorStatus != "N" && factorStatus != "MF" && !string.IsNullOrEmpty(factorStatus)))
                        //            {
                        //                markContent += factorStatus + "|";
                        //                siteTypeName = factorStatus + "(" + siteTypeEntites.Where(t => t.ItemValue.Equals(factorStatus))
                        //.Select(t => t.ItemText).FirstOrDefault() + ")" + "|";//标记位名称
                        //            }
                        //            markContent = markContent.TrimEnd('|');
                        //            cell.Text = cell.Text + "(" + markContent + ")";
                        //            cell.ForeColor = System.Drawing.Color.Red;
                        //            cell.Font.Bold = true;
                        //        }
                                if (dtExcessive.DefaultView.Count > 0)
                                {
                                    if (item["PointId"] != null)
                                    {
                                        GridTableCell pointCell = (GridTableCell)item["PointId"];
                                        IPoint point = points.FirstOrDefault(x => x.PointName.Equals(pointCell.Text.Trim()));
                                        DataRow[] drExcessive = dtExcessive.Select("PointID='" + point.PointID + "' and PollutantCode='" + factor.PollutantCode + "'");
                                        if (drExcessive.Count() > 0)
                                        {
                                            cell.ToolTip = "上限：" + drExcessive[0]["excessiveUpper"] + "\n下限：" + drExcessive[0]["excessiveLow"] + "\n标记位：" + siteTypeName.TrimEnd('|');
                                        }
                                        else
                                        {
                                            cell.ToolTip = "上限：-- \n下限：--" + "\n标记位：" + siteTypeName.TrimEnd('|');
                                        }
                                    }
                                }
                                else
                                {
                                    cell.ToolTip = "上限：--\n下限：--";
                                }
                            }
                        }
                    }
                    else
                    {
                        for (int iRow = 0; iRow < newFactors.Count; iRow++)
                        {
                            IPollutant factor = newFactors[iRow];
                            GridTableCell cell = (GridTableCell)item[factor.PollutantCode];
                            decimal value = 0M;
                            if (decimal.TryParse(cell.Text, out value))
                            {
                                if (factor.PollutantMeasureUnit == "μg/m³" && !LZSPfactor.Contains(factor.PollutantCode))
                                {
                                    value = DecimalExtension.GetPollutantValue(value * 1000, string.IsNullOrEmpty(factor.PollutantDecimalNum) ? 0 : Convert.ToInt32(factor.PollutantDecimalNum) - 3);
                                }
                                else
                                {
                                    value = DecimalExtension.GetPollutantValue(value, string.IsNullOrEmpty(factor.PollutantDecimalNum) ? 3 : Convert.ToInt32(factor.PollutantDecimalNum));
                                }

                                //value = DecimalExtension.GetPollutantValue(value, string.IsNullOrEmpty(factor.PollutantDecimalNum) ? 3 : Convert.ToInt32(factor.PollutantDecimalNum));
                                cell.Text = value.ToString("");

                                if (dtExcessive.DefaultView.Count > 0)
                                {
                                    if (item["PointId"] != null)
                                    {
                                        GridTableCell pointCell = (GridTableCell)item["PointId"];
                                        IPoint point = points.FirstOrDefault(x => x.PointName.Equals(pointCell.Text.Trim()));
                                        DataRow[] drExcessive = dtExcessive.Select("PointID='" + point.PointID + "' and PollutantCode='" + factor.PollutantCode + "'");
                                        if (drExcessive.Count() > 0)
                                        {
                                            cell.ToolTip = "上限：" + drExcessive[0]["excessiveUpper"] + "\n下限：" + drExcessive[0]["excessiveLow"];
                                        }
                                        else
                                        {
                                            cell.ToolTip = "上限：--\n下限：--";
                                        }
                                    }
                                }
                            }
                        }
                    }

                }
            }
            else
            {
                if (e.Item is GridDataItem)
                {
                    if (item["PointId"] != null)
                    {
                        GridTableCell pointCell = (GridTableCell)item["PointId"];
                        IPoint point = points.FirstOrDefault(x => x.PointID.Equals(pointCell.Text.Trim()));
                        if (points != null)
                            pointCell.Text = point.PointName;
                    }
                }
            }
            
        }

        /// <summary>
        /// 查找按钮事件
        /// </summary>
        protected void btnSearch_Click(object sender, ImageClickEventArgs e)
        {
            gridAudit.CurrentPageIndex = 0;
            if (dtms == Convert.ToDateTime(dtpEnd.SelectedDate.Value.ToString("yyyy-MM-dd HH:00")))
            {
                dtpEnd.SelectedDate = Convert.ToDateTime(DateTime.Now.ToString("yyyy-MM-dd HH:00"));
            }
            gridAudit.Rebind();
            if (tabStrip.SelectedTab.Text == "图表")
            {
                //BindGrid("图表");
                FirstLoadChart.Value = "1";
                FirstLoadCharts.Value = "1";
                BindChart();
            }
            else if (tabStrip.SelectedTab.Text == "饼图")
            {
                //BindGrid("饼图");
                FirstLoadChart.Value = "1";
                FirstLoadCharts.Value = "1";

                BindCharts();
            }
        }


        /// <summary>
        /// ToolBar事件
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        protected void gridRTB_ButtonClick(object sender, RadToolBarEventArgs e)
        {
            try 
            {
                List<string> listyzName = new List<string>();
                List<string> listyzCode = new List<string>();
                yzfactors = factorCbxRsm1.GetFactors();
                foreach (IPollutant factor in yzfactors)
                {
                    listyzCode.Add(factor.PollutantCode);
                    listyzName.Add(factor.PollutantName);
                }
                string[] yzfactorCodes = listyzCode.ToArray();
                string[] yzfactorNames = listyzName.ToArray();


                List<string> listName = new List<string>();
                List<string> listTypeName = new List<string>();
                List<string> cblistTypeName = new List<string>();
                string VOC1Type = string.Empty;
                for (int i = 0; i < cbFactor.CheckedItems.Count(); i++)
                {
                    listName.Add(cbFactor.CheckedItems[i].Text);
                    cblistTypeName.Add(cbFactor.CheckedItems[i].Text);
                    if (cbFactor.CheckedItems[i].Text.Equals("非甲烷碳氢化合物"))
                    {
                        VOC1Type += "'非甲烷碳氢化合物',";
                        listTypeName.Add("非甲烷碳氢化合物");
                    }
                    else if (cbFactor.CheckedItems[i].Text.Equals("卤代烃类VOCs"))
                    {
                        VOC1Type += "'卤代烃类VOCs',";
                        listTypeName.Add("卤代烃类VOCs");
                    }
                    else if (cbFactor.CheckedItems[i].Text.Equals("含氧（氮）类VOCs"))
                    {
                        VOC1Type += "'含氧（氮）类VOCs',";
                        listTypeName.Add("含氧（氮）类VOCs");
                    }
                }
                //二级类获取选中名称
                List<string> listTbTypeName = new List<string>();
                for (int i = 0; i < tbFactor.CheckedItems.Count(); i++)
                {
                    listTbTypeName.Add(tbFactor.CheckedItems[i].Text);

                }
                string[] tbfactorNames = listTbTypeName.ToArray();

                IPollutant iiFactorCode = m_AirPollutantService.GetPollutantInfo("a05024");
                int Ode = int.TryParse(iiFactorCode.PollutantDecimalNum, out Ode) ? Ode : 3;
                int Ade = Ode;
                string[] typeName = listTypeName.ToArray();
                //给饼图传值：选中的大类别
                string typeNames = string.Empty;
                foreach (string TP in typeName)
                {
                    typeNames += TP + ",";
                }
                //隐藏域传值
                hdTypes.Value = typeNames;
                string[] factorNames = listName.ToArray();
                if (VOC1Type == "")
                {
                    string sql = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] order by VOC1TypeGuid");
                    dt = g_DatabaseHelper.ExecuteDataTable(sql, "AMS_BaseDataConnection");
                }
                else
                {
                    string sql = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type]
                                        where VOC1TypeGuid IN (SELECT RowGuid from [dbo].[DT_VOC1Type] where VOC1Type in ({0})) order by VOC1TypeGuid"
                , VOC1Type.TrimEnd(','));
                    dt = g_DatabaseHelper.ExecuteDataTable(sql, "AMS_BaseDataConnection");
                }

                string[] factorCodes = dtToArr(dt);

                string allSqls = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] order by VOC1TypeGuid");
                DataTable alldt = g_DatabaseHelper.ExecuteDataTable(allSqls, "AMS_BaseDataConnection");
                string[] allCode = dtToArr(alldt);

                string factorCodel = string.Empty;
                //分小类
                foreach (string factorcode in factorCodes)
                {
                    factorCodel += "'" + factorcode + "',";
                }
                string sqll = string.Format(@"select distinct VOC2Type,voc2.OrderByNum from [dbo].[DT_VOC2Type] as voc2
                                        join [dbo].[DT_VOC3Type] as voc3 
                                        on voc2.RowGuid=voc3.VOC2TypeGuid 
                                        where voc3.PollutantCode in ({0}) order by voc2.OrderByNum DESC", factorCodel.TrimEnd(','));
                DataTable dtl = g_DatabaseHelper.ExecuteDataTable(sqll, "AMS_BaseDataConnection");
                dtl.Columns.Remove("OrderByNum");
                string[] TypeName = dtToArr(dtl);


                factors = m_AirPollutantService.GetDefaultFactors(factorCodes);

                newFactors = m_AirPollutantService.GetDefaultFactors(yzfactorCodes);

                DateTime dtBegion = DateTime.Now;
                DateTime dtEnd = DateTime.Now;
                points = pointCbxRsm.GetPoints();
                portIds = pointCbxRsm.GetPointValues(SmartEP.Core.Enums.CbxRsmReturnType.ID);

                string type = "列表";
                //给饼图传值：站点
                string pointIds = string.Empty;
                foreach (string PI in portIds)
                {
                    pointIds += PI + ",";
                }
                DataTable dtInstrumen = new DataTable();

                //生成RadGrid的绑定列
                dvStatistical = null;

                //每页显示数据个数            
                int pageSize1 = int.MaxValue;
                //当前页的序号
                int pageNo1 = 0;
                var auditData1 = new DataView();

                //每页显示数据个数            
                int pageSize = int.MaxValue; ;
                //当前页的序号
                int pageNo = 0;

                var auditData = new DataView();
                //数据总行数
                int recordTotal = 0;
                string orderBy = "PointId asc,DateTime desc";

                if (portIds != null)
                {
                    #region 分因子
                    if (TypeNameGroup.SelectedValue=="分因子")
                    {

                        if (ddlDataSource.SelectedValue == "AuditData")
                        {
                            if (radlDataType.SelectedValue == "Hour")
                            {
                                string orderBy1 = "PointId asc,Tstamp desc";
                                if (TimeSort.SelectedValue == "时间升序")
                                    orderBy1 = "PointId asc,Tstamp asc";
                                dtBegion = hourBegin.SelectedDate.Value;
                                dtEnd = hourEnd.SelectedDate.Value.AddDays(1).AddSeconds(-1);
                                if (type == "列表")
                                {
                                    if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                    {
                                        auditData = m_HourData.GetVOCsKQYHourDataPagerNew(portIds, yzfactorCodes, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//小时类型按 小时数据查询
                                    }
                                    else
                                    {
                                        auditData = m_HourData.GetHourDataPagerNew(portIds, yzfactorCodes, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//小时类型按 小时数据查询
                                    }
                                }
                            }
                            else if (radlDataType.SelectedValue == "Day")
                            {
                                string orderBy1 = "PointId asc,DateTime desc";
                                if (TimeSort.SelectedValue == "时间升序")
                                    orderBy1 = "PointId asc,DateTime asc";
                                dtBegion = dayBegin.SelectedDate.Value;
                                dtEnd = dayEnd.SelectedDate.Value;
                                if (type == "列表")
                                {
                                    auditData = m_DayData.GetDayData(portIds, yzfactorCodes, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//日类型按 日数据查询
                                    
                                }
                            }
                            //月数据
                            else if (radlDataType.SelectedValue == "Month")
                            {
                                string orderBy1 = "PointId asc,Year desc,MonthOfYear desc";
                                if (TimeSort.SelectedValue == "时间升序")
                                    orderBy1 = "PointId asc,Year asc,MonthOfYear asc";
                                int monthB = monthBegin.SelectedDate.Value.Year;
                                int monthE = monthEnd.SelectedDate.Value.Year;
                                int monthF = monthBegin.SelectedDate.Value.Month;
                                int monthT = monthEnd.SelectedDate.Value.Month;

                                DateTime mtBegin = monthBegin.SelectedDate.Value;
                                //本月第一天时间 
                                dtBegion = mtBegin.AddDays(-(mtBegin.Day) + 1);

                                DateTime mtEnd = monthEnd.SelectedDate.Value;
                                //将本月月数+1 
                                DateTime dt2 = mtEnd.AddMonths(1);
                                //本月最后一天时间 
                                dtEnd = dt2.AddDays(-(mtEnd.Day)).AddDays(1).AddSeconds(-1);
                                if (type == "列表")
                                {
                                    auditData = m_MonthData.GetMonthDataPager(portIds, yzfactorCodes, monthB, monthF, monthE, monthT, pageSize, pageNo, out recordTotal, orderBy1); //月类型 按月数据查询
                                }
                            }

                            //周数据
                            else if (radlDataType.SelectedValue == "Week")
                            {
                                string orderBy1 = "PointId asc,Year desc,WeekOfYear desc";
                                if (TimeSort.SelectedValue == "时间升序")
                                    orderBy1 = "PointId asc,Year asc,WeekOfYear asc";
                                int weekB = weekBegin.SelectedDate.Value.Year;
                                int weekE = weekEnd.SelectedDate.Value.Year;
                                int newyear = DateTime.ParseExact(weekFrom.SelectedValue, "yyyy-MM-dd", null).AddDays(6).Year;
                                int nyear = DateTime.ParseExact(weekTo.SelectedValue, "yyyy-MM-dd", null).Year;
                                int weekF = 0;
                                int weekT = 0;
                                if (newyear > weekB)
                                {
                                    weekF = ChinaDate.WeekOfYear(DateTime.ParseExact(weekFrom.SelectedValue, "yyyy-MM-dd", null));
                                }
                                else
                                    weekF = ChinaDate.WeekOfYear(DateTime.ParseExact(weekFrom.SelectedValue, "yyyy-MM-dd", null).AddDays(6));

                                if (weekE > nyear)
                                {
                                    weekT = ChinaDate.WeekOfYear(DateTime.ParseExact(weekTo.SelectedValue, "yyyy-MM-dd", null).AddDays(6));
                                }
                                else
                                {
                                    weekT = ChinaDate.WeekOfYear(DateTime.ParseExact(weekTo.SelectedValue, "yyyy-MM-dd", null));
                                }

                                //dtBegion = Convert.ToDateTime(weekFrom.SelectedValue);
                                //dtEnd = DateTime.ParseExact(weekTo.SelectedValue, "yyyy-MM-dd", null).AddDays(6).AddDays(1).AddSeconds(-1);
                                if (type == "列表")
                                {
                                    auditData = m_WeekData.GetWeekDataPager(portIds, yzfactorCodes, weekB, weekF, weekE, weekT, pageSize, pageNo, out recordTotal, orderBy1); //周类型 按周数据查询
                                }
                            }
                            else if (radlDataType.SelectedValue == "Season")
                            {
                                string orderBy1 = "PointId asc,Year desc,SeasonOfYear desc";
                                if (TimeSort.SelectedValue == "时间升序")
                                    orderBy1 = "PointId asc,Year asc,SeasonOfYear asc";
                                int seasonB = seasonBegin.SelectedDate.Value.Year;
                                int seasonE = seasonEnd.SelectedDate.Value.Year;
                                int seasonF = Convert.ToInt32(seasonFrom.SelectedValue);
                                int seasonT = Convert.ToInt32(seasonTo.SelectedValue);
                                //dtBegion = Convert.ToDateTime(weekFrom.SelectedValue);
                                //dtEnd = DateTime.ParseExact(weekTo.SelectedValue, "yyyy-MM-dd", null).AddDays(6).AddDays(1).AddSeconds(-1);
                                if (type == "列表")
                                {
                                    auditData = m_SeasonData.GetSeasonDataPager(portIds, yzfactorCodes, seasonB, seasonF, seasonE, seasonT, pageSize, pageNo, out recordTotal, orderBy1); //季类型 按季数据查询
                                }
                            }
                            else if (radlDataType.SelectedValue == "Year")
                            {
                                string orderBy1 = "PointId asc,Year desc";
                                if (TimeSort.SelectedValue == "时间升序")
                                    orderBy1 = "PointId asc,Year asc";
                                int yearB = yearBegin.SelectedDate.Value.Year;
                                int yearE = yearEnd.SelectedDate.Value.Year;
                                //dtBegion = Convert.ToDateTime(weekFrom.SelectedValue);
                                //dtEnd = DateTime.ParseExact(weekTo.SelectedValue, "yyyy-MM-dd", null).AddDays(6).AddDays(1).AddSeconds(-1);
                                if (type == "列表")
                                {
                                    auditData = m_YearData.GetYearDataPager(portIds, yzfactorCodes, yearB, yearE, pageSize, pageNo, out recordTotal, orderBy1); //年类型 按年数据查询
                                }
                            }
                        }
                        else
                        {
                            //饼图日期类型传值
                            hdTimeType.Value = RadioButtonList1.SelectedValue;
                            if (RadioButtonList1.SelectedValue == "Min1")
                            {
                                string orderBy1 = "PointId asc,Tstamp desc";
                                if (TimeSort.SelectedValue == "时间升序")
                                    orderBy1 = "PointId asc,Tstamp asc";
                                dtBegion = dtpBegin.SelectedDate.Value;
                                dtEnd = dtpEnd.SelectedDate.Value;
                                if (type == "列表")
                                {
                                    auditData = m_Min1Data.GetDataPager(portIds, yzfactorCodes, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//一分钟类型按 一分钟数据查询
                                    
                                }
                            }
                            else if (RadioButtonList1.SelectedValue == "Min5")
                            {
                                string orderBy1 = "PointId asc,Tstamp desc";
                                if (TimeSort.SelectedValue == "时间升序")
                                    orderBy1 = "PointId asc,Tstamp asc";
                                dtBegion = dtpBegin.SelectedDate.Value;
                                dtEnd = dtpEnd.SelectedDate.Value;
                                if (type == "列表")
                                {
                                    auditData = m_Min5Data.GetDataPager(portIds, yzfactorCodes, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//五分钟类型按 小时数据查询
                                    
                                }
                            }
                            else if (RadioButtonList1.SelectedValue == "Min60")
                            {
                                string orderBy1 = "PointId asc,Tstamp desc";
                                if (TimeSort.SelectedValue == "时间升序")
                                    orderBy1 = "PointId asc,Tstamp asc";
                                dtBegion = dtpBegin.SelectedDate.Value;
                                dtEnd = dtpEnd.SelectedDate.Value;
                                if (type == "列表")
                                {
                                    if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                    {
                                        auditData = m_Min60Data.GetVOCsKQYDataPager(portIds, yzfactorCodes, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//60分钟类型按 60分钟数据查询

                                    }
                                    else
                                    {
                                        auditData = m_Min60Data.GetDataPager(portIds, yzfactorCodes, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//60分钟类型按 60分钟数据查询
                                    }
                                }
                            }
                            else if (RadioButtonList1.SelectedValue == "OriDay")
                            {
                                string orderBy1 = "PointId asc,DateTime desc";
                                if (TimeSort.SelectedValue == "时间升序")
                                    orderBy1 = "PointId asc,DateTime asc";
                                dtBegion = dtpDayBegin.SelectedDate.Value;
                                dtEnd = dtpDayEnd.SelectedDate.Value;
                                if (type == "列表")
                                {
                                    auditData = m_DayOriData.GetDataPagers(portIds, yzfactorCodes, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//原始日数据类型按 原始日数据查询
                                    
                                }
                            }
                            else if (RadioButtonList1.SelectedValue == "OriMonth")
                            {
                                string orderBy1 = "PointId asc,Year desc,MonthOfYear desc";
                                if (TimeSort.SelectedValue == "时间升序")
                                    orderBy1 = "PointId asc,Year asc,MonthOfYear asc";
                                dtBegion = dtpMonthBegin.SelectedDate.Value;
                                dtEnd = dtpMonthEnd.SelectedDate.Value;
                                if (type == "列表")
                                {
                                    auditData = m_MonthOriData.GetOriDataPager(portIds, yzfactorCodes, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//原始月数据类型按 原始月数据查询
                                    
                                }
                            }
                        }
                        if (type == "列表")
                        {
                            dt = auditData.ToTable();

                            foreach (string factorCode in yzfactorCodes)
                            {
                                int DecimalNum = 3;
                                if (factorCode != "a20995" && factorCode != "a20996" && factorCode != "a20997" && factorCode != "a20998" && factorCode != "a20999")
                                {
                                    IPollutant iFactorCode = m_AirPollutantService.GetPollutantInfo(factorCode);
                                    if (iFactorCode != null)
                                    {
                                        DecimalNum = int.TryParse(iFactorCode.PollutantDecimalNum, out DecimalNum) ? DecimalNum : 3;
                                    }
                                }
                                for (int i = 0; i < dt.Rows.Count; i++)
                                {
                                    if (dt.Rows[i][factorCode] != DBNull.Value)
                                    {
                                        if (factorCode == "a20029" || factorCode == "a20068")
                                        {
                                            //value 需要进行小数位处理的数据 类型Decimal
                                            dt.Rows[i][factorCode] = DecimalExtension.GetPollutantValue(Convert.ToDecimal(dt.Rows[i][factorCode]) / 1000, DecimalNum);
                                        }
                                        else if (factorCode == "a34004")// PM2.5 
                                        {
                                            //value 需要进行小数位处理的数据 类型Decimal
                                            dt.Rows[i][factorCode] = DecimalExtension.GetPollutantValue(Convert.ToDecimal(dt.Rows[i][factorCode]) * 1000, 0);
                                        }
                                        else
                                        {
                                            //value 需要进行小数位处理的数据 类型Decimal
                                            dt.Rows[i][factorCode] = DecimalExtension.GetPollutantValue(Convert.ToDecimal(dt.Rows[i][factorCode]), DecimalNum);
                                        }
                                    }
                                }

                            }
                            if (dt != null)
                            {
                                bool a = dt.Columns.Contains("Tstamp");
                                if (a)
                                {
                                    if (dt.Columns.Count > 2)
                                    {
                                        dt.Columns["Tstamp"].SetOrdinal(1);
                                    }
                                }
                                bool b = dt.Columns.Contains("DateTime");
                                if (b)
                                {
                                    if (dt.Columns.Count > 2)
                                    {
                                        dt.Columns["DateTime"].SetOrdinal(1);
                                    }
                                }
                            }
                            DataTable dts = UpdateExportColumnName(dt.DefaultView);
                            ExcelHelper.DataTableToExcel(dts, "TVOCs", "TVOCs数据", this.Page);
                        }
                    }
                    #endregion
                    #region 分小类
                    else if (TypeNameGroup.SelectedValue == "二级类")
                    {
                        #region 审核
                        if (ddlDataSource.SelectedValue == "AuditData")
                        {
                            #region 小时数据
                            if (radlDataType.SelectedValue == "Hour")
                            {
                                string orderBy1 = "PointId asc,Tstamp desc";
                                if (TimeSort.SelectedValue == "时间升序")
                                    orderBy1 = "PointId asc,Tstamp asc";
                                dtBegion = hourBegin.SelectedDate.Value;
                                dtEnd = hourEnd.SelectedDate.Value.AddDays(1).AddSeconds(-1);
                                dt = new DataTable();
                                dt.Columns.Add("PointId", typeof(System.String));//污染物名称 参数
                                foreach (string colName in tbfactorNames)
                                {
                                    dt.Columns.Add(colName, typeof(System.String));//污染物值
                                }
                                dt.Columns.Add("Tstamp", typeof(System.DateTime));//时间戳
                                this.ViewState.Add("dt", dt);

                                dtIcon = new DataTable();
                                dtIcon.Columns.Add("PointId", typeof(System.String));//污染物名称 参数
                                foreach (string colName in tbfactorNames)
                                {
                                    dtIcon.Columns.Add(colName, typeof(System.Decimal));//污染物值
                                }
                                dtIcon.Columns.Add("Tstamp", typeof(System.DateTime));//时间戳
                                this.ViewState.Add("dtIcon", dtIcon);
                                string factorType = "";
                                if (tbfactorNames.Contains("高碳烷烃C6-C12"))
                                {
                                    factorType = "06a02408-6eab-4188-b442-86dd8e97654c";
                                    string sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表")
                                    {
                                        if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                        {
                                            auditData = m_HourData.GetVOCsKQYHourDataPagerNew(portIds, factorsWan, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//小时类型按 小时数据查询
                                        }
                                        else
                                        {
                                            auditData = m_HourData.GetHourDataPagerNew(portIds, factorsWan, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//小时类型按 小时数据查询
                                        }
                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetDataTable("高碳烷烃C6-C12", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (tbfactorNames.Contains("炔烃"))
                                {
                                    factorType = "5b1918b9-7c92-477a-8e23-64cbae6477f6";
                                    string sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表")
                                    {
                                        if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                        {
                                            auditData = m_HourData.GetVOCsKQYHourDataPagerNew(portIds, factorsWan, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//小时类型按 小时数据查询
                                        }
                                        else
                                        {
                                            auditData = m_HourData.GetHourDataPagerNew(portIds, factorsWan, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//小时类型按 小时数据查询
                                        }
                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetDataTable("炔烃", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (tbfactorNames.Contains("高碳烯烃C6-C12"))
                                {
                                    factorType = "7bc5f3d8-7cb3-4273-a646-1ed7df60cdd8";
                                    string sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表")
                                    {
                                        if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                        {
                                            auditData = m_HourData.GetVOCsKQYHourDataPagerNew(portIds, factorsWan, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//小时类型按 小时数据查询
                                        }
                                        else
                                        {
                                            auditData = m_HourData.GetHourDataPagerNew(portIds, factorsWan, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//小时类型按 小时数据查询
                                        }
                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetDataTable("高碳烯烃C6-C12", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (tbfactorNames.Contains("低碳烯烃C2-C5"))
                                {
                                    factorType = "a41db3c8-0fb4-4b0e-b1b0-e5950f04eff6";
                                    string sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表")
                                    {
                                        if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                        {
                                            auditData = m_HourData.GetVOCsKQYHourDataPagerNew(portIds, factorsWan, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//小时类型按 小时数据查询
                                        }
                                        else
                                        {
                                            auditData = m_HourData.GetHourDataPagerNew(portIds, factorsWan, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//小时类型按 小时数据查询
                                        }
                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetDataTable("低碳烯烃C2-C5", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (tbfactorNames.Contains("苯系物"))
                                {
                                    factorType = "e9607fce-75dc-4134-9a8d-af2a1eb4a7bf";
                                    string sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表")
                                    {
                                        if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                        {
                                            auditData = m_HourData.GetVOCsKQYHourDataPagerNew(portIds, factorsWan, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//小时类型按 小时数据查询
                                        }
                                        else
                                        {
                                            auditData = m_HourData.GetHourDataPagerNew(portIds, factorsWan, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//小时类型按 小时数据查询
                                        }
                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetDataTable("苯系物", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (tbfactorNames.Contains("低碳烷烃C2-C5"))
                                {
                                    factorType = "fb1fc34b-770f-4141-b75a-015919725e0b";
                                    string sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表")
                                    {
                                        if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                        {
                                            auditData = m_HourData.GetVOCsKQYHourDataPagerNew(portIds, factorsWan, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//小时类型按 小时数据查询
                                        }
                                        else
                                        {
                                            auditData = m_HourData.GetHourDataPagerNew(portIds, factorsWan, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//小时类型按 小时数据查询
                                        }
                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetDataTable("低碳烷烃C2-C5", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (tbfactorNames.Contains("氟利昂"))
                                {
                                    factorType = "053c74fd-d1ae-4341-b258-1788079970bd";

                                    string sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表")
                                    {
                                        if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                        {
                                            auditData = m_HourData.GetVOCsKQYHourDataPagerNew(portIds, factorsWan, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//小时类型按 小时数据查询
                                        }
                                        else
                                        {
                                            auditData = m_HourData.GetHourDataPagerNew(portIds, factorsWan, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//小时类型按 小时数据查询
                                        }
                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetDataTable("氟利昂", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }

                                }

                                if (tbfactorNames.Contains("卤代芳香烃"))
                                {
                                    factorType = "1eaac416-0d69-48b9-aca1-9ff7904907bb";
                                    string sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表")
                                    {
                                        if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                        {
                                            auditData = m_HourData.GetVOCsKQYHourDataPagerNew(portIds, factorsWan, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//小时类型按 小时数据查询
                                        }
                                        else
                                        {
                                            auditData = m_HourData.GetHourDataPagerNew(portIds, factorsWan, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//小时类型按 小时数据查询
                                        }
                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetDataTable("卤代芳香烃", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (tbfactorNames.Contains("卤代烯烃"))
                                {
                                    factorType = "21de4143-2c28-4256-b71e-6cb5ce63e417";
                                    string sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表")
                                    {
                                        if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                        {
                                            auditData = m_HourData.GetVOCsKQYHourDataPagerNew(portIds, factorsWan, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//小时类型按 小时数据查询
                                        }
                                        else
                                        {
                                            auditData = m_HourData.GetHourDataPagerNew(portIds, factorsWan, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//小时类型按 小时数据查询
                                        }
                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetDataTable("卤代烯烃", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (tbfactorNames.Contains("卤代烷烃"))
                                {
                                    factorType = "a0bad5d7-9eec-4fa4-9c36-828aad78041d";
                                    string sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表")
                                    {
                                        if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                        {
                                            auditData = m_HourData.GetVOCsKQYHourDataPagerNew(portIds, factorsWan, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//小时类型按 小时数据查询
                                        }
                                        else
                                        {
                                            auditData = m_HourData.GetHourDataPagerNew(portIds, factorsWan, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//小时类型按 小时数据查询
                                        }
                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetDataTable("卤代烷烃", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (tbfactorNames.Contains("含氮有机物"))
                                {
                                    factorType = "3bbe4b30-53e4-48a8-a884-c3b38a03b705";
                                    string sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表")
                                    {
                                        if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                        {
                                            auditData = m_HourData.GetVOCsKQYHourDataPagerNew(portIds, factorsWan, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//小时类型按 小时数据查询
                                        }
                                        else
                                        {
                                            auditData = m_HourData.GetHourDataPagerNew(portIds, factorsWan, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//小时类型按 小时数据查询
                                        }
                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetDataTable("含氮有机物", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }

                                if (tbfactorNames.Contains("醛类有机物"))
                                {
                                    factorType = "8198b6fc-7a77-427d-8e3e-9c9228ac168c";
                                    string sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表")
                                    {
                                        if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                        {
                                            auditData = m_HourData.GetVOCsKQYHourDataPagerNew(portIds, factorsWan, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//小时类型按 小时数据查询
                                        }
                                        else
                                        {
                                            auditData = m_HourData.GetHourDataPagerNew(portIds, factorsWan, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//小时类型按 小时数据查询
                                        }
                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetDataTable("醛类有机物", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (tbfactorNames.Contains("酮类有机物"))
                                {
                                    factorType = "8c9ce5f3-4716-485e-95e1-72608b2843ce";
                                    string sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表")
                                    {
                                        if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                        {
                                            auditData = m_HourData.GetVOCsKQYHourDataPagerNew(portIds, factorsWan, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//小时类型按 小时数据查询
                                        }
                                        else
                                        {
                                            auditData = m_HourData.GetHourDataPagerNew(portIds, factorsWan, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//小时类型按 小时数据查询
                                        }
                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetDataTable("酮类有机物", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }


                                if (tbfactorNames.Contains("醚类有机物"))
                                {
                                    factorType = "e5f83fd9-0b77-4d1b-935f-1826fddcc343";
                                    string sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表")
                                    {
                                        if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                        {
                                            auditData = m_HourData.GetVOCsKQYHourDataPagerNew(portIds, factorsWan, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//小时类型按 小时数据查询
                                        }
                                        else
                                        {
                                            auditData = m_HourData.GetHourDataPagerNew(portIds, factorsWan, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//小时类型按 小时数据查询
                                        }
                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetDataTable("醚类有机物", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }


                                if (type == "列表")
                                {
                                    dtInstrumen = (DataTable)this.ViewState["dt"];
                                    if (dtInstrumen != null)
                                    {
                                        bool a = dtInstrumen.Columns.Contains("Tstamp");
                                        if (a)
                                        {
                                            if (dtInstrumen.Columns.Count > 2)
                                            {
                                                dtInstrumen.Columns["Tstamp"].SetOrdinal(1);
                                            }
                                        }
                                        bool b = dtInstrumen.Columns.Contains("DateTime");
                                        if (b)
                                        {
                                            if (dtInstrumen.Columns.Count > 2)
                                            {
                                                dtInstrumen.Columns["DateTime"].SetOrdinal(1);
                                            }
                                        }
                                    }
                                    if (dtInstrumen.Columns.Contains("OzoneValue"))
                                    {
                                        for (int i = 0; i < dtInstrumen.Rows.Count; i++) //臭氧的数据要乘以1000
                                        {
                                            decimal value = 0M;

                                            if (decimal.TryParse(dtInstrumen.Rows[i]["OzoneValue"].ToString(), out value))
                                            {
                                                dtInstrumen.Rows[i]["OzoneValue"] = DecimalExtension.GetPollutantValue(value * 1000, 0);
                                            }
                                        }
                                    }
                                }
                            }
                            #endregion
                            #region 日数据
                            else if (radlDataType.SelectedValue == "Day")
                            {
                                string orderBy1 = "PointId asc,DateTime desc";
                                if (TimeSort.SelectedValue == "时间升序")
                                    orderBy1 = "PointId asc,DateTime asc";
                                dtBegion = dayBegin.SelectedDate.Value;
                                dtEnd = dayEnd.SelectedDate.Value;
                                dt = new DataTable();
                                dt.Columns.Add("PointId", typeof(System.String));//污染物名称 参数
                                foreach (string colName in tbfactorNames)
                                {
                                    dt.Columns.Add(colName, typeof(System.String));//污染物值
                                }
                                dt.Columns.Add("Tstamp", typeof(System.DateTime));//时间戳
                                this.ViewState.Add("dt", dt);

                                dtIcon = new DataTable();
                                dtIcon.Columns.Add("PointId", typeof(System.String));//污染物名称 参数
                                foreach (string colName in tbfactorNames)
                                {
                                    dtIcon.Columns.Add(colName, typeof(System.Decimal));//污染物值
                                }
                                dtIcon.Columns.Add("Tstamp", typeof(System.DateTime));//时间戳
                                this.ViewState.Add("dtIcon", dtIcon);
                                string factorType = "";
                                if (tbfactorNames.Contains("高碳烷烃C6-C12"))
                                {
                                    factorType = "06a02408-6eab-4188-b442-86dd8e97654c";
                                    string sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表")
                                    {
                                        auditData = m_DayData.GetDayData(portIds, factorsWan, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//日类型按 日数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetDataTable("高碳烷烃C6-C12", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (tbfactorNames.Contains("炔烃"))
                                {
                                    factorType = "5b1918b9-7c92-477a-8e23-64cbae6477f6";
                                    string sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表")
                                    {
                                        auditData = m_DayData.GetDayData(portIds, factorsWan, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//日类型按 日数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetDataTable("炔烃", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (tbfactorNames.Contains("高碳烯烃C6-C12"))
                                {
                                    factorType = "7bc5f3d8-7cb3-4273-a646-1ed7df60cdd8";
                                    string sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表")
                                    {
                                        auditData = m_DayData.GetDayData(portIds, factorsWan, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//日类型按 日数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetDataTable("高碳烯烃C6-C12", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (tbfactorNames.Contains("低碳烯烃C2-C5"))
                                {
                                    factorType = "a41db3c8-0fb4-4b0e-b1b0-e5950f04eff6";
                                    string sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表")
                                    {
                                        auditData = m_DayData.GetDayData(portIds, factorsWan, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//日类型按 日数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetDataTable("低碳烯烃C2-C5", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (tbfactorNames.Contains("苯系物"))
                                {
                                    factorType = "e9607fce-75dc-4134-9a8d-af2a1eb4a7bf";
                                    string sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表")
                                    {
                                        auditData = m_DayData.GetDayData(portIds, factorsWan, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//日类型按 日数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetDataTable("苯系物", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (tbfactorNames.Contains("低碳烷烃C2-C5"))
                                {
                                    factorType = "fb1fc34b-770f-4141-b75a-015919725e0b";
                                    string sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表")
                                    {
                                        auditData = m_DayData.GetDayData(portIds, factorsWan, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//日类型按 日数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetDataTable("低碳烷烃C2-C5", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (tbfactorNames.Contains("氟利昂"))
                                {
                                    factorType = "053c74fd-d1ae-4341-b258-1788079970bd";

                                    string sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表")
                                    {
                                        auditData = m_DayData.GetDayData(portIds, factorsWan, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//日类型按 日数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetDataTable("氟利昂", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }

                                }

                                if (tbfactorNames.Contains("卤代芳香烃"))
                                {
                                    factorType = "1eaac416-0d69-48b9-aca1-9ff7904907bb";
                                    string sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表")
                                    {
                                        auditData = m_DayData.GetDayData(portIds, factorsWan, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//日类型按 日数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetDataTable("卤代芳香烃", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (tbfactorNames.Contains("卤代烯烃"))
                                {
                                    factorType = "21de4143-2c28-4256-b71e-6cb5ce63e417";
                                    string sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表")
                                    {
                                        auditData = m_DayData.GetDayData(portIds, factorsWan, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//日类型按 日数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetDataTable("卤代烯烃", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (tbfactorNames.Contains("卤代烷烃"))
                                {
                                    factorType = "a0bad5d7-9eec-4fa4-9c36-828aad78041d";
                                    string sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表")
                                    {
                                        auditData = m_DayData.GetDayData(portIds, factorsWan, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//日类型按 日数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetDataTable("卤代烷烃", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (tbfactorNames.Contains("含氮有机物"))
                                {
                                    factorType = "3bbe4b30-53e4-48a8-a884-c3b38a03b705";
                                    string sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表")
                                    {
                                        auditData = m_DayData.GetDayData(portIds, factorsWan, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//日类型按 日数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetDataTable("含氮有机物", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }

                                if (tbfactorNames.Contains("醛类有机物"))
                                {
                                    factorType = "8198b6fc-7a77-427d-8e3e-9c9228ac168c";
                                    string sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表")
                                    {
                                        auditData = m_DayData.GetDayData(portIds, factorsWan, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//日类型按 日数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetDataTable("醛类有机物", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (tbfactorNames.Contains("酮类有机物"))
                                {
                                    factorType = "8c9ce5f3-4716-485e-95e1-72608b2843ce";
                                    string sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表")
                                    {
                                        auditData = m_DayData.GetDayData(portIds, factorsWan, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//日类型按 日数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetDataTable("酮类有机物", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }


                                if (tbfactorNames.Contains("醚类有机物"))
                                {
                                    factorType = "e5f83fd9-0b77-4d1b-935f-1826fddcc343";
                                    string sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表")
                                    {
                                        auditData = m_DayData.GetDayData(portIds, factorsWan, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//日类型按 日数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetDataTable("醚类有机物", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }


                                if (type == "列表")
                                {
                                    dtInstrumen = (DataTable)this.ViewState["dt"];
                                    if (dtInstrumen != null)
                                    {
                                        bool a = dtInstrumen.Columns.Contains("Tstamp");
                                        if (a)
                                        {
                                            if (dtInstrumen.Columns.Count > 2)
                                            {
                                                dtInstrumen.Columns["Tstamp"].SetOrdinal(1);
                                            }
                                        }
                                        bool b = dtInstrumen.Columns.Contains("DateTime");
                                        if (b)
                                        {
                                            if (dtInstrumen.Columns.Count > 2)
                                            {
                                                dtInstrumen.Columns["DateTime"].SetOrdinal(1);
                                            }
                                        }
                                    }
                                    if (dtInstrumen.Columns.Contains("OzoneValue"))
                                    {
                                        for (int i = 0; i < dtInstrumen.Rows.Count; i++) //臭氧的数据要乘以1000
                                        {
                                            decimal value = 0M;

                                            if (decimal.TryParse(dtInstrumen.Rows[i]["OzoneValue"].ToString(), out value))
                                            {
                                                dtInstrumen.Rows[i]["OzoneValue"] = DecimalExtension.GetPollutantValue(value * 1000, 0);
                                            }
                                        }
                                    }
                                }
                            }
                            #endregion
                            #region 月数据
                            else if (radlDataType.SelectedValue == "Month")
                            {
                                string orderBy1 = "PointId asc,Year desc,MonthOfYear desc";
                                if (TimeSort.SelectedValue == "时间升序")
                                    orderBy1 = "PointId asc,Year asc,MonthOfYear asc";
                                int monthB = monthBegin.SelectedDate.Value.Year;
                                int monthE = monthEnd.SelectedDate.Value.Year;
                                int monthF = monthBegin.SelectedDate.Value.Month;
                                int monthT = monthEnd.SelectedDate.Value.Month;

                                DateTime mtBegin = monthBegin.SelectedDate.Value;
                                //本月第一天时间 
                                dtBegion = mtBegin.AddDays(-(mtBegin.Day) + 1);

                                DateTime mtEnd = monthEnd.SelectedDate.Value;
                                //将本月月数+1 
                                DateTime dt2 = mtEnd.AddMonths(1);
                                //本月最后一天时间 
                                dtEnd = dt2.AddDays(-(mtEnd.Day)).AddDays(1).AddSeconds(-1);
                                dtMonth = new DataTable();
                                dtMonth.Columns.Add("PointId", typeof(System.String));//污染物名称 参数
                                string factorType = "";
                                dtMonth.Columns.Add("Year", typeof(System.Int32));//时间戳
                                dtMonth.Columns.Add("MonthOfYear", typeof(System.Int32));//时间戳
                                foreach (string colName in tbfactorNames)
                                {
                                    dtMonth.Columns.Add(colName, typeof(System.String));//烷烃值
                                }

                                this.ViewState.Add("dtMonth", dtMonth);


                                if (tbfactorNames.Contains("高碳烷烃C6-C12"))
                                {
                                    factorType = "06a02408-6eab-4188-b442-86dd8e97654c";
                                    string sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表")
                                    {
                                        auditData = m_MonthData.GetMonthDataPager(portIds, factorsWan, monthB, monthF, monthE, monthT, pageSize, pageNo, out recordTotal, orderBy1); //月类型 按月数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetMonthDataTable("高碳烷烃C6-C12", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (tbfactorNames.Contains("炔烃"))
                                {
                                    factorType = "5b1918b9-7c92-477a-8e23-64cbae6477f6";
                                    string sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表")
                                    {
                                        auditData = m_MonthData.GetMonthDataPager(portIds, factorsWan, monthB, monthF, monthE, monthT, pageSize, pageNo, out recordTotal, orderBy1); //月类型 按月数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetMonthDataTable("炔烃", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (tbfactorNames.Contains("高碳烯烃C6-C12"))
                                {
                                    factorType = "7bc5f3d8-7cb3-4273-a646-1ed7df60cdd8";
                                    string sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表")
                                    {
                                        auditData = m_MonthData.GetMonthDataPager(portIds, factorsWan, monthB, monthF, monthE, monthT, pageSize, pageNo, out recordTotal, orderBy1); //月类型 按月数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetMonthDataTable("高碳烯烃C6-C12", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (tbfactorNames.Contains("低碳烯烃C2-C5"))
                                {
                                    factorType = "a41db3c8-0fb4-4b0e-b1b0-e5950f04eff6";
                                    string sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表")
                                    {
                                        auditData = m_MonthData.GetMonthDataPager(portIds, factorsWan, monthB, monthF, monthE, monthT, pageSize, pageNo, out recordTotal, orderBy1); //月类型 按月数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetMonthDataTable("低碳烯烃C2-C5", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (tbfactorNames.Contains("苯系物"))
                                {
                                    factorType = "e9607fce-75dc-4134-9a8d-af2a1eb4a7bf";
                                    string sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表")
                                    {
                                        auditData = m_MonthData.GetMonthDataPager(portIds, factorsWan, monthB, monthF, monthE, monthT, pageSize, pageNo, out recordTotal, orderBy1); //月类型 按月数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetMonthDataTable("苯系物", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (tbfactorNames.Contains("低碳烷烃C2-C5"))
                                {
                                    factorType = "fb1fc34b-770f-4141-b75a-015919725e0b";
                                    string sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表")
                                    {
                                        auditData = m_MonthData.GetMonthDataPager(portIds, factorsWan, monthB, monthF, monthE, monthT, pageSize, pageNo, out recordTotal, orderBy1); //月类型 按月数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetMonthDataTable("低碳烷烃C2-C5", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (tbfactorNames.Contains("氟利昂"))
                                {
                                    factorType = "053c74fd-d1ae-4341-b258-1788079970bd";

                                    string sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表")
                                    {
                                        auditData = m_MonthData.GetMonthDataPager(portIds, factorsWan, monthB, monthF, monthE, monthT, pageSize, pageNo, out recordTotal, orderBy1); //月类型 按月数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetMonthDataTable("氟利昂", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }

                                }

                                if (tbfactorNames.Contains("卤代芳香烃"))
                                {
                                    factorType = "1eaac416-0d69-48b9-aca1-9ff7904907bb";
                                    string sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表")
                                    {
                                        auditData = m_MonthData.GetMonthDataPager(portIds, factorsWan, monthB, monthF, monthE, monthT, pageSize, pageNo, out recordTotal, orderBy1); //月类型 按月数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetMonthDataTable("卤代芳香烃", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (tbfactorNames.Contains("卤代烯烃"))
                                {
                                    factorType = "21de4143-2c28-4256-b71e-6cb5ce63e417";
                                    string sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表")
                                    {
                                        auditData = m_MonthData.GetMonthDataPager(portIds, factorsWan, monthB, monthF, monthE, monthT, pageSize, pageNo, out recordTotal, orderBy1); //月类型 按月数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetMonthDataTable("卤代烯烃", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (tbfactorNames.Contains("卤代烷烃"))
                                {
                                    factorType = "a0bad5d7-9eec-4fa4-9c36-828aad78041d";
                                    string sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表")
                                    {
                                        auditData = m_MonthData.GetMonthDataPager(portIds, factorsWan, monthB, monthF, monthE, monthT, pageSize, pageNo, out recordTotal, orderBy1); //月类型 按月数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetMonthDataTable("卤代烷烃", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (tbfactorNames.Contains("含氮有机物"))
                                {
                                    factorType = "3bbe4b30-53e4-48a8-a884-c3b38a03b705";
                                    string sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表")
                                    {
                                        auditData = m_MonthData.GetMonthDataPager(portIds, factorsWan, monthB, monthF, monthE, monthT, pageSize, pageNo, out recordTotal, orderBy1); //月类型 按月数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetMonthDataTable("含氮有机物", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }

                                if (tbfactorNames.Contains("醛类有机物"))
                                {
                                    factorType = "8198b6fc-7a77-427d-8e3e-9c9228ac168c";
                                    string sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表")
                                    {
                                        auditData = m_MonthData.GetMonthDataPager(portIds, factorsWan, monthB, monthF, monthE, monthT, pageSize, pageNo, out recordTotal, orderBy1); //月类型 按月数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetMonthDataTable("醛类有机物", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (tbfactorNames.Contains("酮类有机物"))
                                {
                                    factorType = "8c9ce5f3-4716-485e-95e1-72608b2843ce";
                                    string sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表")
                                    {
                                        auditData = m_MonthData.GetMonthDataPager(portIds, factorsWan, monthB, monthF, monthE, monthT, pageSize, pageNo, out recordTotal, orderBy1); //月类型 按月数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetMonthDataTable("酮类有机物", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }


                                if (tbfactorNames.Contains("醚类有机物"))
                                {
                                    factorType = "e5f83fd9-0b77-4d1b-935f-1826fddcc343";
                                    string sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表")
                                    {
                                        auditData = m_MonthData.GetMonthDataPager(portIds, factorsWan, monthB, monthF, monthE, monthT, pageSize, pageNo, out recordTotal, orderBy1); //月类型 按月数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetMonthDataTable("醚类有机物", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }


                                if (type == "列表")
                                {
                                    dtInstrumen = (DataTable)this.ViewState["dtMonth"];
                                    if (dtInstrumen != null)
                                    {
                                        bool a = dtInstrumen.Columns.Contains("Tstamp");
                                        if (a)
                                        {
                                            if (dtInstrumen.Columns.Count > 2)
                                            {
                                                dtInstrumen.Columns["Tstamp"].SetOrdinal(1);
                                            }
                                        }
                                        bool b = dtInstrumen.Columns.Contains("DateTime");
                                        if (b)
                                        {
                                            if (dtInstrumen.Columns.Count > 2)
                                            {
                                                dtInstrumen.Columns["DateTime"].SetOrdinal(1);
                                            }
                                        }
                                    }
                                    if (dtInstrumen.Columns.Contains("OzoneValue"))
                                    {
                                        for (int i = 0; i < dtInstrumen.Rows.Count; i++) //臭氧的数据要乘以1000
                                        {
                                            decimal value = 0M;

                                            if (decimal.TryParse(dtInstrumen.Rows[i]["OzoneValue"].ToString(), out value))
                                            {
                                                dtInstrumen.Rows[i]["OzoneValue"] = DecimalExtension.GetPollutantValue(value * 1000, 0);
                                            }
                                        }
                                    }
                                }
                            }
                            #endregion
                            #region 周数据
                            else if (radlDataType.SelectedValue == "Week")
                            {
                                string orderBy1 = "PointId asc,Year desc,WeekOfYear desc";
                                if (TimeSort.SelectedValue == "时间升序")
                                    orderBy1 = "PointId asc,Year asc,WeekOfYear asc";
                                int weekB = weekBegin.SelectedDate.Value.Year;
                                int weekE = weekEnd.SelectedDate.Value.Year;
                                int newyear = DateTime.ParseExact(weekFrom.SelectedValue, "yyyy-MM-dd", null).AddDays(6).Year;
                                int nyear = DateTime.ParseExact(weekTo.SelectedValue, "yyyy-MM-dd", null).Year;
                                int weekF = 0;
                                int weekT = 0;
                                if (newyear > weekB)
                                {
                                    weekF = ChinaDate.WeekOfYear(DateTime.ParseExact(weekFrom.SelectedValue, "yyyy-MM-dd", null));
                                }
                                else
                                    weekF = ChinaDate.WeekOfYear(DateTime.ParseExact(weekFrom.SelectedValue, "yyyy-MM-dd", null).AddDays(6));

                                if (weekE > nyear)
                                {
                                    weekT = ChinaDate.WeekOfYear(DateTime.ParseExact(weekTo.SelectedValue, "yyyy-MM-dd", null).AddDays(6));
                                }
                                else
                                {
                                    weekT = ChinaDate.WeekOfYear(DateTime.ParseExact(weekTo.SelectedValue, "yyyy-MM-dd", null));
                                }

                                dtWeek = new DataTable();
                                dtWeek.Columns.Add("PointId", typeof(System.String));//污染物名称 参数
                                string factorType = "";
                                dtWeek.Columns.Add("Year", typeof(System.Int32));//时间戳
                                dtWeek.Columns.Add("WeekOfYear", typeof(System.Int32));//时间戳
                                foreach (string colName in tbfactorNames)
                                {
                                    dtWeek.Columns.Add(colName, typeof(System.String));//烷烃值
                                }

                                this.ViewState.Add("dtWeek", dtWeek);
                                if (tbfactorNames.Contains("高碳烷烃C6-C12"))
                                {
                                    factorType = "06a02408-6eab-4188-b442-86dd8e97654c";
                                    string sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表")
                                    {
                                        auditData = m_WeekData.GetWeekDataPager(portIds, factorsWan, weekB, weekF, weekE, weekT, pageSize, pageNo, out recordTotal, orderBy1); //周类型 按周数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetWeekDataTable("高碳烷烃C6-C12", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (tbfactorNames.Contains("炔烃"))
                                {
                                    factorType = "5b1918b9-7c92-477a-8e23-64cbae6477f6";
                                    string sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表")
                                    {
                                        auditData = m_WeekData.GetWeekDataPager(portIds, factorsWan, weekB, weekF, weekE, weekT, pageSize, pageNo, out recordTotal, orderBy1); //周类型 按周数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetWeekDataTable("炔烃", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (tbfactorNames.Contains("高碳烯烃C6-C12"))
                                {
                                    factorType = "7bc5f3d8-7cb3-4273-a646-1ed7df60cdd8";
                                    string sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表")
                                    {
                                        auditData = m_WeekData.GetWeekDataPager(portIds, factorsWan, weekB, weekF, weekE, weekT, pageSize, pageNo, out recordTotal, orderBy1); //周类型 按周数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetWeekDataTable("高碳烯烃C6-C12", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (tbfactorNames.Contains("低碳烯烃C2-C5"))
                                {
                                    factorType = "a41db3c8-0fb4-4b0e-b1b0-e5950f04eff6";
                                    string sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表")
                                    {
                                        auditData = m_WeekData.GetWeekDataPager(portIds, factorsWan, weekB, weekF, weekE, weekT, pageSize, pageNo, out recordTotal, orderBy1); //周类型 按周数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetWeekDataTable("低碳烯烃C2-C5", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (tbfactorNames.Contains("苯系物"))
                                {
                                    factorType = "e9607fce-75dc-4134-9a8d-af2a1eb4a7bf";
                                    string sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表")
                                    {
                                        auditData = m_WeekData.GetWeekDataPager(portIds, factorsWan, weekB, weekF, weekE, weekT, pageSize, pageNo, out recordTotal, orderBy1); //周类型 按周数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetWeekDataTable("苯系物", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (tbfactorNames.Contains("低碳烷烃C2-C5"))
                                {
                                    factorType = "fb1fc34b-770f-4141-b75a-015919725e0b";
                                    string sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表")
                                    {
                                        auditData = m_WeekData.GetWeekDataPager(portIds, factorsWan, weekB, weekF, weekE, weekT, pageSize, pageNo, out recordTotal, orderBy1); //周类型 按周数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetWeekDataTable("低碳烷烃C2-C5", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (tbfactorNames.Contains("氟利昂"))
                                {
                                    factorType = "053c74fd-d1ae-4341-b258-1788079970bd";

                                    string sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表")
                                    {
                                        auditData = m_WeekData.GetWeekDataPager(portIds, factorsWan, weekB, weekF, weekE, weekT, pageSize, pageNo, out recordTotal, orderBy1); //周类型 按周数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetWeekDataTable("氟利昂", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }

                                }

                                if (tbfactorNames.Contains("卤代芳香烃"))
                                {
                                    factorType = "1eaac416-0d69-48b9-aca1-9ff7904907bb";
                                    string sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表")
                                    {
                                        auditData = m_WeekData.GetWeekDataPager(portIds, factorsWan, weekB, weekF, weekE, weekT, pageSize, pageNo, out recordTotal, orderBy1); //周类型 按周数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetWeekDataTable("卤代芳香烃", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (tbfactorNames.Contains("卤代烯烃"))
                                {
                                    factorType = "21de4143-2c28-4256-b71e-6cb5ce63e417";
                                    string sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表")
                                    {
                                        auditData = m_WeekData.GetWeekDataPager(portIds, factorsWan, weekB, weekF, weekE, weekT, pageSize, pageNo, out recordTotal, orderBy1); //周类型 按周数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetWeekDataTable("卤代烯烃", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (tbfactorNames.Contains("卤代烷烃"))
                                {
                                    factorType = "a0bad5d7-9eec-4fa4-9c36-828aad78041d";
                                    string sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表")
                                    {
                                        auditData = m_WeekData.GetWeekDataPager(portIds, factorsWan, weekB, weekF, weekE, weekT, pageSize, pageNo, out recordTotal, orderBy1); //周类型 按周数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetWeekDataTable("卤代烷烃", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (tbfactorNames.Contains("含氮有机物"))
                                {
                                    factorType = "3bbe4b30-53e4-48a8-a884-c3b38a03b705";
                                    string sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表")
                                    {
                                        auditData = m_WeekData.GetWeekDataPager(portIds, factorsWan, weekB, weekF, weekE, weekT, pageSize, pageNo, out recordTotal, orderBy1); //周类型 按周数据查询
                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetWeekDataTable("含氮有机物", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }

                                if (tbfactorNames.Contains("醛类有机物"))
                                {
                                    factorType = "8198b6fc-7a77-427d-8e3e-9c9228ac168c";
                                    string sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表")
                                    {
                                        auditData = m_WeekData.GetWeekDataPager(portIds, factorsWan, weekB, weekF, weekE, weekT, pageSize, pageNo, out recordTotal, orderBy1); //周类型 按周数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetWeekDataTable("醛类有机物", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (tbfactorNames.Contains("酮类有机物"))
                                {
                                    factorType = "8c9ce5f3-4716-485e-95e1-72608b2843ce";
                                    string sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表")
                                    {
                                        auditData = m_WeekData.GetWeekDataPager(portIds, factorsWan, weekB, weekF, weekE, weekT, pageSize, pageNo, out recordTotal, orderBy1); //周类型 按周数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetWeekDataTable("酮类有机物", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }


                                if (tbfactorNames.Contains("醚类有机物"))
                                {
                                    factorType = "e5f83fd9-0b77-4d1b-935f-1826fddcc343";
                                    string sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表")
                                    {
                                        auditData = m_WeekData.GetWeekDataPager(portIds, factorsWan, weekB, weekF, weekE, weekT, pageSize, pageNo, out recordTotal, orderBy1); //周类型 按周数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetWeekDataTable("醚类有机物", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }


                                if (type == "列表")
                                {
                                    dtInstrumen = (DataTable)this.ViewState["dtWeek"];
                                    if (dtInstrumen != null)
                                    {
                                        bool a = dtInstrumen.Columns.Contains("Tstamp");
                                        if (a)
                                        {
                                            if (dtInstrumen.Columns.Count > 2)
                                            {
                                                dtInstrumen.Columns["Tstamp"].SetOrdinal(1);
                                            }
                                        }
                                        bool b = dtInstrumen.Columns.Contains("DateTime");
                                        if (b)
                                        {
                                            if (dtInstrumen.Columns.Count > 2)
                                            {
                                                dtInstrumen.Columns["DateTime"].SetOrdinal(1);
                                            }
                                        }
                                    }
                                    if (dtInstrumen.Columns.Contains("OzoneValue"))
                                    {
                                        for (int i = 0; i < dtInstrumen.Rows.Count; i++) //臭氧的数据要乘以1000
                                        {
                                            decimal value = 0M;

                                            if (decimal.TryParse(dtInstrumen.Rows[i]["OzoneValue"].ToString(), out value))
                                            {
                                                dtInstrumen.Rows[i]["OzoneValue"] = DecimalExtension.GetPollutantValue(value * 1000, 0);
                                            }
                                        }
                                    }
                                }
                            }
                            #endregion
                            #region 季数据
                            else if (radlDataType.SelectedValue == "Season")
                            {
                                string orderBy1 = "PointId asc,Year desc,SeasonOfYear desc";
                                if (TimeSort.SelectedValue == "时间升序")
                                    orderBy1 = "PointId asc,Year asc,SeasonOfYear asc";
                                int seasonB = seasonBegin.SelectedDate.Value.Year;
                                int seasonE = seasonEnd.SelectedDate.Value.Year;
                                int seasonF = Convert.ToInt32(seasonFrom.SelectedValue);
                                int seasonT = Convert.ToInt32(seasonTo.SelectedValue);
                                //dtBegion = Convert.ToDateTime(weekFrom.SelectedValue);
                                //dtEnd = DateTime.ParseExact(weekTo.SelectedValue, "yyyy-MM-dd", null).AddDays(6).AddDays(1).AddSeconds(-1);
                                dtSeason = new DataTable();
                                dtSeason.Columns.Add("PointId", typeof(System.String));//污染物名称 参数
                                dtSeason.Columns.Add("Year", typeof(System.Int32));//时间戳
                                dtSeason.Columns.Add("SeasonOfYear", typeof(System.Int32));//时间戳
                                string factorType = "";
                                foreach (string colName in tbfactorNames)
                                {
                                    dtSeason.Columns.Add(colName, typeof(System.String));//烷烃值
                                }

                                this.ViewState.Add("dtSeason", dtSeason);
                                if (tbfactorNames.Contains("高碳烷烃C6-C12"))
                                {
                                    factorType = "06a02408-6eab-4188-b442-86dd8e97654c";
                                    string sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表")
                                    {
                                        auditData = m_SeasonData.GetSeasonDataPager(portIds, factorsWan, seasonB, seasonF, seasonE, seasonT, pageSize, pageNo, out recordTotal, orderBy1); //季类型 按季数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetSeasonDataTable("高碳烷烃C6-C12", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (tbfactorNames.Contains("炔烃"))
                                {
                                    factorType = "5b1918b9-7c92-477a-8e23-64cbae6477f6";
                                    string sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表")
                                    {
                                        auditData = m_SeasonData.GetSeasonDataPager(portIds, factorsWan, seasonB, seasonF, seasonE, seasonT, pageSize, pageNo, out recordTotal, orderBy1); //季类型 按季数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetSeasonDataTable("炔烃", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (tbfactorNames.Contains("高碳烯烃C6-C12"))
                                {
                                    factorType = "7bc5f3d8-7cb3-4273-a646-1ed7df60cdd8";
                                    string sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表")
                                    {
                                        auditData = m_SeasonData.GetSeasonDataPager(portIds, factorsWan, seasonB, seasonF, seasonE, seasonT, pageSize, pageNo, out recordTotal, orderBy1); //季类型 按季数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetSeasonDataTable("高碳烯烃C6-C12", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (tbfactorNames.Contains("低碳烯烃C2-C5"))
                                {
                                    factorType = "a41db3c8-0fb4-4b0e-b1b0-e5950f04eff6";
                                    string sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表")
                                    {
                                        auditData = m_SeasonData.GetSeasonDataPager(portIds, factorsWan, seasonB, seasonF, seasonE, seasonT, pageSize, pageNo, out recordTotal, orderBy1); //季类型 按季数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetSeasonDataTable("低碳烯烃C2-C5", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (tbfactorNames.Contains("苯系物"))
                                {
                                    factorType = "e9607fce-75dc-4134-9a8d-af2a1eb4a7bf";
                                    string sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表")
                                    {
                                        auditData = m_SeasonData.GetSeasonDataPager(portIds, factorsWan, seasonB, seasonF, seasonE, seasonT, pageSize, pageNo, out recordTotal, orderBy1); //季类型 按季数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetSeasonDataTable("苯系物", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (tbfactorNames.Contains("低碳烷烃C2-C5"))
                                {
                                    factorType = "fb1fc34b-770f-4141-b75a-015919725e0b";
                                    string sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表")
                                    {
                                        auditData = m_SeasonData.GetSeasonDataPager(portIds, factorsWan, seasonB, seasonF, seasonE, seasonT, pageSize, pageNo, out recordTotal, orderBy1); //季类型 按季数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetSeasonDataTable("低碳烷烃C2-C5", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (tbfactorNames.Contains("氟利昂"))
                                {
                                    factorType = "053c74fd-d1ae-4341-b258-1788079970bd";

                                    string sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表")
                                    {
                                        auditData = m_SeasonData.GetSeasonDataPager(portIds, factorsWan, seasonB, seasonF, seasonE, seasonT, pageSize, pageNo, out recordTotal, orderBy1); //季类型 按季数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetSeasonDataTable("氟利昂", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }

                                }

                                if (tbfactorNames.Contains("卤代芳香烃"))
                                {
                                    factorType = "1eaac416-0d69-48b9-aca1-9ff7904907bb";
                                    string sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表")
                                    {
                                        auditData = m_SeasonData.GetSeasonDataPager(portIds, factorsWan, seasonB, seasonF, seasonE, seasonT, pageSize, pageNo, out recordTotal, orderBy1); //季类型 按季数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetSeasonDataTable("卤代芳香烃", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (tbfactorNames.Contains("卤代烯烃"))
                                {
                                    factorType = "21de4143-2c28-4256-b71e-6cb5ce63e417";
                                    string sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表")
                                    {
                                        auditData = m_SeasonData.GetSeasonDataPager(portIds, factorsWan, seasonB, seasonF, seasonE, seasonT, pageSize, pageNo, out recordTotal, orderBy1); //季类型 按季数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetSeasonDataTable("卤代烯烃", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (tbfactorNames.Contains("卤代烷烃"))
                                {
                                    factorType = "a0bad5d7-9eec-4fa4-9c36-828aad78041d";
                                    string sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表")
                                    {
                                        auditData = m_SeasonData.GetSeasonDataPager(portIds, factorsWan, seasonB, seasonF, seasonE, seasonT, pageSize, pageNo, out recordTotal, orderBy1); //季类型 按季数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetSeasonDataTable("卤代烷烃", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (tbfactorNames.Contains("含氮有机物"))
                                {
                                    factorType = "3bbe4b30-53e4-48a8-a884-c3b38a03b705";
                                    string sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表")
                                    {
                                        auditData = m_SeasonData.GetSeasonDataPager(portIds, factorsWan, seasonB, seasonF, seasonE, seasonT, pageSize, pageNo, out recordTotal, orderBy1); //季类型 按季数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetSeasonDataTable("含氮有机物", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }

                                if (tbfactorNames.Contains("醛类有机物"))
                                {
                                    factorType = "8198b6fc-7a77-427d-8e3e-9c9228ac168c";
                                    string sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表")
                                    {
                                        auditData = m_SeasonData.GetSeasonDataPager(portIds, factorsWan, seasonB, seasonF, seasonE, seasonT, pageSize, pageNo, out recordTotal, orderBy1); //季类型 按季数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetSeasonDataTable("醛类有机物", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (tbfactorNames.Contains("酮类有机物"))
                                {
                                    factorType = "8c9ce5f3-4716-485e-95e1-72608b2843ce";
                                    string sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表")
                                    {
                                        auditData = m_SeasonData.GetSeasonDataPager(portIds, factorsWan, seasonB, seasonF, seasonE, seasonT, pageSize, pageNo, out recordTotal, orderBy1); //季类型 按季数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetSeasonDataTable("酮类有机物", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }


                                if (tbfactorNames.Contains("醚类有机物"))
                                {
                                    factorType = "e5f83fd9-0b77-4d1b-935f-1826fddcc343";
                                    string sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表")
                                    {
                                        auditData = m_SeasonData.GetSeasonDataPager(portIds, factorsWan, seasonB, seasonF, seasonE, seasonT, pageSize, pageNo, out recordTotal, orderBy1); //季类型 按季数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetSeasonDataTable("醚类有机物", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }


                                if (type == "列表")
                                {
                                    dtInstrumen = (DataTable)this.ViewState["dtSeason"];
                                    if (dtInstrumen != null)
                                    {
                                        bool a = dtInstrumen.Columns.Contains("Tstamp");
                                        if (a)
                                        {
                                            if (dtInstrumen.Columns.Count > 2)
                                            {
                                                dtInstrumen.Columns["Tstamp"].SetOrdinal(1);
                                            }
                                        }
                                        bool b = dtInstrumen.Columns.Contains("DateTime");
                                        if (b)
                                        {
                                            if (dtInstrumen.Columns.Count > 2)
                                            {
                                                dtInstrumen.Columns["DateTime"].SetOrdinal(1);
                                            }
                                        }
                                    }
                                    if (dtInstrumen.Columns.Contains("OzoneValue"))
                                    {
                                        for (int i = 0; i < dtInstrumen.Rows.Count; i++) //臭氧的数据要乘以1000
                                        {
                                            decimal value = 0M;

                                            if (decimal.TryParse(dtInstrumen.Rows[i]["OzoneValue"].ToString(), out value))
                                            {
                                                dtInstrumen.Rows[i]["OzoneValue"] = DecimalExtension.GetPollutantValue(value * 1000, 0);
                                            }
                                        }
                                    }
                                }
                            }
                            #endregion
                            #region 年数据
                            else if (radlDataType.SelectedValue == "Year")
                            {
                                string orderBy1 = "PointId asc,Year desc";
                                if (TimeSort.SelectedValue == "时间升序")
                                    orderBy1 = "PointId asc,Year asc";
                                int yearB = yearBegin.SelectedDate.Value.Year;
                                int yearE = yearEnd.SelectedDate.Value.Year;
                                //dtBegion = Convert.ToDateTime(weekFrom.SelectedValue);
                                //dtEnd = DateTime.ParseExact(weekTo.SelectedValue, "yyyy-MM-dd", null).AddDays(6).AddDays(1).AddSeconds(-1);
                                dtYear = new DataTable();
                                dtYear.Columns.Add("PointId", typeof(System.String));//污染物名称 参数
                                dtYear.Columns.Add("Year", typeof(System.Int32));//时间戳
                                foreach (string colName in tbfactorNames)
                                {
                                    dtYear.Columns.Add(colName, typeof(System.String));//污染物值
                                }

                                this.ViewState.Add("dtYear", dtYear);


                                string factorType = "";
                                if (tbfactorNames.Contains("高碳烷烃C6-C12"))
                                {
                                    factorType = "06a02408-6eab-4188-b442-86dd8e97654c";
                                    string sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表")
                                    {
                                        auditData = m_YearData.GetYearDataPager(portIds, factorsWan, yearB, yearE, pageSize, pageNo, out recordTotal, orderBy1); //年类型 按年数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetYearDataTable("高碳烷烃C6-C12", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (tbfactorNames.Contains("炔烃"))
                                {
                                    factorType = "5b1918b9-7c92-477a-8e23-64cbae6477f6";
                                    string sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表")
                                    {
                                        auditData = m_YearData.GetYearDataPager(portIds, factorsWan, yearB, yearE, pageSize, pageNo, out recordTotal, orderBy1); //年类型 按年数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetYearDataTable("炔烃", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (tbfactorNames.Contains("高碳烯烃C6-C12"))
                                {
                                    factorType = "7bc5f3d8-7cb3-4273-a646-1ed7df60cdd8";
                                    string sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表")
                                    {
                                        auditData = m_YearData.GetYearDataPager(portIds, factorsWan, yearB, yearE, pageSize, pageNo, out recordTotal, orderBy1); //年类型 按年数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetYearDataTable("高碳烯烃C6-C12", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (tbfactorNames.Contains("低碳烯烃C2-C5"))
                                {
                                    factorType = "a41db3c8-0fb4-4b0e-b1b0-e5950f04eff6";
                                    string sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表")
                                    {
                                        auditData = m_YearData.GetYearDataPager(portIds, factorsWan, yearB, yearE, pageSize, pageNo, out recordTotal, orderBy1); //年类型 按年数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetYearDataTable("低碳烯烃C2-C5", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (tbfactorNames.Contains("苯系物"))
                                {
                                    factorType = "e9607fce-75dc-4134-9a8d-af2a1eb4a7bf";
                                    string sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表")
                                    {
                                        auditData = m_YearData.GetYearDataPager(portIds, factorsWan, yearB, yearE, pageSize, pageNo, out recordTotal, orderBy1); //年类型 按年数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetYearDataTable("苯系物", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (tbfactorNames.Contains("低碳烷烃C2-C5"))
                                {
                                    factorType = "fb1fc34b-770f-4141-b75a-015919725e0b";
                                    string sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表")
                                    {
                                        auditData = m_YearData.GetYearDataPager(portIds, factorsWan, yearB, yearE, pageSize, pageNo, out recordTotal, orderBy1); //年类型 按年数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetYearDataTable("低碳烷烃C2-C5", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (tbfactorNames.Contains("氟利昂"))
                                {
                                    factorType = "053c74fd-d1ae-4341-b258-1788079970bd";

                                    string sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表")
                                    {
                                        auditData = m_YearData.GetYearDataPager(portIds, factorsWan, yearB, yearE, pageSize, pageNo, out recordTotal, orderBy1); //年类型 按年数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetYearDataTable("氟利昂", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }

                                }

                                if (tbfactorNames.Contains("卤代芳香烃"))
                                {
                                    factorType = "1eaac416-0d69-48b9-aca1-9ff7904907bb";
                                    string sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表")
                                    {
                                        auditData = m_YearData.GetYearDataPager(portIds, factorsWan, yearB, yearE, pageSize, pageNo, out recordTotal, orderBy1); //年类型 按年数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetYearDataTable("卤代芳香烃", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (tbfactorNames.Contains("卤代烯烃"))
                                {
                                    factorType = "21de4143-2c28-4256-b71e-6cb5ce63e417";
                                    string sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表")
                                    {
                                        auditData = m_YearData.GetYearDataPager(portIds, factorsWan, yearB, yearE, pageSize, pageNo, out recordTotal, orderBy1); //年类型 按年数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetYearDataTable("卤代烯烃", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (tbfactorNames.Contains("卤代烷烃"))
                                {
                                    factorType = "a0bad5d7-9eec-4fa4-9c36-828aad78041d";
                                    string sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表")
                                    {
                                        auditData = m_YearData.GetYearDataPager(portIds, factorsWan, yearB, yearE, pageSize, pageNo, out recordTotal, orderBy1); //年类型 按年数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetYearDataTable("卤代烷烃", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (tbfactorNames.Contains("含氮有机物"))
                                {
                                    factorType = "3bbe4b30-53e4-48a8-a884-c3b38a03b705";
                                    string sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表")
                                    {
                                        auditData = m_YearData.GetYearDataPager(portIds, factorsWan, yearB, yearE, pageSize, pageNo, out recordTotal, orderBy1); //年类型 按年数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetYearDataTable("含氮有机物", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }

                                if (tbfactorNames.Contains("醛类有机物"))
                                {
                                    factorType = "8198b6fc-7a77-427d-8e3e-9c9228ac168c";
                                    string sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表")
                                    {
                                        auditData = m_YearData.GetYearDataPager(portIds, factorsWan, yearB, yearE, pageSize, pageNo, out recordTotal, orderBy1); //年类型 按年数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetYearDataTable("醛类有机物", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (tbfactorNames.Contains("酮类有机物"))
                                {
                                    factorType = "8c9ce5f3-4716-485e-95e1-72608b2843ce";
                                    string sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表")
                                    {
                                        auditData = m_YearData.GetYearDataPager(portIds, factorsWan, yearB, yearE, pageSize, pageNo, out recordTotal, orderBy1); //年类型 按年数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetYearDataTable("酮类有机物", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }


                                if (tbfactorNames.Contains("醚类有机物"))
                                {
                                    factorType = "e5f83fd9-0b77-4d1b-935f-1826fddcc343";
                                    string sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表")
                                    {
                                        auditData = m_YearData.GetYearDataPager(portIds, factorsWan, yearB, yearE, pageSize, pageNo, out recordTotal, orderBy1); //年类型 按年数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetYearDataTable("醚类有机物", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }


                                if (type == "列表")
                                {
                                    dtInstrumen = (DataTable)this.ViewState["dtYear"];
                                    if (dtInstrumen != null)
                                    {
                                        bool a = dtInstrumen.Columns.Contains("Tstamp");
                                        if (a)
                                        {
                                            if (dtInstrumen.Columns.Count > 2)
                                            {
                                                dtInstrumen.Columns["Tstamp"].SetOrdinal(1);
                                            }
                                        }
                                        bool b = dtInstrumen.Columns.Contains("DateTime");
                                        if (b)
                                        {
                                            if (dtInstrumen.Columns.Count > 2)
                                            {
                                                dtInstrumen.Columns["DateTime"].SetOrdinal(1);
                                            }
                                        }
                                    }
                                    if (dtInstrumen.Columns.Contains("OzoneValue"))
                                    {
                                        for (int i = 0; i < dtInstrumen.Rows.Count; i++) //臭氧的数据要乘以1000
                                        {
                                            decimal value = 0M;

                                            if (decimal.TryParse(dtInstrumen.Rows[i]["OzoneValue"].ToString(), out value))
                                            {
                                                dtInstrumen.Rows[i]["OzoneValue"] = DecimalExtension.GetPollutantValue(value * 1000, 0);
                                            }
                                        }
                                    }
                                }
                            }
                            #endregion
                        }
                        #endregion
                        #region 原始
                        else
                        {
                            #region 原始一分钟
                            hdTimeType.Value = RadioButtonList1.SelectedValue;
                            if (RadioButtonList1.SelectedValue == "Min1")
                            {
                                dtBegion = dtpBegin.SelectedDate.Value;
                                dtEnd = dtpEnd.SelectedDate.Value;
                                dt = new DataTable();
                                dt.Columns.Add("PointId", typeof(System.String));//污染物名称 参数
                                foreach (string colName in tbfactorNames)
                                {
                                    dt.Columns.Add(colName, typeof(System.String));//污染物值
                                }
                                dt.Columns.Add("Tstamp", typeof(System.DateTime));//时间戳
                                this.ViewState.Add("dt", dt);

                                dtIcon = new DataTable();
                                dtIcon.Columns.Add("PointId", typeof(System.String));//污染物名称 参数
                                foreach (string colName in tbfactorNames)
                                {
                                    dtIcon.Columns.Add(colName, typeof(System.Decimal));//污染物值
                                }
                                dtIcon.Columns.Add("Tstamp", typeof(System.DateTime));//时间戳
                                this.ViewState.Add("dtIcon", dtIcon);
                                string orderBy1 = "PointId asc,Tstamp desc";
                                if (TimeSort.SelectedValue == "时间升序")
                                    orderBy1 = "PointId asc,Tstamp asc";
                                string factorType = "";
                                if (tbfactorNames.Contains("高碳烷烃C6-C12"))
                                {
                                    factorType = "06a02408-6eab-4188-b442-86dd8e97654c";
                                    string sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表")
                                    {
                                        auditData = m_Min1Data.GetDataPager(portIds, factorsWan, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//一分钟类型按 一分钟数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetDataTable("高碳烷烃C6-C12", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (tbfactorNames.Contains("炔烃"))
                                {
                                    factorType = "5b1918b9-7c92-477a-8e23-64cbae6477f6";
                                    string sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表")
                                    {
                                        auditData = m_Min1Data.GetDataPager(portIds, factorsWan, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//一分钟类型按 一分钟数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetDataTable("炔烃", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (tbfactorNames.Contains("高碳烯烃C6-C12"))
                                {
                                    factorType = "7bc5f3d8-7cb3-4273-a646-1ed7df60cdd8";
                                    string sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表")
                                    {
                                        auditData = m_Min1Data.GetDataPager(portIds, factorsWan, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//一分钟类型按 一分钟数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetDataTable("高碳烯烃C6-C12", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (tbfactorNames.Contains("低碳烯烃C2-C5"))
                                {
                                    factorType = "a41db3c8-0fb4-4b0e-b1b0-e5950f04eff6";
                                    string sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表")
                                    {
                                        auditData = m_Min1Data.GetDataPager(portIds, factorsWan, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//一分钟类型按 一分钟数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetDataTable("低碳烯烃C2-C5", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (tbfactorNames.Contains("苯系物"))
                                {
                                    factorType = "e9607fce-75dc-4134-9a8d-af2a1eb4a7bf";
                                    string sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表")
                                    {
                                        auditData = m_Min1Data.GetDataPager(portIds, factorsWan, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//一分钟类型按 一分钟数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetDataTable("苯系物", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (tbfactorNames.Contains("低碳烷烃C2-C5"))
                                {
                                    factorType = "fb1fc34b-770f-4141-b75a-015919725e0b";
                                    string sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表")
                                    {
                                        auditData = m_Min1Data.GetDataPager(portIds, factorsWan, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//一分钟类型按 一分钟数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetDataTable("低碳烷烃C2-C5", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (tbfactorNames.Contains("氟利昂"))
                                {
                                    factorType = "053c74fd-d1ae-4341-b258-1788079970bd";

                                    string sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表")
                                    {
                                        auditData = m_Min1Data.GetDataPager(portIds, factorsWan, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//一分钟类型按 一分钟数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetDataTable("氟利昂", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }

                                }

                                if (tbfactorNames.Contains("卤代芳香烃"))
                                {
                                    factorType = "1eaac416-0d69-48b9-aca1-9ff7904907bb";
                                    string sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表")
                                    {
                                        auditData = m_Min1Data.GetDataPager(portIds, factorsWan, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//一分钟类型按 一分钟数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetDataTable("卤代芳香烃", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (tbfactorNames.Contains("卤代烯烃"))
                                {
                                    factorType = "21de4143-2c28-4256-b71e-6cb5ce63e417";
                                    string sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表")
                                    {
                                        auditData = m_Min1Data.GetDataPager(portIds, factorsWan, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//一分钟类型按 一分钟数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetDataTable("卤代烯烃", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (tbfactorNames.Contains("卤代烷烃"))
                                {
                                    factorType = "a0bad5d7-9eec-4fa4-9c36-828aad78041d";
                                    string sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表")
                                    {
                                        auditData = m_Min1Data.GetDataPager(portIds, factorsWan, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//一分钟类型按 一分钟数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetDataTable("卤代烷烃", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (tbfactorNames.Contains("含氮有机物"))
                                {
                                    factorType = "3bbe4b30-53e4-48a8-a884-c3b38a03b705";
                                    string sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表")
                                    {
                                        auditData = m_Min1Data.GetDataPager(portIds, factorsWan, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//一分钟类型按 一分钟数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetDataTable("含氮有机物", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }

                                if (tbfactorNames.Contains("醛类有机物"))
                                {
                                    factorType = "8198b6fc-7a77-427d-8e3e-9c9228ac168c";
                                    string sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表")
                                    {
                                        auditData = m_Min1Data.GetDataPager(portIds, factorsWan, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//一分钟类型按 一分钟数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetDataTable("醛类有机物", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (tbfactorNames.Contains("酮类有机物"))
                                {
                                    factorType = "8c9ce5f3-4716-485e-95e1-72608b2843ce";
                                    string sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表")
                                    {
                                        auditData = m_Min1Data.GetDataPager(portIds, factorsWan, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//一分钟类型按 一分钟数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetDataTable("酮类有机物", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }


                                if (tbfactorNames.Contains("醚类有机物"))
                                {
                                    factorType = "e5f83fd9-0b77-4d1b-935f-1826fddcc343";
                                    string sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表")
                                    {
                                        auditData = m_Min1Data.GetDataPager(portIds, factorsWan, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//一分钟类型按 一分钟数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetDataTable("醚类有机物", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }


                                if (type == "列表")
                                {
                                    dtInstrumen = (DataTable)this.ViewState["dt"];
                                    if (dtInstrumen != null)
                                    {
                                        bool a = dtInstrumen.Columns.Contains("Tstamp");
                                        if (a)
                                        {
                                            if (dtInstrumen.Columns.Count > 2)
                                            {
                                                dtInstrumen.Columns["Tstamp"].SetOrdinal(1);
                                            }
                                        }
                                        bool b = dtInstrumen.Columns.Contains("DateTime");
                                        if (b)
                                        {
                                            if (dtInstrumen.Columns.Count > 2)
                                            {
                                                dtInstrumen.Columns["DateTime"].SetOrdinal(1);
                                            }
                                        }
                                    }
                                    if (dtInstrumen.Columns.Contains("OzoneValue"))
                                    {
                                        for (int i = 0; i < dtInstrumen.Rows.Count; i++) //臭氧的数据要乘以1000
                                        {
                                            decimal value = 0M;

                                            if (decimal.TryParse(dtInstrumen.Rows[i]["OzoneValue"].ToString(), out value))
                                            {
                                                dtInstrumen.Rows[i]["OzoneValue"] = DecimalExtension.GetPollutantValue(value * 1000, 0);
                                            }
                                        }
                                    }

                                }
                            }
                            #endregion
                            #region 原始五分钟
                            else if (RadioButtonList1.SelectedValue == "Min5")
                            {
                                dtBegion = dtpBegin.SelectedDate.Value;
                                dtEnd = dtpEnd.SelectedDate.Value;
                                dt = new DataTable();
                                dt.Columns.Add("PointId", typeof(System.String));//污染物名称 参数
                                foreach (string colName in tbfactorNames)
                                {
                                    dt.Columns.Add(colName, typeof(System.String));//污染物值
                                }
                                dt.Columns.Add("Tstamp", typeof(System.DateTime));//时间戳
                                this.ViewState.Add("dt", dt);

                                dtIcon = new DataTable();
                                dtIcon.Columns.Add("PointId", typeof(System.String));//污染物名称 参数
                                foreach (string colName in tbfactorNames)
                                {
                                    dtIcon.Columns.Add(colName, typeof(System.Decimal));//污染物值
                                }
                                dtIcon.Columns.Add("Tstamp", typeof(System.DateTime));//时间戳
                                this.ViewState.Add("dtIcon", dtIcon);
                                string orderBy1 = "PointId asc,Tstamp desc";
                                if (TimeSort.SelectedValue == "时间升序")
                                    orderBy1 = "PointId asc,Tstamp asc";
                                string factorType = "";
                                if (tbfactorNames.Contains("高碳烷烃C6-C12"))
                                {
                                    factorType = "06a02408-6eab-4188-b442-86dd8e97654c";
                                    string sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表")
                                    {
                                        auditData = m_Min5Data.GetDataPager(portIds, factorsWan, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//五分钟类型按 小时数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetDataTable("高碳烷烃C6-C12", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (tbfactorNames.Contains("炔烃"))
                                {
                                    factorType = "5b1918b9-7c92-477a-8e23-64cbae6477f6";
                                    string sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表")
                                    {
                                        auditData = m_Min5Data.GetDataPager(portIds, factorsWan, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//五分钟类型按 小时数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetDataTable("炔烃", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (tbfactorNames.Contains("高碳烯烃C6-C12"))
                                {
                                    factorType = "7bc5f3d8-7cb3-4273-a646-1ed7df60cdd8";
                                    string sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表")
                                    {
                                        auditData = m_Min5Data.GetDataPager(portIds, factorsWan, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//五分钟类型按 小时数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetDataTable("高碳烯烃C6-C12", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (tbfactorNames.Contains("低碳烯烃C2-C5"))
                                {
                                    factorType = "a41db3c8-0fb4-4b0e-b1b0-e5950f04eff6";
                                    string sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表")
                                    {
                                        auditData = m_Min5Data.GetDataPager(portIds, factorsWan, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//五分钟类型按 小时数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetDataTable("低碳烯烃C2-C5", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (tbfactorNames.Contains("苯系物"))
                                {
                                    factorType = "e9607fce-75dc-4134-9a8d-af2a1eb4a7bf";
                                    string sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表")
                                    {
                                        auditData = m_Min5Data.GetDataPager(portIds, factorsWan, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//五分钟类型按 小时数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetDataTable("苯系物", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (tbfactorNames.Contains("低碳烷烃C2-C5"))
                                {
                                    factorType = "fb1fc34b-770f-4141-b75a-015919725e0b";
                                    string sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表")
                                    {
                                        auditData = m_Min5Data.GetDataPager(portIds, factorsWan, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//五分钟类型按 小时数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetDataTable("低碳烷烃C2-C5", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (tbfactorNames.Contains("氟利昂"))
                                {
                                    factorType = "053c74fd-d1ae-4341-b258-1788079970bd";

                                    string sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表")
                                    {
                                        auditData = m_Min5Data.GetDataPager(portIds, factorsWan, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//五分钟类型按 小时数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetDataTable("氟利昂", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }

                                }

                                if (tbfactorNames.Contains("卤代芳香烃"))
                                {
                                    factorType = "1eaac416-0d69-48b9-aca1-9ff7904907bb";
                                    string sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表")
                                    {
                                        auditData = m_Min5Data.GetDataPager(portIds, factorsWan, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//五分钟类型按 小时数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetDataTable("卤代芳香烃", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (tbfactorNames.Contains("卤代烯烃"))
                                {
                                    factorType = "21de4143-2c28-4256-b71e-6cb5ce63e417";
                                    string sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表")
                                    {
                                        auditData = m_Min5Data.GetDataPager(portIds, factorsWan, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//五分钟类型按 小时数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetDataTable("卤代烯烃", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (tbfactorNames.Contains("卤代烷烃"))
                                {
                                    factorType = "a0bad5d7-9eec-4fa4-9c36-828aad78041d";
                                    string sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表")
                                    {
                                        auditData = m_Min5Data.GetDataPager(portIds, factorsWan, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//五分钟类型按 小时数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetDataTable("卤代烷烃", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (tbfactorNames.Contains("含氮有机物"))
                                {
                                    factorType = "3bbe4b30-53e4-48a8-a884-c3b38a03b705";
                                    string sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表")
                                    {
                                        auditData = m_Min5Data.GetDataPager(portIds, factorsWan, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//五分钟类型按 小时数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetDataTable("含氮有机物", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }

                                if (tbfactorNames.Contains("醛类有机物"))
                                {
                                    factorType = "8198b6fc-7a77-427d-8e3e-9c9228ac168c";
                                    string sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表")
                                    {
                                        auditData = m_Min5Data.GetDataPager(portIds, factorsWan, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//五分钟类型按 小时数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetDataTable("醛类有机物", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (tbfactorNames.Contains("酮类有机物"))
                                {
                                    factorType = "8c9ce5f3-4716-485e-95e1-72608b2843ce";
                                    string sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表")
                                    {
                                        auditData = m_Min5Data.GetDataPager(portIds, factorsWan, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//五分钟类型按 小时数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetDataTable("酮类有机物", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }


                                if (tbfactorNames.Contains("醚类有机物"))
                                {
                                    factorType = "e5f83fd9-0b77-4d1b-935f-1826fddcc343";
                                    string sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表")
                                    {
                                        auditData = m_Min5Data.GetDataPager(portIds, factorsWan, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//五分钟类型按 小时数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetDataTable("醚类有机物", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }


                                if (type == "列表")
                                {
                                    dtInstrumen = (DataTable)this.ViewState["dt"];
                                    if (dtInstrumen != null)
                                    {
                                        bool a = dtInstrumen.Columns.Contains("Tstamp");
                                        if (a)
                                        {
                                            if (dtInstrumen.Columns.Count > 2)
                                            {
                                                dtInstrumen.Columns["Tstamp"].SetOrdinal(1);
                                            }
                                        }
                                        bool b = dtInstrumen.Columns.Contains("DateTime");
                                        if (b)
                                        {
                                            if (dtInstrumen.Columns.Count > 2)
                                            {
                                                dtInstrumen.Columns["DateTime"].SetOrdinal(1);
                                            }
                                        }
                                    }
                                    if (dtInstrumen.Columns.Contains("OzoneValue"))
                                    {
                                        for (int i = 0; i < dtInstrumen.Rows.Count; i++) //臭氧的数据要乘以1000
                                        {
                                            decimal value = 0M;

                                            if (decimal.TryParse(dtInstrumen.Rows[i]["OzoneValue"].ToString(), out value))
                                            {
                                                dtInstrumen.Rows[i]["OzoneValue"] = DecimalExtension.GetPollutantValue(value * 1000, 0);
                                            }
                                        }
                                    }

                                }

                            }
                            #endregion
                            #region 原始一小时
                            else if (RadioButtonList1.SelectedValue == "Min60")
                            {
                                dtBegion = dtpBegin.SelectedDate.Value;
                                dtEnd = dtpEnd.SelectedDate.Value;
                                dt = new DataTable();
                                dt.Columns.Add("PointId", typeof(System.String));//污染物名称 参数
                                foreach (string colName in tbfactorNames)
                                {
                                    dt.Columns.Add(colName, typeof(System.String));//污染物值
                                }
                                dt.Columns.Add("Tstamp", typeof(System.DateTime));//时间戳
                                this.ViewState.Add("dt", dt);

                                dtIcon = new DataTable();
                                dtIcon.Columns.Add("PointId", typeof(System.String));//污染物名称 参数
                                foreach (string colName in tbfactorNames)
                                {
                                    dtIcon.Columns.Add(colName, typeof(System.Decimal));//污染物值
                                }
                                dtIcon.Columns.Add("Tstamp", typeof(System.DateTime));//时间戳
                                this.ViewState.Add("dtIcon", dtIcon);
                                string orderBy1 = "PointId asc,Tstamp desc";
                                if (TimeSort.SelectedValue == "时间升序")
                                    orderBy1 = "PointId asc,Tstamp asc";
                                string factorType = "";
                                if (tbfactorNames.Contains("高碳烷烃C6-C12"))
                                {
                                    factorType = "06a02408-6eab-4188-b442-86dd8e97654c";
                                    string sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表")
                                    {
                                        if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                        {
                                            auditData = m_Min60Data.GetVOCsKQYDataPager(portIds, factorsWan, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//60分钟类型按 60分钟数据查询

                                        }
                                        else
                                        {
                                            auditData = m_Min60Data.GetDataPager(portIds, factorsWan, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//60分钟类型按 60分钟数据查询
                                        }
                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetDataTable("高碳烷烃C6-C12", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (tbfactorNames.Contains("炔烃"))
                                {
                                    factorType = "5b1918b9-7c92-477a-8e23-64cbae6477f6";
                                    string sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表")
                                    {
                                        if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                        {
                                            auditData = m_Min60Data.GetVOCsKQYDataPager(portIds, factorsWan, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//60分钟类型按 60分钟数据查询

                                        }
                                        else
                                        {
                                            auditData = m_Min60Data.GetDataPager(portIds, factorsWan, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//60分钟类型按 60分钟数据查询
                                        }
                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetDataTable("炔烃", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (tbfactorNames.Contains("高碳烯烃C6-C12"))
                                {
                                    factorType = "7bc5f3d8-7cb3-4273-a646-1ed7df60cdd8";
                                    string sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表")
                                    {
                                        if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                        {
                                            auditData = m_Min60Data.GetVOCsKQYDataPager(portIds, factorsWan, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//60分钟类型按 60分钟数据查询

                                        }
                                        else
                                        {
                                            auditData = m_Min60Data.GetDataPager(portIds, factorsWan, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//60分钟类型按 60分钟数据查询
                                        }
                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetDataTable("高碳烯烃C6-C12", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (tbfactorNames.Contains("低碳烯烃C2-C5"))
                                {
                                    factorType = "a41db3c8-0fb4-4b0e-b1b0-e5950f04eff6";
                                    string sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表")
                                    {
                                        if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                        {
                                            auditData = m_Min60Data.GetVOCsKQYDataPager(portIds, factorsWan, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//60分钟类型按 60分钟数据查询

                                        }
                                        else
                                        {
                                            auditData = m_Min60Data.GetDataPager(portIds, factorsWan, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//60分钟类型按 60分钟数据查询
                                        }
                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetDataTable("低碳烯烃C2-C5", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (tbfactorNames.Contains("苯系物"))
                                {
                                    factorType = "e9607fce-75dc-4134-9a8d-af2a1eb4a7bf";
                                    string sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表")
                                    {
                                        if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                        {
                                            auditData = m_Min60Data.GetVOCsKQYDataPager(portIds, factorsWan, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//60分钟类型按 60分钟数据查询

                                        }
                                        else
                                        {
                                            auditData = m_Min60Data.GetDataPager(portIds, factorsWan, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//60分钟类型按 60分钟数据查询
                                        }
                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetDataTable("苯系物", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (tbfactorNames.Contains("低碳烷烃C2-C5"))
                                {
                                    factorType = "fb1fc34b-770f-4141-b75a-015919725e0b";
                                    string sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表")
                                    {
                                        if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                        {
                                            auditData = m_Min60Data.GetVOCsKQYDataPager(portIds, factorsWan, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//60分钟类型按 60分钟数据查询

                                        }
                                        else
                                        {
                                            auditData = m_Min60Data.GetDataPager(portIds, factorsWan, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//60分钟类型按 60分钟数据查询
                                        }
                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetDataTable("低碳烷烃C2-C5", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (tbfactorNames.Contains("氟利昂"))
                                {
                                    factorType = "053c74fd-d1ae-4341-b258-1788079970bd";

                                    string sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表")
                                    {
                                        if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                        {
                                            auditData = m_Min60Data.GetVOCsKQYDataPager(portIds, factorsWan, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//60分钟类型按 60分钟数据查询

                                        }
                                        else
                                        {
                                            auditData = m_Min60Data.GetDataPager(portIds, factorsWan, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//60分钟类型按 60分钟数据查询
                                        }
                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetDataTable("氟利昂", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }

                                }

                                if (tbfactorNames.Contains("卤代芳香烃"))
                                {
                                    factorType = "1eaac416-0d69-48b9-aca1-9ff7904907bb";
                                    string sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表")
                                    {
                                        if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                        {
                                            auditData = m_Min60Data.GetVOCsKQYDataPager(portIds, factorsWan, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//60分钟类型按 60分钟数据查询

                                        }
                                        else
                                        {
                                            auditData = m_Min60Data.GetDataPager(portIds, factorsWan, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//60分钟类型按 60分钟数据查询
                                        }
                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetDataTable("卤代芳香烃", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (tbfactorNames.Contains("卤代烯烃"))
                                {
                                    factorType = "21de4143-2c28-4256-b71e-6cb5ce63e417";
                                    string sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表")
                                    {
                                        if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                        {
                                            auditData = m_Min60Data.GetVOCsKQYDataPager(portIds, factorsWan, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//60分钟类型按 60分钟数据查询

                                        }
                                        else
                                        {
                                            auditData = m_Min60Data.GetDataPager(portIds, factorsWan, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//60分钟类型按 60分钟数据查询
                                        }
                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetDataTable("卤代烯烃", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (tbfactorNames.Contains("卤代烷烃"))
                                {
                                    factorType = "a0bad5d7-9eec-4fa4-9c36-828aad78041d";
                                    string sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表")
                                    {
                                        if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                        {
                                            auditData = m_Min60Data.GetVOCsKQYDataPager(portIds, factorsWan, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//60分钟类型按 60分钟数据查询

                                        }
                                        else
                                        {
                                            auditData = m_Min60Data.GetDataPager(portIds, factorsWan, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//60分钟类型按 60分钟数据查询
                                        }
                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetDataTable("卤代烷烃", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (tbfactorNames.Contains("含氮有机物"))
                                {
                                    factorType = "3bbe4b30-53e4-48a8-a884-c3b38a03b705";
                                    string sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表")
                                    {
                                        if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                        {
                                            auditData = m_Min60Data.GetVOCsKQYDataPager(portIds, factorsWan, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//60分钟类型按 60分钟数据查询

                                        }
                                        else
                                        {
                                            auditData = m_Min60Data.GetDataPager(portIds, factorsWan, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//60分钟类型按 60分钟数据查询
                                        }
                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetDataTable("含氮有机物", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }

                                if (tbfactorNames.Contains("醛类有机物"))
                                {
                                    factorType = "8198b6fc-7a77-427d-8e3e-9c9228ac168c";
                                    string sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表")
                                    {
                                        if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                        {
                                            auditData = m_Min60Data.GetVOCsKQYDataPager(portIds, factorsWan, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//60分钟类型按 60分钟数据查询

                                        }
                                        else
                                        {
                                            auditData = m_Min60Data.GetDataPager(portIds, factorsWan, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//60分钟类型按 60分钟数据查询
                                        }
                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetDataTable("醛类有机物", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (tbfactorNames.Contains("酮类有机物"))
                                {
                                    factorType = "8c9ce5f3-4716-485e-95e1-72608b2843ce";
                                    string sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表")
                                    {
                                        if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                        {
                                            auditData = m_Min60Data.GetVOCsKQYDataPager(portIds, factorsWan, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//60分钟类型按 60分钟数据查询

                                        }
                                        else
                                        {
                                            auditData = m_Min60Data.GetDataPager(portIds, factorsWan, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//60分钟类型按 60分钟数据查询
                                        }
                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetDataTable("酮类有机物", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }


                                if (tbfactorNames.Contains("醚类有机物"))
                                {
                                    factorType = "e5f83fd9-0b77-4d1b-935f-1826fddcc343";
                                    string sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表")
                                    {
                                        if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                        {
                                            auditData = m_Min60Data.GetVOCsKQYDataPager(portIds, factorsWan, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//60分钟类型按 60分钟数据查询

                                        }
                                        else
                                        {
                                            auditData = m_Min60Data.GetDataPager(portIds, factorsWan, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//60分钟类型按 60分钟数据查询
                                        }
                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetDataTable("醚类有机物", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }


                                if (type == "列表")
                                {
                                    dtInstrumen = (DataTable)this.ViewState["dt"];
                                    if (dtInstrumen != null)
                                    {
                                        bool a = dtInstrumen.Columns.Contains("Tstamp");
                                        if (a)
                                        {
                                            if (dtInstrumen.Columns.Count > 2)
                                            {
                                                dtInstrumen.Columns["Tstamp"].SetOrdinal(1);
                                            }
                                        }
                                        bool b = dtInstrumen.Columns.Contains("DateTime");
                                        if (b)
                                        {
                                            if (dtInstrumen.Columns.Count > 2)
                                            {
                                                dtInstrumen.Columns["DateTime"].SetOrdinal(1);
                                            }
                                        }
                                    }
                                    if (dtInstrumen.Columns.Contains("OzoneValue"))
                                    {
                                        for (int i = 0; i < dtInstrumen.Rows.Count; i++) //臭氧的数据要乘以1000
                                        {
                                            decimal value = 0M;

                                            if (decimal.TryParse(dtInstrumen.Rows[i]["OzoneValue"].ToString(), out value))
                                            {
                                                dtInstrumen.Rows[i]["OzoneValue"] = DecimalExtension.GetPollutantValue(value * 1000, 0);
                                            }
                                        }
                                    }
                                }
                            }
                            #endregion
                            #region 原始日
                            else if (RadioButtonList1.SelectedValue == "OriDay")
                            {
                                dtBegion = dtpDayBegin.SelectedDate.Value;
                                dtEnd = dtpDayEnd.SelectedDate.Value;
                                dt = new DataTable();
                                dt.Columns.Add("PointId", typeof(System.String));//污染物名称 参数
                                foreach (string colName in tbfactorNames)
                                {
                                    dt.Columns.Add(colName, typeof(System.String));//污染物值
                                }
                                dt.Columns.Add("Tstamp", typeof(System.DateTime));//时间戳
                                this.ViewState.Add("dt", dt);

                                dtIcon = new DataTable();
                                dtIcon.Columns.Add("PointId", typeof(System.String));//污染物名称 参数
                                foreach (string colName in tbfactorNames)
                                {
                                    dtIcon.Columns.Add(colName, typeof(System.Decimal));//污染物值
                                }
                                dtIcon.Columns.Add("Tstamp", typeof(System.DateTime));//时间戳
                                this.ViewState.Add("dtIcon", dtIcon);
                                string orderBy1 = "PointId asc,DateTime desc";
                                if (TimeSort.SelectedValue == "时间升序")
                                    orderBy1 = "PointId asc,DateTime asc";
                                string factorType = "";
                                if (tbfactorNames.Contains("高碳烷烃C6-C12"))
                                {
                                    factorType = "06a02408-6eab-4188-b442-86dd8e97654c";
                                    string sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表")
                                    {
                                        auditData = m_DayOriData.GetDataPagers(portIds, factorsWan, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//原始日数据类型按 原始日数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetDataTable("高碳烷烃C6-C12", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (tbfactorNames.Contains("炔烃"))
                                {
                                    factorType = "5b1918b9-7c92-477a-8e23-64cbae6477f6";
                                    string sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表")
                                    {
                                        auditData = m_DayOriData.GetDataPagers(portIds, factorsWan, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//原始日数据类型按 原始日数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetDataTable("炔烃", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (tbfactorNames.Contains("高碳烯烃C6-C12"))
                                {
                                    factorType = "7bc5f3d8-7cb3-4273-a646-1ed7df60cdd8";
                                    string sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表")
                                    {
                                        auditData = m_DayOriData.GetDataPagers(portIds, factorsWan, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//原始日数据类型按 原始日数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetDataTable("高碳烯烃C6-C12", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (tbfactorNames.Contains("低碳烯烃C2-C5"))
                                {
                                    factorType = "a41db3c8-0fb4-4b0e-b1b0-e5950f04eff6";
                                    string sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表")
                                    {
                                        auditData = m_DayOriData.GetDataPagers(portIds, factorsWan, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//原始日数据类型按 原始日数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetDataTable("低碳烯烃C2-C5", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (tbfactorNames.Contains("苯系物"))
                                {
                                    factorType = "e9607fce-75dc-4134-9a8d-af2a1eb4a7bf";
                                    string sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表")
                                    {
                                        auditData = m_DayOriData.GetDataPagers(portIds, factorsWan, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//原始日数据类型按 原始日数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetDataTable("苯系物", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (tbfactorNames.Contains("低碳烷烃C2-C5"))
                                {
                                    factorType = "fb1fc34b-770f-4141-b75a-015919725e0b";
                                    string sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表")
                                    {
                                        auditData = m_DayOriData.GetDataPagers(portIds, factorsWan, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//原始日数据类型按 原始日数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetDataTable("低碳烷烃C2-C5", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (tbfactorNames.Contains("氟利昂"))
                                {
                                    factorType = "053c74fd-d1ae-4341-b258-1788079970bd";

                                    string sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表")
                                    {
                                        auditData = m_DayOriData.GetDataPagers(portIds, factorsWan, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//原始日数据类型按 原始日数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetDataTable("氟利昂", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }

                                }

                                if (tbfactorNames.Contains("卤代芳香烃"))
                                {
                                    factorType = "1eaac416-0d69-48b9-aca1-9ff7904907bb";
                                    string sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表")
                                    {
                                        auditData = m_DayOriData.GetDataPagers(portIds, factorsWan, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//原始日数据类型按 原始日数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetDataTable("卤代芳香烃", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (tbfactorNames.Contains("卤代烯烃"))
                                {
                                    factorType = "21de4143-2c28-4256-b71e-6cb5ce63e417";
                                    string sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表")
                                    {
                                        auditData = m_DayOriData.GetDataPagers(portIds, factorsWan, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//原始日数据类型按 原始日数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetDataTable("卤代烯烃", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (tbfactorNames.Contains("卤代烷烃"))
                                {
                                    factorType = "a0bad5d7-9eec-4fa4-9c36-828aad78041d";
                                    string sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表")
                                    {
                                        auditData = m_DayOriData.GetDataPagers(portIds, factorsWan, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//原始日数据类型按 原始日数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetDataTable("卤代烷烃", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (tbfactorNames.Contains("含氮有机物"))
                                {
                                    factorType = "3bbe4b30-53e4-48a8-a884-c3b38a03b705";
                                    string sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表")
                                    {
                                        auditData = m_DayOriData.GetDataPagers(portIds, factorsWan, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//原始日数据类型按 原始日数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetDataTable("含氮有机物", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }

                                if (tbfactorNames.Contains("醛类有机物"))
                                {
                                    factorType = "8198b6fc-7a77-427d-8e3e-9c9228ac168c";
                                    string sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表")
                                    {
                                        auditData = m_DayOriData.GetDataPagers(portIds, factorsWan, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//原始日数据类型按 原始日数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetDataTable("醛类有机物", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (tbfactorNames.Contains("酮类有机物"))
                                {
                                    factorType = "8c9ce5f3-4716-485e-95e1-72608b2843ce";
                                    string sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表")
                                    {
                                        auditData = m_DayOriData.GetDataPagers(portIds, factorsWan, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//原始日数据类型按 原始日数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetDataTable("酮类有机物", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }


                                if (tbfactorNames.Contains("醚类有机物"))
                                {
                                    factorType = "e5f83fd9-0b77-4d1b-935f-1826fddcc343";
                                    string sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表")
                                    {
                                        auditData = m_DayOriData.GetDataPagers(portIds, factorsWan, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//原始日数据类型按 原始日数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetDataTable("醚类有机物", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }


                                if (type == "列表")
                                {
                                    dtInstrumen = (DataTable)this.ViewState["dt"];
                                    if (dtInstrumen != null)
                                    {
                                        bool a = dtInstrumen.Columns.Contains("Tstamp");
                                        if (a)
                                        {
                                            if (dtInstrumen.Columns.Count > 2)
                                            {
                                                dtInstrumen.Columns["Tstamp"].SetOrdinal(1);
                                            }
                                        }
                                        bool b = dtInstrumen.Columns.Contains("DateTime");
                                        if (b)
                                        {
                                            if (dtInstrumen.Columns.Count > 2)
                                            {
                                                dtInstrumen.Columns["DateTime"].SetOrdinal(1);
                                            }
                                        }
                                    }
                                    if (dtInstrumen.Columns.Contains("OzoneValue"))
                                    {
                                        for (int i = 0; i < dtInstrumen.Rows.Count; i++) //臭氧的数据要乘以1000
                                        {
                                            decimal value = 0M;

                                            if (decimal.TryParse(dtInstrumen.Rows[i]["OzoneValue"].ToString(), out value))
                                            {
                                                dtInstrumen.Rows[i]["OzoneValue"] = DecimalExtension.GetPollutantValue(value * 1000, 0);
                                            }
                                        }
                                    }

                                }

                            }
                            #endregion
                            #region 原始月
                            else if (RadioButtonList1.SelectedValue == "OriMonth")
                            {
                                string orderBy1 = "PointId asc,Year desc,MonthOfYear desc";
                                if (TimeSort.SelectedValue == "时间升序")
                                    orderBy1 = "PointId asc,Year asc,MonthOfYear asc";
                                dtBegion = dtpMonthBegin.SelectedDate.Value;
                                dtEnd = dtpMonthEnd.SelectedDate.Value;
                                dtMonth = new DataTable();
                                dtMonth.Columns.Add("PointId", typeof(System.String));//污染物名称 参数
                                string factorType = "";
                                foreach (string colName in tbfactorNames)
                                {
                                    dtMonth.Columns.Add(colName, typeof(System.String));//烷烃值
                                }
                                dtMonth.Columns.Add("Year", typeof(System.Int32));//时间戳
                                dtMonth.Columns.Add("MonthOfYear", typeof(System.Int32));//时间戳
                                this.ViewState.Add("dtMonth", dtMonth);
                                if (tbfactorNames.Contains("高碳烷烃C6-C12"))
                                {
                                    factorType = "06a02408-6eab-4188-b442-86dd8e97654c";
                                    string sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表")
                                    {
                                        auditData = m_MonthOriData.GetOriDataPager(portIds, factorsWan, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//原始月数据类型按 原始月数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetMonthDataTable("高碳烷烃C6-C12", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (tbfactorNames.Contains("炔烃"))
                                {
                                    factorType = "5b1918b9-7c92-477a-8e23-64cbae6477f6";
                                    string sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表")
                                    {
                                        auditData = m_MonthOriData.GetOriDataPager(portIds, factorsWan, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//原始月数据类型按 原始月数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetMonthDataTable("炔烃", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (tbfactorNames.Contains("高碳烯烃C6-C12"))
                                {
                                    factorType = "7bc5f3d8-7cb3-4273-a646-1ed7df60cdd8";
                                    string sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表")
                                    {
                                        auditData = m_MonthOriData.GetOriDataPager(portIds, factorsWan, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//原始月数据类型按 原始月数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetMonthDataTable("高碳烯烃C6-C12", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (tbfactorNames.Contains("低碳烯烃C2-C5"))
                                {
                                    factorType = "a41db3c8-0fb4-4b0e-b1b0-e5950f04eff6";
                                    string sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表")
                                    {
                                        auditData = m_MonthOriData.GetOriDataPager(portIds, factorsWan, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//原始月数据类型按 原始月数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetMonthDataTable("低碳烯烃C2-C5", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (tbfactorNames.Contains("苯系物"))
                                {
                                    factorType = "e9607fce-75dc-4134-9a8d-af2a1eb4a7bf";
                                    string sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表")
                                    {
                                        auditData = m_MonthOriData.GetOriDataPager(portIds, factorsWan, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//原始月数据类型按 原始月数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetMonthDataTable("苯系物", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (tbfactorNames.Contains("低碳烷烃C2-C5"))
                                {
                                    factorType = "fb1fc34b-770f-4141-b75a-015919725e0b";
                                    string sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表")
                                    {
                                        auditData = m_MonthOriData.GetOriDataPager(portIds, factorsWan, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//原始月数据类型按 原始月数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetMonthDataTable("低碳烷烃C2-C5", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (tbfactorNames.Contains("氟利昂"))
                                {
                                    factorType = "053c74fd-d1ae-4341-b258-1788079970bd";

                                    string sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表")
                                    {
                                        auditData = m_MonthOriData.GetOriDataPager(portIds, factorsWan, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//原始月数据类型按 原始月数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetMonthDataTable("氟利昂", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }

                                }

                                if (tbfactorNames.Contains("卤代芳香烃"))
                                {
                                    factorType = "1eaac416-0d69-48b9-aca1-9ff7904907bb";
                                    string sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表")
                                    {
                                        auditData = m_MonthOriData.GetOriDataPager(portIds, factorsWan, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//原始月数据类型按 原始月数据查询
                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetMonthDataTable("卤代芳香烃", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (tbfactorNames.Contains("卤代烯烃"))
                                {
                                    factorType = "21de4143-2c28-4256-b71e-6cb5ce63e417";
                                    string sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表")
                                    {
                                        auditData = m_MonthOriData.GetOriDataPager(portIds, factorsWan, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//原始月数据类型按 原始月数据查询
                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetMonthDataTable("卤代烯烃", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (tbfactorNames.Contains("卤代烷烃"))
                                {
                                    factorType = "a0bad5d7-9eec-4fa4-9c36-828aad78041d";
                                    string sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表")
                                    {
                                        auditData = m_MonthOriData.GetOriDataPager(portIds, factorsWan, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//原始月数据类型按 原始月数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetMonthDataTable("卤代烷烃", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (tbfactorNames.Contains("含氮有机物"))
                                {
                                    factorType = "3bbe4b30-53e4-48a8-a884-c3b38a03b705";
                                    string sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表")
                                    {
                                        auditData = m_MonthOriData.GetOriDataPager(portIds, factorsWan, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//原始月数据类型按 原始月数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetMonthDataTable("含氮有机物", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }

                                if (tbfactorNames.Contains("醛类有机物"))
                                {
                                    factorType = "8198b6fc-7a77-427d-8e3e-9c9228ac168c";
                                    string sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表")
                                    {
                                        auditData = m_MonthOriData.GetOriDataPager(portIds, factorsWan, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//原始月数据类型按 原始月数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetMonthDataTable("醛类有机物", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (tbfactorNames.Contains("酮类有机物"))
                                {
                                    factorType = "8c9ce5f3-4716-485e-95e1-72608b2843ce";
                                    string sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表")
                                    {
                                        auditData = m_MonthOriData.GetOriDataPager(portIds, factorsWan, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//原始月数据类型按 原始月数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetMonthDataTable("酮类有机物", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }


                                if (tbfactorNames.Contains("醚类有机物"))
                                {
                                    factorType = "e5f83fd9-0b77-4d1b-935f-1826fddcc343";
                                    string sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type] 
                                                    where VOC2TypeGuid='{0}'"
                , factorType);
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表")
                                    {
                                        auditData = m_MonthOriData.GetOriDataPager(portIds, factorsWan, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//原始月数据类型按 原始月数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetMonthDataTable("醚类有机物", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }


                                if (type == "列表")
                                {
                                    dtInstrumen = (DataTable)this.ViewState["dtMonth"];
                                    if (dtInstrumen != null)
                                    {
                                        bool a = dtInstrumen.Columns.Contains("Tstamp");
                                        if (a)
                                        {
                                            if (dtInstrumen.Columns.Count > 2)
                                            {
                                                dtInstrumen.Columns["Tstamp"].SetOrdinal(1);
                                            }
                                        }
                                        bool b = dtInstrumen.Columns.Contains("DateTime");
                                        if (b)
                                        {
                                            if (dtInstrumen.Columns.Count > 2)
                                            {
                                                dtInstrumen.Columns["DateTime"].SetOrdinal(1);
                                            }
                                        }
                                    }
                                    if (dtInstrumen.Columns.Contains("OzoneValue"))
                                    {
                                        for (int i = 0; i < dtInstrumen.Rows.Count; i++) //臭氧的数据要乘以1000
                                        {
                                            decimal value = 0M;

                                            if (decimal.TryParse(dtInstrumen.Rows[i]["OzoneValue"].ToString(), out value))
                                            {
                                                dtInstrumen.Rows[i]["OzoneValue"] = DecimalExtension.GetPollutantValue(value * 1000, 0);
                                            }
                                        }
                                    }

                                }
                            }
                            #endregion
                        }
                        #endregion
                        DataTable datas = UpdateExportColumnNameNew(dtInstrumen.DefaultView);
                        ExcelHelper.DataTableToExcel(datas, "TVOCs", "TVOCs数据", this.Page);
                    }
                    #endregion
                    #region 分三大类
                    else
                    {

                        #region 审核
                        if (ddlDataSource.SelectedValue == "AuditData")
                        {
                            #region 小时数据
                            if (radlDataType.SelectedValue == "Hour")
                            {
                                string orderBy1 = "PointId asc,Tstamp desc";
                                if (TimeSort.SelectedValue == "时间升序")
                                    orderBy1 = "PointId asc,Tstamp asc";
                                dtBegion = hourBegin.SelectedDate.Value;
                                dtEnd = hourEnd.SelectedDate.Value.AddDays(1).AddSeconds(-1);
                                dt = new DataTable();
                                dt.Columns.Add("PointId", typeof(System.String));//污染物名称 参数
                                foreach (string colName in cblistTypeName)
                                {
                                    dt.Columns.Add(colName, typeof(System.String));//污染物值
                                }
                                dt.Columns.Add("Tstamp", typeof(System.DateTime));//时间戳
                                //dt.Columns.Add("TVOC", typeof(System.String));//污染物值
                                this.ViewState.Add("dt", dt);

                                dtIcon = new DataTable();
                                dtIcon.Columns.Add("PointId", typeof(System.String));//污染物名称 参数
                                foreach (string colName in cblistTypeName)
                                {
                                    dtIcon.Columns.Add(colName, typeof(System.Decimal));//污染物值
                                }
                                dtIcon.Columns.Add("Tstamp", typeof(System.DateTime));//时间戳
                                //dtIcon.Columns.Add("TVOC", typeof(System.Decimal));
                                this.ViewState.Add("dtIcon", dtIcon);
                                if (cblistTypeName.Contains("非甲烷碳氢化合物"))
                                {
                                    string factorWan = "";
                                    if (cblistTypeName.Contains("卤代烃类VOCs"))
                                    {
                                        factorWan += "'卤代烃类VOCs',";
                                    }
                                    if (cblistTypeName.Contains("含氧（氮）类VOCs"))
                                    {
                                        factorWan += "'含氧（氮）类VOCs',";
                                    }
                                    string sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type]
where VOC1TypeGuid IN (SELECT RowGuid from [dbo].[DT_VOC1Type] where VOC1Type in ({0}))"
                , factorWan.TrimEnd(','));
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表")
                                    {

                                        if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                        {
                                            auditData = m_HourData.GetVOCsKQYHourDataPagerNew(portIds, factorCodes, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//小时类型按 小时数据查询
                                        }
                                        else
                                        {
                                            auditData = m_HourData.GetHourDataPagerNew(portIds, factorCodes, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//小时类型按 小时数据查询
                                        }
                                        DataTable auDT = auditData.ToTable();
                                        for (int j = 0; j < factorsWan.Length; j++)
                                            if (factorsWan[j] != "")
                                                auDT.Columns.Remove(factorsWan[j]);
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetDataTable("非甲烷碳氢化合物", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }

                                }
                                if (cblistTypeName.Contains("卤代烃类VOCs"))
                                {
                                    string factorXi = "";
                                    if (cblistTypeName.Contains("非甲烷碳氢化合物"))
                                    {
                                        factorXi += "'非甲烷碳氢化合物',";
                                    }
                                    if (cblistTypeName.Contains("含氧（氮）类VOCs"))
                                    {
                                        factorXi += "'含氧（氮）类VOCs',";
                                    }
                                    string sql2 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type]
where VOC1TypeGuid IN (SELECT RowGuid from [dbo].[DT_VOC1Type] where VOC1Type in ({0}))"
                , factorXi.TrimEnd(','));
                                    DataTable dt2 = g_DatabaseHelper.ExecuteDataTable(sql2, "AMS_BaseDataConnection");
                                    string[] factorsXi = dtToArr(dt2);
                                    if (type == "列表")
                                    {
                                        if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                        {
                                            auditData = m_HourData.GetVOCsKQYHourDataPagerNew(portIds, factorCodes, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//小时类型按 小时数据查询
                                        }
                                        else
                                        {
                                            auditData = m_HourData.GetHourDataPagerNew(portIds, factorCodes, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//小时类型按 小时数据查询
                                        }
                                        DataTable auDT = auditData.ToTable();
                                        for (int i = 0; i < factorsXi.Length; i++)
                                            if (factorsXi[i] != "")
                                                auDT.Columns.Remove(factorsXi[i]);
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetDataTable("卤代烃类VOCs", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (cblistTypeName.Contains("含氧（氮）类VOCs"))
                                {
                                    string factorTing = "";
                                    if (cblistTypeName.Contains("非甲烷碳氢化合物"))
                                    {
                                        factorTing += "'非甲烷碳氢化合物',";
                                    }
                                    if (cblistTypeName.Contains("卤代烃类VOCs"))
                                    {
                                        factorTing += "'卤代烃类VOCs',";
                                    }
                                    string sql3 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type]
where VOC1TypeGuid IN (SELECT RowGuid from [dbo].[DT_VOC1Type] where VOC1Type in ({0}))"
                , factorTing.TrimEnd(','));
                                    DataTable dt3 = g_DatabaseHelper.ExecuteDataTable(sql3, "AMS_BaseDataConnection");
                                    string[] factorsTing = dtToArr(dt3);

                                    if (type == "列表")
                                    {
                                        if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                        {
                                            auditData = m_HourData.GetVOCsKQYHourDataPagerNew(portIds, factorCodes, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//小时类型按 小时数据查询
                                        }
                                        else
                                        {
                                            auditData = m_HourData.GetHourDataPagerNew(portIds, factorCodes, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//小时类型按 小时数据查询
                                        }
                                        DataTable auDT = auditData.ToTable();
                                        for (int i = 0; i < factorsTing.Length; i++)
                                        {
                                            if (factorsTing[i] != "")
                                                auDT.Columns.Remove(factorsTing[i]);
                                        }
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetDataTable("含氧（氮）类VOCs", auDT, 0, Ade);

                                        }
                                    }
                                    else
                                    {

                                    }
                                }
                                if (cblistTypeName.Contains("TVOC"))
                                {
                                    if (type == "列表")
                                    {
                                        if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                        {
                                            auditData = m_HourData.GetVOCsKQYHourDataPagerNew(portIds, allCode, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//小时类型按 小时数据查询
                                        }
                                        else
                                        {
                                            auditData = m_HourData.GetHourDataPagerNew(portIds, allCode, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//小时类型按 小时数据查询
                                        }
                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetDataTable("TVOC", auDT, 0, Ade);

                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (type == "列表")
                                {
                                    dtInstrumen = (DataTable)this.ViewState["dt"];
                                    if (dtInstrumen != null)
                                    {
                                        bool a = dtInstrumen.Columns.Contains("Tstamp");
                                        if (a)
                                        {
                                            if (dtInstrumen.Columns.Count > 2)
                                            {
                                                dtInstrumen.Columns["Tstamp"].SetOrdinal(1);
                                            }
                                        }
                                        bool b = dtInstrumen.Columns.Contains("DateTime");
                                        if (b)
                                        {
                                            if (dtInstrumen.Columns.Count > 2)
                                            {
                                                dtInstrumen.Columns["DateTime"].SetOrdinal(1);
                                            }
                                        }
                                    }
                                    if (dtInstrumen.Columns.Contains("OzoneValue"))
                                    {
                                        for (int i = 0; i < dtInstrumen.Rows.Count; i++) //臭氧的数据要乘以1000
                                        {
                                            decimal value = 0M;

                                            if (decimal.TryParse(dtInstrumen.Rows[i]["OzoneValue"].ToString(), out value))
                                            {
                                                dtInstrumen.Rows[i]["OzoneValue"] = DecimalExtension.GetPollutantValue(value * 1000, 0);
                                            }
                                        }
                                    }

                                }
                            }
                            #endregion
                            #region 日数据
                            else if (radlDataType.SelectedValue == "Day")
                            {
                                string orderBy1 = "PointId asc,DateTime desc";
                                if (TimeSort.SelectedValue == "时间升序")
                                    orderBy1 = "PointId asc,DateTime asc";
                                dtBegion = dayBegin.SelectedDate.Value;
                                dtEnd = dayEnd.SelectedDate.Value;
                                dt = new DataTable();
                                dt.Columns.Add("PointId", typeof(System.String));//污染物名称 参数
                                foreach (string colName in cblistTypeName)
                                {
                                    dt.Columns.Add(colName, typeof(System.String));//污染物值
                                }
                                dt.Columns.Add("Tstamp", typeof(System.DateTime));//时间戳
                                //dt.Columns.Add("TVOC", typeof(System.String));//污染物值
                                this.ViewState.Add("dt", dt);

                                dtIcon = new DataTable();
                                dtIcon.Columns.Add("PointId", typeof(System.String));//污染物名称 参数
                                foreach (string colName in cblistTypeName)
                                {
                                    dtIcon.Columns.Add(colName, typeof(System.Decimal));//污染物值
                                }
                                dtIcon.Columns.Add("Tstamp", typeof(System.DateTime));//时间戳
                                //dtIcon.Columns.Add("TVOC", typeof(System.Decimal));
                                this.ViewState.Add("dtIcon", dtIcon);
                                if (cblistTypeName.Contains("非甲烷碳氢化合物"))
                                {
                                    string factorWan = "";
                                    if (cblistTypeName.Contains("卤代烃类VOCs"))
                                    {
                                        factorWan += "'卤代烃类VOCs',";
                                    }
                                    if (cblistTypeName.Contains("含氧（氮）类VOCs"))
                                    {
                                        factorWan += "'含氧（氮）类VOCs',";
                                    }
                                    string sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type]
where VOC1TypeGuid IN (SELECT RowGuid from [dbo].[DT_VOC1Type] where VOC1Type in ({0}))"
                , factorWan.TrimEnd(','));
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表")
                                    {

                                        auditData = m_DayData.GetDayData(portIds, factorCodes, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//日类型按 日数据查询

                                        DataTable auDT = auditData.ToTable();
                                        for (int j = 0; j < factorsWan.Length; j++)
                                            if (factorsWan[j] != "")
                                                auDT.Columns.Remove(factorsWan[j]);
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetDataTable("非甲烷碳氢化合物", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }

                                }
                                if (cblistTypeName.Contains("卤代烃类VOCs"))
                                {
                                    string factorXi = "";
                                    if (cblistTypeName.Contains("非甲烷碳氢化合物"))
                                    {
                                        factorXi += "'非甲烷碳氢化合物',";
                                    }
                                    if (cblistTypeName.Contains("含氧（氮）类VOCs"))
                                    {
                                        factorXi += "'含氧（氮）类VOCs',";
                                    }
                                    string sql2 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type]
where VOC1TypeGuid IN (SELECT RowGuid from [dbo].[DT_VOC1Type] where VOC1Type in ({0}))"
                , factorXi.TrimEnd(','));
                                    DataTable dt2 = g_DatabaseHelper.ExecuteDataTable(sql2, "AMS_BaseDataConnection");
                                    string[] factorsXi = dtToArr(dt2);
                                    if (type == "列表")
                                    {
                                        auditData = m_DayData.GetDayData(portIds, factorCodes, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//日类型按 日数据查询

                                        DataTable auDT = auditData.ToTable();
                                        for (int i = 0; i < factorsXi.Length; i++)
                                            if (factorsXi[i] != "")
                                                auDT.Columns.Remove(factorsXi[i]);
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetDataTable("卤代烃类VOCs", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (cblistTypeName.Contains("含氧（氮）类VOCs"))
                                {
                                    string factorTing = "";
                                    if (cblistTypeName.Contains("非甲烷碳氢化合物"))
                                    {
                                        factorTing += "'非甲烷碳氢化合物',";
                                    }
                                    if (cblistTypeName.Contains("卤代烃类VOCs"))
                                    {
                                        factorTing += "'卤代烃类VOCs',";
                                    }
                                    string sql3 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type]
where VOC1TypeGuid IN (SELECT RowGuid from [dbo].[DT_VOC1Type] where VOC1Type in ({0}))"
                , factorTing.TrimEnd(','));
                                    DataTable dt3 = g_DatabaseHelper.ExecuteDataTable(sql3, "AMS_BaseDataConnection");
                                    string[] factorsTing = dtToArr(dt3);

                                    if (type == "列表")
                                    {
                                        auditData = m_DayData.GetDayData(portIds, factorCodes, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//日类型按 日数据查询

                                        DataTable auDT = auditData.ToTable();
                                        for (int i = 0; i < factorsTing.Length; i++)
                                        {
                                            if (factorsTing[i] != "")
                                                auDT.Columns.Remove(factorsTing[i]);
                                        }
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetDataTable("含氧（氮）类VOCs", auDT, 0, Ade);

                                        }
                                    }
                                    else
                                    {

                                    }
                                }
                                if (cblistTypeName.Contains("TVOC"))
                                {
                                    if (type == "列表")
                                    {
                                        auditData = m_DayData.GetDayData(portIds, allCode, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//日类型按 日数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetDataTable("TVOC", auDT, 0, Ade);

                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (type == "列表")
                                {
                                    dtInstrumen = (DataTable)this.ViewState["dt"];
                                    if (dtInstrumen != null)
                                    {
                                        bool a = dtInstrumen.Columns.Contains("Tstamp");
                                        if (a)
                                        {
                                            if (dtInstrumen.Columns.Count > 2)
                                            {
                                                dtInstrumen.Columns["Tstamp"].SetOrdinal(1);
                                            }
                                        }
                                        bool b = dtInstrumen.Columns.Contains("DateTime");
                                        if (b)
                                        {
                                            if (dtInstrumen.Columns.Count > 2)
                                            {
                                                dtInstrumen.Columns["DateTime"].SetOrdinal(1);
                                            }
                                        }
                                    }
                                    if (dtInstrumen.Columns.Contains("OzoneValue"))
                                    {
                                        for (int i = 0; i < dtInstrumen.Rows.Count; i++) //臭氧的数据要乘以1000
                                        {
                                            decimal value = 0M;

                                            if (decimal.TryParse(dtInstrumen.Rows[i]["OzoneValue"].ToString(), out value))
                                            {
                                                dtInstrumen.Rows[i]["OzoneValue"] = DecimalExtension.GetPollutantValue(value * 1000, 0);
                                            }
                                        }
                                    }

                                }
                            }
                            #endregion
                            #region  月数据

                            else if (radlDataType.SelectedValue == "Month")
                            {
                                string orderBy1 = "PointId asc,Year desc,MonthOfYear desc";
                                if (TimeSort.SelectedValue == "时间升序")
                                    orderBy1 = "PointId asc,Year asc,MonthOfYear asc";
                                int monthB = monthBegin.SelectedDate.Value.Year;
                                int monthE = monthEnd.SelectedDate.Value.Year;
                                int monthF = monthBegin.SelectedDate.Value.Month;
                                int monthT = monthEnd.SelectedDate.Value.Month;

                                DateTime mtBegin = monthBegin.SelectedDate.Value;
                                //本月第一天时间 
                                dtBegion = mtBegin.AddDays(-(mtBegin.Day) + 1);

                                DateTime mtEnd = monthEnd.SelectedDate.Value;
                                //将本月月数+1 
                                DateTime dt2 = mtEnd.AddMonths(1);
                                //本月最后一天时间 
                                dtEnd = dt2.AddDays(-(mtEnd.Day)).AddDays(1).AddSeconds(-1);
                                dtMonth = new DataTable();
                                dtMonth.Columns.Add("PointId", typeof(System.String));//污染物名称 参数
                                dtMonth.Columns.Add("Year", typeof(System.Int32));//时间戳
                                dtMonth.Columns.Add("MonthOfYear", typeof(System.Int32));//时间戳

                                foreach (string colName in cblistTypeName)
                                {
                                    dtMonth.Columns.Add(colName, typeof(System.String));//烷烃值
                                }
                                //dtMonth.Columns.Add("TVOC", typeof(System.String));//污染物值
                                this.ViewState.Add("dtMonth", dtMonth);
                                if (cblistTypeName.Contains("非甲烷碳氢化合物"))
                                {
                                    string factorWan = "";
                                    if (cblistTypeName.Contains("卤代烃类VOCs"))
                                    {
                                        factorWan += "'卤代烃类VOCs',";
                                    }
                                    if (cblistTypeName.Contains("含氧（氮）类VOCs"))
                                    {
                                        factorWan += "'含氧（氮）类VOCs',";
                                    }
                                    string sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type]
where VOC1TypeGuid IN (SELECT RowGuid from [dbo].[DT_VOC1Type] where VOC1Type in ({0}))"
                , factorWan.TrimEnd(','));
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表")
                                    {

                                        auditData = m_MonthData.GetMonthDataPager(portIds, factorCodes, monthB, monthF, monthE, monthT, pageSize, pageNo, out recordTotal, orderBy1); //月类型 按月数据查询

                                        DataTable auDT = auditData.ToTable();
                                        for (int j = 0; j < factorsWan.Length; j++)
                                            if (factorsWan[j] != "")
                                                auDT.Columns.Remove(factorsWan[j]);
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetMonthDataTable("非甲烷碳氢化合物", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }

                                }
                                if (cblistTypeName.Contains("卤代烃类VOCs"))
                                {
                                    string factorXi = "";
                                    if (cblistTypeName.Contains("非甲烷碳氢化合物"))
                                    {
                                        factorXi += "'非甲烷碳氢化合物',";
                                    }
                                    if (cblistTypeName.Contains("含氧（氮）类VOCs"))
                                    {
                                        factorXi += "'含氧（氮）类VOCs',";
                                    }
                                    string sql2 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type]
where VOC1TypeGuid IN (SELECT RowGuid from [dbo].[DT_VOC1Type] where VOC1Type in ({0}))"
                , factorXi.TrimEnd(','));
                                    DataTable dts = g_DatabaseHelper.ExecuteDataTable(sql2, "AMS_BaseDataConnection");
                                    string[] factorsXi = dtToArr(dts);
                                    if (type == "列表")
                                    {
                                        auditData = m_MonthData.GetMonthDataPager(portIds, factorCodes, monthB, monthF, monthE, monthT, pageSize, pageNo, out recordTotal, orderBy1); //月类型 按月数据查询

                                        DataTable auDT = auditData.ToTable();
                                        for (int i = 0; i < factorsXi.Length; i++)
                                            if (factorsXi[i] != "")
                                                auDT.Columns.Remove(factorsXi[i]);
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetMonthDataTable("卤代烃类VOCs", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (cblistTypeName.Contains("含氧（氮）类VOCs"))
                                {
                                    string factorTing = "";
                                    if (cblistTypeName.Contains("非甲烷碳氢化合物"))
                                    {
                                        factorTing += "'非甲烷碳氢化合物',";
                                    }
                                    if (cblistTypeName.Contains("卤代烃类VOCs"))
                                    {
                                        factorTing += "'卤代烃类VOCs',";
                                    }
                                    string sql3 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type]
where VOC1TypeGuid IN (SELECT RowGuid from [dbo].[DT_VOC1Type] where VOC1Type in ({0}))"
                , factorTing.TrimEnd(','));
                                    DataTable dt3 = g_DatabaseHelper.ExecuteDataTable(sql3, "AMS_BaseDataConnection");
                                    string[] factorsTing = dtToArr(dt3);

                                    if (type == "列表")
                                    {
                                        auditData = m_MonthData.GetMonthDataPager(portIds, factorCodes, monthB, monthF, monthE, monthT, pageSize, pageNo, out recordTotal, orderBy1); //月类型 按月数据查询

                                        DataTable auDT = auditData.ToTable();
                                        for (int i = 0; i < factorsTing.Length; i++)
                                        {
                                            if (factorsTing[i] != "")
                                                auDT.Columns.Remove(factorsTing[i]);
                                        }
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetMonthDataTable("含氧（氮）类VOCs", auDT, 0, Ade);

                                        }
                                    }
                                    else
                                    {

                                    }
                                }
                                if (cblistTypeName.Contains("TVOC"))
                                {
                                    if (type == "列表")
                                    {
                                        auditData = m_MonthData.GetMonthDataPager(portIds, allCode, monthB, monthF, monthE, monthT, pageSize, pageNo, out recordTotal, orderBy1); //月类型 按月数据查询

                                        DataTable auDT = auditData.ToTable();
                                        //for (int i = 0; i < factorsTing.Length; i++)
                                        //{
                                        //    if (factorsTing[i] != "")
                                        //        auDT.Columns.Remove(factorsTing[i]);
                                        //}
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetMonthDataTable("TVOC", auDT, 0, Ade);

                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (type == "列表")
                                {
                                    dtInstrumen = (DataTable)this.ViewState["dtMonth"];
                                    if (dtInstrumen != null)
                                    {
                                        bool a = dtInstrumen.Columns.Contains("Tstamp");
                                        if (a)
                                        {
                                            if (dtInstrumen.Columns.Count > 2)
                                            {
                                                dtInstrumen.Columns["Tstamp"].SetOrdinal(1);
                                            }
                                        }
                                        bool b = dtInstrumen.Columns.Contains("DateTime");
                                        if (b)
                                        {
                                            if (dtInstrumen.Columns.Count > 2)
                                            {
                                                dtInstrumen.Columns["DateTime"].SetOrdinal(1);
                                            }
                                        }
                                    }
                                    if (dtInstrumen.Columns.Contains("OzoneValue"))
                                    {
                                        for (int i = 0; i < dtInstrumen.Rows.Count; i++) //臭氧的数据要乘以1000
                                        {
                                            decimal value = 0M;

                                            if (decimal.TryParse(dtInstrumen.Rows[i]["OzoneValue"].ToString(), out value))
                                            {
                                                dtInstrumen.Rows[i]["OzoneValue"] = DecimalExtension.GetPollutantValue(value * 1000, 0);
                                            }
                                        }
                                    }

                                }
                            }
                            #endregion
                            #region 周数据
                            else if (radlDataType.SelectedValue == "Week")
                            {
                                string orderBy1 = "PointId asc,Year desc,WeekOfYear desc";
                                if (TimeSort.SelectedValue == "时间升序")
                                    orderBy1 = "PointId asc,Year asc,WeekOfYear asc";
                                int weekB = weekBegin.SelectedDate.Value.Year;
                                int weekE = weekEnd.SelectedDate.Value.Year;
                                int newyear = DateTime.ParseExact(weekFrom.SelectedValue, "yyyy-MM-dd", null).AddDays(6).Year;
                                int nyear = DateTime.ParseExact(weekTo.SelectedValue, "yyyy-MM-dd", null).Year;
                                int weekF = 0;
                                int weekT = 0;
                                if (newyear > weekB)
                                {
                                    weekF = ChinaDate.WeekOfYear(DateTime.ParseExact(weekFrom.SelectedValue, "yyyy-MM-dd", null));
                                }
                                else
                                    weekF = ChinaDate.WeekOfYear(DateTime.ParseExact(weekFrom.SelectedValue, "yyyy-MM-dd", null).AddDays(6));

                                if (weekE > nyear)
                                {
                                    weekT = ChinaDate.WeekOfYear(DateTime.ParseExact(weekTo.SelectedValue, "yyyy-MM-dd", null).AddDays(6));
                                }
                                else
                                {
                                    weekT = ChinaDate.WeekOfYear(DateTime.ParseExact(weekTo.SelectedValue, "yyyy-MM-dd", null));
                                }
                                dtWeek = new DataTable();
                                dtWeek.Columns.Add("PointId", typeof(System.String));//污染物名称 参数
                                dtWeek.Columns.Add("Year", typeof(System.Int32));//时间戳
                                dtWeek.Columns.Add("WeekOfYear", typeof(System.Int32));//时间戳

                                foreach (string colName in cblistTypeName)
                                {
                                    dtWeek.Columns.Add(colName, typeof(System.String));//烷烃值
                                }
                                //dtWeek.Columns.Add("TVOC", typeof(System.String));//污染物值
                                this.ViewState.Add("dtWeek", dtWeek);
                                if (cblistTypeName.Contains("非甲烷碳氢化合物"))
                                {
                                    string factorWan = "";
                                    if (cblistTypeName.Contains("卤代烃类VOCs"))
                                    {
                                        factorWan += "'卤代烃类VOCs',";
                                    }
                                    if (cblistTypeName.Contains("含氧（氮）类VOCs"))
                                    {
                                        factorWan += "'含氧（氮）类VOCs',";
                                    }
                                    string sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type]
where VOC1TypeGuid IN (SELECT RowGuid from [dbo].[DT_VOC1Type] where VOC1Type in ({0}))"
                , factorWan.TrimEnd(','));
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表")
                                    {

                                        auditData = m_WeekData.GetWeekDataPager(portIds, factorCodes, weekB, weekF, weekE, weekT, pageSize, pageNo, out recordTotal, orderBy1); //周类型 按周数据查询

                                        DataTable auDT = auditData.ToTable();
                                        for (int j = 0; j < factorsWan.Length; j++)
                                            if (factorsWan[j] != "")
                                                auDT.Columns.Remove(factorsWan[j]);
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetWeekDataTable("非甲烷碳氢化合物", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }

                                }
                                if (cblistTypeName.Contains("卤代烃类VOCs"))
                                {
                                    string factorXi = "";
                                    if (cblistTypeName.Contains("非甲烷碳氢化合物"))
                                    {
                                        factorXi += "'非甲烷碳氢化合物',";
                                    }
                                    if (cblistTypeName.Contains("含氧（氮）类VOCs"))
                                    {
                                        factorXi += "'含氧（氮）类VOCs',";
                                    }
                                    string sql2 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type]
where VOC1TypeGuid IN (SELECT RowGuid from [dbo].[DT_VOC1Type] where VOC1Type in ({0}))"
                , factorXi.TrimEnd(','));
                                    DataTable dts = g_DatabaseHelper.ExecuteDataTable(sql2, "AMS_BaseDataConnection");
                                    string[] factorsXi = dtToArr(dts);
                                    if (type == "列表")
                                    {
                                        auditData = m_WeekData.GetWeekDataPager(portIds, factorCodes, weekB, weekF, weekE, weekT, pageSize, pageNo, out recordTotal, orderBy1); //周类型 按周数据查询

                                        DataTable auDT = auditData.ToTable();
                                        for (int i = 0; i < factorsXi.Length; i++)
                                            if (factorsXi[i] != "")
                                                auDT.Columns.Remove(factorsXi[i]);
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetWeekDataTable("卤代烃类VOCs", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (cblistTypeName.Contains("含氧（氮）类VOCs"))
                                {
                                    string factorTing = "";
                                    if (cblistTypeName.Contains("非甲烷碳氢化合物"))
                                    {
                                        factorTing += "'非甲烷碳氢化合物',";
                                    }
                                    if (cblistTypeName.Contains("卤代烃类VOCs"))
                                    {
                                        factorTing += "'卤代烃类VOCs',";
                                    }
                                    string sql3 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type]
where VOC1TypeGuid IN (SELECT RowGuid from [dbo].[DT_VOC1Type] where VOC1Type in ({0}))"
                , factorTing.TrimEnd(','));
                                    DataTable dt3 = g_DatabaseHelper.ExecuteDataTable(sql3, "AMS_BaseDataConnection");
                                    string[] factorsTing = dtToArr(dt3);

                                    if (type == "列表")
                                    {
                                        auditData = m_WeekData.GetWeekDataPager(portIds, factorCodes, weekB, weekF, weekE, weekT, pageSize, pageNo, out recordTotal, orderBy1); //周类型 按周数据查询

                                        DataTable auDT = auditData.ToTable();
                                        for (int i = 0; i < factorsTing.Length; i++)
                                        {
                                            if (factorsTing[i] != "")
                                                auDT.Columns.Remove(factorsTing[i]);
                                        }
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetWeekDataTable("含氧（氮）类VOCs", auDT, 0, Ade);

                                        }
                                    }
                                    else
                                    {

                                    }
                                }
                                if (cblistTypeName.Contains("TVOC"))
                                {
                                    

                                    if (type == "列表")
                                    {
                                        auditData = m_WeekData.GetWeekDataPager(portIds, allCode, weekB, weekF, weekE, weekT, pageSize, pageNo, out recordTotal, orderBy1); //周类型 按周数据查询

                                        DataTable auDT = auditData.ToTable();

                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetWeekDataTable("TVOC", auDT, 0, Ade);

                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (type == "列表")
                                {
                                    dtInstrumen = (DataTable)this.ViewState["dtWeek"];
                                    if (dtInstrumen != null)
                                    {
                                        bool a = dtInstrumen.Columns.Contains("Tstamp");
                                        if (a)
                                        {
                                            if (dtInstrumen.Columns.Count > 2)
                                            {
                                                dtInstrumen.Columns["Tstamp"].SetOrdinal(1);
                                            }
                                        }
                                        bool b = dtInstrumen.Columns.Contains("DateTime");
                                        if (b)
                                        {
                                            if (dtInstrumen.Columns.Count > 2)
                                            {
                                                dtInstrumen.Columns["DateTime"].SetOrdinal(1);
                                            }
                                        }
                                    }
                                    if (dtInstrumen.Columns.Contains("OzoneValue"))
                                    {
                                        for (int i = 0; i < dtInstrumen.Rows.Count; i++) //臭氧的数据要乘以1000
                                        {
                                            decimal value = 0M;

                                            if (decimal.TryParse(dtInstrumen.Rows[i]["OzoneValue"].ToString(), out value))
                                            {
                                                dtInstrumen.Rows[i]["OzoneValue"] = DecimalExtension.GetPollutantValue(value * 1000, 0);
                                            }
                                        }
                                    }

                                }
                            }
                            #endregion
                            #region 季数据
                            else if (radlDataType.SelectedValue == "Season")
                            {
                                string orderBy1 = "PointId asc,Year desc,SeasonOfYear desc";
                                if (TimeSort.SelectedValue == "时间升序")
                                    orderBy1 = "PointId asc,Year asc,SeasonOfYear asc";
                                int seasonB = seasonBegin.SelectedDate.Value.Year;
                                int seasonE = seasonEnd.SelectedDate.Value.Year;
                                int seasonF = Convert.ToInt32(seasonFrom.SelectedValue);
                                int seasonT = Convert.ToInt32(seasonTo.SelectedValue);
                                dtSeason = new DataTable();
                                dtSeason.Columns.Add("PointId", typeof(System.String));//污染物名称 参数
                                dtSeason.Columns.Add("Year", typeof(System.Int32));//时间戳
                                dtSeason.Columns.Add("SeasonOfYear", typeof(System.Int32));//时间戳

                                foreach (string colName in cblistTypeName)
                                {
                                    dtSeason.Columns.Add(colName, typeof(System.String));//烷烃值
                                }
                                //dtSeason.Columns.Add("TVOC", typeof(System.String));//污染物值
                                this.ViewState.Add("dtSeason", dtSeason);
                                if (cblistTypeName.Contains("非甲烷碳氢化合物"))
                                {
                                    string factorWan = "";
                                    if (cblistTypeName.Contains("卤代烃类VOCs"))
                                    {
                                        factorWan += "'卤代烃类VOCs',";
                                    }
                                    if (cblistTypeName.Contains("含氧（氮）类VOCs"))
                                    {
                                        factorWan += "'含氧（氮）类VOCs',";
                                    }
                                    string sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type]
where VOC1TypeGuid IN (SELECT RowGuid from [dbo].[DT_VOC1Type] where VOC1Type in ({0}))"
                , factorWan.TrimEnd(','));
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表")
                                    {

                                        auditData = m_SeasonData.GetSeasonDataPager(portIds, factorCodes, seasonB, seasonF, seasonE, seasonT, pageSize, pageNo, out recordTotal, orderBy1); //季类型 按季数据查询

                                        DataTable auDT = auditData.ToTable();
                                        for (int j = 0; j < factorsWan.Length; j++)
                                            if (factorsWan[j] != "")
                                                auDT.Columns.Remove(factorsWan[j]);
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetSeasonDataTable("非甲烷碳氢化合物", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }

                                }
                                if (cblistTypeName.Contains("卤代烃类VOCs"))
                                {
                                    string factorXi = "";
                                    if (cblistTypeName.Contains("非甲烷碳氢化合物"))
                                    {
                                        factorXi += "'非甲烷碳氢化合物',";
                                    }
                                    if (cblistTypeName.Contains("含氧（氮）类VOCs"))
                                    {
                                        factorXi += "'含氧（氮）类VOCs',";
                                    }
                                    string sql2 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type]
where VOC1TypeGuid IN (SELECT RowGuid from [dbo].[DT_VOC1Type] where VOC1Type in ({0}))"
                , factorXi.TrimEnd(','));
                                    DataTable dts = g_DatabaseHelper.ExecuteDataTable(sql2, "AMS_BaseDataConnection");
                                    string[] factorsXi = dtToArr(dts);
                                    if (type == "列表")
                                    {
                                        auditData = m_SeasonData.GetSeasonDataPager(portIds, factorCodes, seasonB, seasonF, seasonE, seasonT, pageSize, pageNo, out recordTotal, orderBy1); //季类型 按季数据查询

                                        DataTable auDT = auditData.ToTable();
                                        for (int i = 0; i < factorsXi.Length; i++)
                                            if (factorsXi[i] != "")
                                                auDT.Columns.Remove(factorsXi[i]);
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetSeasonDataTable("卤代烃类VOCs", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (cblistTypeName.Contains("含氧（氮）类VOCs"))
                                {
                                    string factorTing = "";
                                    if (cblistTypeName.Contains("非甲烷碳氢化合物"))
                                    {
                                        factorTing += "'非甲烷碳氢化合物',";
                                    }
                                    if (cblistTypeName.Contains("卤代烃类VOCs"))
                                    {
                                        factorTing += "'卤代烃类VOCs',";
                                    }
                                    string sql3 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type]
where VOC1TypeGuid IN (SELECT RowGuid from [dbo].[DT_VOC1Type] where VOC1Type in ({0}))"
                , factorTing.TrimEnd(','));
                                    DataTable dt3 = g_DatabaseHelper.ExecuteDataTable(sql3, "AMS_BaseDataConnection");
                                    string[] factorsTing = dtToArr(dt3);

                                    if (type == "列表")
                                    {
                                        auditData = m_SeasonData.GetSeasonDataPager(portIds, factorCodes, seasonB, seasonF, seasonE, seasonT, pageSize, pageNo, out recordTotal, orderBy1); //季类型 按季数据查询

                                        DataTable auDT = auditData.ToTable();
                                        for (int i = 0; i < factorsTing.Length; i++)
                                        {
                                            if (factorsTing[i] != "")
                                                auDT.Columns.Remove(factorsTing[i]);
                                        }
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetSeasonDataTable("含氧（氮）类VOCs", auDT, 0, Ade);

                                        }
                                    }
                                    else
                                    {

                                    }
                                }
                                if (cblistTypeName.Contains("TVOC"))
                                {
                                    

                                    if (type == "列表")
                                    {
                                        auditData = m_SeasonData.GetSeasonDataPager(portIds, allCode, seasonB, seasonF, seasonE, seasonT, pageSize, pageNo, out recordTotal, orderBy1); //季类型 按季数据查询

                                        DataTable auDT = auditData.ToTable();
                                        //for (int i = 0; i < factorsTing.Length; i++)
                                        //{
                                        //    if (factorsTing[i] != "")
                                        //        auDT.Columns.Remove(factorsTing[i]);
                                        //}
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetSeasonDataTable("TVOC", auDT, 0, Ade);

                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (type == "列表")
                                {
                                    dtInstrumen = (DataTable)this.ViewState["dtSeason"];
                                    if (dtInstrumen != null)
                                    {
                                        bool a = dtInstrumen.Columns.Contains("Tstamp");
                                        if (a)
                                        {
                                            if (dtInstrumen.Columns.Count > 2)
                                            {
                                                dtInstrumen.Columns["Tstamp"].SetOrdinal(1);
                                            }
                                        }
                                        bool b = dtInstrumen.Columns.Contains("DateTime");
                                        if (b)
                                        {
                                            if (dtInstrumen.Columns.Count > 2)
                                            {
                                                dtInstrumen.Columns["DateTime"].SetOrdinal(1);
                                            }
                                        }
                                    }
                                    if (dtInstrumen.Columns.Contains("OzoneValue"))
                                    {
                                        for (int i = 0; i < dtInstrumen.Rows.Count; i++) //臭氧的数据要乘以1000
                                        {
                                            decimal value = 0M;

                                            if (decimal.TryParse(dtInstrumen.Rows[i]["OzoneValue"].ToString(), out value))
                                            {
                                                dtInstrumen.Rows[i]["OzoneValue"] = DecimalExtension.GetPollutantValue(value * 1000, 0);
                                            }
                                        }
                                    }
                                }
                            }
                            #endregion
                            #region 年数据
                            else if (radlDataType.SelectedValue == "Year")
                            {
                                string orderBy1 = "PointId asc,Year desc";
                                if (TimeSort.SelectedValue == "时间升序")
                                    orderBy1 = "PointId asc,Year asc";
                                int yearB = yearBegin.SelectedDate.Value.Year;
                                int yearE = yearEnd.SelectedDate.Value.Year;
                                dtYear = new DataTable();
                                dtYear.Columns.Add("PointId", typeof(System.String));//污染物名称 参数
                                foreach (string colName in cblistTypeName)
                                {
                                    dtYear.Columns.Add(colName, typeof(System.String));//污染物值
                                }
                                dtYear.Columns.Add("Year", typeof(System.Int32));//时间戳
                                //dtYear.Columns.Add("TVOC", typeof(System.String));//污染物值
                                this.ViewState.Add("dtYear", dtYear);

                                if (cblistTypeName.Contains("非甲烷碳氢化合物"))
                                {
                                    string factorWan = "";
                                    if (cblistTypeName.Contains("卤代烃类VOCs"))
                                    {
                                        factorWan += "'卤代烃类VOCs',";
                                    }
                                    if (cblistTypeName.Contains("含氧（氮）类VOCs"))
                                    {
                                        factorWan += "'含氧（氮）类VOCs',";
                                    }
                                    string sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type]
where VOC1TypeGuid IN (SELECT RowGuid from [dbo].[DT_VOC1Type] where VOC1Type in ({0}))"
                , factorWan.TrimEnd(','));
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表")
                                    {

                                        auditData = m_YearData.GetYearDataPager(portIds, factorCodes, yearB, yearE, pageSize, pageNo, out recordTotal, orderBy1); //年类型 按年数据查询

                                        DataTable auDT = auditData.ToTable();
                                        for (int j = 0; j < factorsWan.Length; j++)
                                            if (factorsWan[j] != "")
                                                auDT.Columns.Remove(factorsWan[j]);
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetYearDataTable("非甲烷碳氢化合物", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }

                                }
                                if (cblistTypeName.Contains("卤代烃类VOCs"))
                                {
                                    string factorXi = "";
                                    if (cblistTypeName.Contains("非甲烷碳氢化合物"))
                                    {
                                        factorXi += "'非甲烷碳氢化合物',";
                                    }
                                    if (cblistTypeName.Contains("含氧（氮）类VOCs"))
                                    {
                                        factorXi += "'含氧（氮）类VOCs',";
                                    }
                                    string sql2 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type]
where VOC1TypeGuid IN (SELECT RowGuid from [dbo].[DT_VOC1Type] where VOC1Type in ({0}))"
                , factorXi.TrimEnd(','));
                                    DataTable dt2 = g_DatabaseHelper.ExecuteDataTable(sql2, "AMS_BaseDataConnection");
                                    string[] factorsXi = dtToArr(dt2);
                                    if (type == "列表")
                                    {
                                        auditData = m_YearData.GetYearDataPager(portIds, factorCodes, yearB, yearE, pageSize, pageNo, out recordTotal, orderBy1); //年类型 按年数据查询

                                        DataTable auDT = auditData.ToTable();
                                        for (int i = 0; i < factorsXi.Length; i++)
                                            if (factorsXi[i] != "")
                                                auDT.Columns.Remove(factorsXi[i]);
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetYearDataTable("卤代烃类VOCs", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (cblistTypeName.Contains("含氧（氮）类VOCs"))
                                {
                                    string factorTing = "";
                                    if (cblistTypeName.Contains("非甲烷碳氢化合物"))
                                    {
                                        factorTing += "'非甲烷碳氢化合物',";
                                    }
                                    if (cblistTypeName.Contains("卤代烃类VOCs"))
                                    {
                                        factorTing += "'卤代烃类VOCs',";
                                    }
                                    string sql3 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type]
where VOC1TypeGuid IN (SELECT RowGuid from [dbo].[DT_VOC1Type] where VOC1Type in ({0}))"
                , factorTing.TrimEnd(','));
                                    DataTable dt3 = g_DatabaseHelper.ExecuteDataTable(sql3, "AMS_BaseDataConnection");
                                    string[] factorsTing = dtToArr(dt3);

                                    if (type == "列表")
                                    {
                                        auditData = m_YearData.GetYearDataPager(portIds, factorCodes, yearB, yearE, pageSize, pageNo, out recordTotal, orderBy1); //年类型 按年数据查询

                                        DataTable auDT = auditData.ToTable();
                                        for (int i = 0; i < factorsTing.Length; i++)
                                        {
                                            if (factorsTing[i] != "")
                                                auDT.Columns.Remove(factorsTing[i]);
                                        }
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetYearDataTable("含氧（氮）类VOCs", auDT, 0, Ade);

                                        }
                                    }
                                    else
                                    {

                                    }
                                }
                                if (cblistTypeName.Contains("TVOC"))
                                {
                                    

                                    if (type == "列表")
                                    {
                                        auditData = m_YearData.GetYearDataPager(portIds, allCode, yearB, yearE, pageSize, pageNo, out recordTotal, orderBy1); //年类型 按年数据查询

                                        DataTable auDT = auditData.ToTable();
                                        //for (int i = 0; i < factorsTing.Length; i++)
                                        //{
                                        //    if (factorsTing[i] != "")
                                        //        auDT.Columns.Remove(factorsTing[i]);
                                        //}
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetYearDataTable("TVOC", auDT, 0, Ade);

                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (type == "列表")
                                {
                                    dtInstrumen = (DataTable)this.ViewState["dtYear"];
                                    if (dtInstrumen != null)
                                    {
                                        bool a = dtInstrumen.Columns.Contains("Tstamp");
                                        if (a)
                                        {
                                            if (dtInstrumen.Columns.Count > 2)
                                            {
                                                dtInstrumen.Columns["Tstamp"].SetOrdinal(1);
                                            }
                                        }
                                        bool b = dtInstrumen.Columns.Contains("DateTime");
                                        if (b)
                                        {
                                            if (dtInstrumen.Columns.Count > 2)
                                            {
                                                dtInstrumen.Columns["DateTime"].SetOrdinal(1);
                                            }
                                        }
                                    }
                                    if (dtInstrumen.Columns.Contains("OzoneValue"))
                                    {
                                        for (int i = 0; i < dtInstrumen.Rows.Count; i++) //臭氧的数据要乘以1000
                                        {
                                            decimal value = 0M;

                                            if (decimal.TryParse(dtInstrumen.Rows[i]["OzoneValue"].ToString(), out value))
                                            {
                                                dtInstrumen.Rows[i]["OzoneValue"] = DecimalExtension.GetPollutantValue(value * 1000, 0);
                                            }
                                        }
                                    }

                                }
                            }
                            #endregion
                        }
                        #endregion
                        else
                        {
                            hdTimeType.Value = RadioButtonList1.SelectedValue;
                            #region 原始一分钟
                            if (RadioButtonList1.SelectedValue == "Min1")
                            {
                                dtBegion = dtpBegin.SelectedDate.Value;
                                dtEnd = dtpEnd.SelectedDate.Value;
                                dt = new DataTable();
                                dt.Columns.Add("PointId", typeof(System.String));//污染物名称 参数
                                foreach (string colName in cblistTypeName)
                                {
                                    dt.Columns.Add(colName, typeof(System.String));//污染物值
                                }
                                dt.Columns.Add("Tstamp", typeof(System.DateTime));//时间戳
                                //dt.Columns.Add("TVOC", typeof(System.String));//污染物值
                                this.ViewState.Add("dt", dt);

                                dtIcon = new DataTable();
                                dtIcon.Columns.Add("PointId", typeof(System.String));//污染物名称 参数
                                foreach (string colName in cblistTypeName)
                                {
                                    dtIcon.Columns.Add(colName, typeof(System.Decimal));//污染物值
                                }
                                dtIcon.Columns.Add("Tstamp", typeof(System.DateTime));//时间戳
                                //dtIcon.Columns.Add("TVOC", typeof(System.Decimal));
                                this.ViewState.Add("dtIcon", dtIcon);
                                string orderBy1 = "PointId asc,Tstamp desc";
                                if (TimeSort.SelectedValue == "时间升序")
                                    orderBy1 = "PointId asc,Tstamp asc";
                                if (cblistTypeName.Contains("非甲烷碳氢化合物"))
                                {
                                    string factorWan = "";
                                    if (cblistTypeName.Contains("卤代烃类VOCs"))
                                    {
                                        factorWan += "'卤代烃类VOCs',";
                                    }
                                    if (cblistTypeName.Contains("含氧（氮）类VOCs"))
                                    {
                                        factorWan += "'含氧（氮）类VOCs',";
                                    }
                                    string sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type]
where VOC1TypeGuid IN (SELECT RowGuid from [dbo].[DT_VOC1Type] where VOC1Type in ({0}))"
                , factorWan.TrimEnd(','));
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表")
                                    {

                                        auditData = m_Min1Data.GetDataPager(portIds, factorCodes, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//一分钟类型按 一分钟数据查询

                                        DataTable auDT = auditData.ToTable();
                                        for (int j = 0; j < factorsWan.Length; j++)
                                            if (factorsWan[j] != "")
                                                auDT.Columns.Remove(factorsWan[j]);
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetDataTable("非甲烷碳氢化合物", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }

                                }
                                if (cblistTypeName.Contains("卤代烃类VOCs"))
                                {
                                    string factorXi = "";
                                    if (cblistTypeName.Contains("非甲烷碳氢化合物"))
                                    {
                                        factorXi += "'非甲烷碳氢化合物',";
                                    }
                                    if (cblistTypeName.Contains("含氧（氮）类VOCs"))
                                    {
                                        factorXi += "'含氧（氮）类VOCs',";
                                    }
                                    string sql2 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type]
where VOC1TypeGuid IN (SELECT RowGuid from [dbo].[DT_VOC1Type] where VOC1Type in ({0}))"
                , factorXi.TrimEnd(','));
                                    DataTable dt2 = g_DatabaseHelper.ExecuteDataTable(sql2, "AMS_BaseDataConnection");
                                    string[] factorsXi = dtToArr(dt2);
                                    if (type == "列表")
                                    {
                                        auditData = m_Min1Data.GetDataPager(portIds, factorCodes, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//一分钟类型按 一分钟数据查询

                                        DataTable auDT = auditData.ToTable();
                                        for (int i = 0; i < factorsXi.Length; i++)
                                            if (factorsXi[i] != "")
                                                auDT.Columns.Remove(factorsXi[i]);
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetDataTable("卤代烃类VOCs", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (cblistTypeName.Contains("含氧（氮）类VOCs"))
                                {
                                    string factorTing = "";
                                    if (cblistTypeName.Contains("非甲烷碳氢化合物"))
                                    {
                                        factorTing += "'非甲烷碳氢化合物',";
                                    }
                                    if (cblistTypeName.Contains("卤代烃类VOCs"))
                                    {
                                        factorTing += "'卤代烃类VOCs',";
                                    }
                                    string sql3 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type]
where VOC1TypeGuid IN (SELECT RowGuid from [dbo].[DT_VOC1Type] where VOC1Type in ({0}))"
                , factorTing.TrimEnd(','));
                                    DataTable dt3 = g_DatabaseHelper.ExecuteDataTable(sql3, "AMS_BaseDataConnection");
                                    string[] factorsTing = dtToArr(dt3);

                                    if (type == "列表")
                                    {
                                        auditData = m_Min1Data.GetDataPager(portIds, factorCodes, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//一分钟类型按 一分钟数据查询

                                        DataTable auDT = auditData.ToTable();
                                        for (int i = 0; i < factorsTing.Length; i++)
                                        {
                                            if (factorsTing[i] != "")
                                                auDT.Columns.Remove(factorsTing[i]);
                                        }
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetDataTable("含氧（氮）类VOCs", auDT, 0, Ade);

                                        }
                                    }
                                    else
                                    {

                                    }
                                }
                                if (cblistTypeName.Contains("TVOC"))
                                {
                                   
                                    if (type == "列表")
                                    {
                                        auditData = m_Min1Data.GetDataPager(portIds, allCode, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//一分钟类型按 一分钟数据查询

                                        DataTable auDT = auditData.ToTable();

                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetDataTable("TVOC", auDT, 0, Ade);

                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (type == "列表")
                                {
                                    dtInstrumen = (DataTable)this.ViewState["dt"];
                                    if (dtInstrumen != null)
                                    {
                                        bool a = dtInstrumen.Columns.Contains("Tstamp");
                                        if (a)
                                        {
                                            if (dtInstrumen.Columns.Count > 2)
                                            {
                                                dtInstrumen.Columns["Tstamp"].SetOrdinal(1);
                                            }
                                        }
                                        bool b = dtInstrumen.Columns.Contains("DateTime");
                                        if (b)
                                        {
                                            if (dtInstrumen.Columns.Count > 2)
                                            {
                                                dtInstrumen.Columns["DateTime"].SetOrdinal(1);
                                            }
                                        }
                                    }
                                    if (dtInstrumen.Columns.Contains("OzoneValue"))
                                    {
                                        for (int i = 0; i < dtInstrumen.Rows.Count; i++) //臭氧的数据要乘以1000
                                        {
                                            decimal value = 0M;

                                            if (decimal.TryParse(dtInstrumen.Rows[i]["OzoneValue"].ToString(), out value))
                                            {
                                                dtInstrumen.Rows[i]["OzoneValue"] = DecimalExtension.GetPollutantValue(value * 1000, 0);
                                            }
                                        }
                                    }

                                }

                            }
                            #endregion
                            #region 原始五分钟
                            else if (RadioButtonList1.SelectedValue == "Min5")
                            {
                                dtBegion = dtpBegin.SelectedDate.Value;
                                dtEnd = dtpEnd.SelectedDate.Value;
                                dt = new DataTable();
                                dt.Columns.Add("PointId", typeof(System.String));//污染物名称 参数
                                foreach (string colName in cblistTypeName)
                                {
                                    dt.Columns.Add(colName, typeof(System.String));//污染物值
                                }
                                dt.Columns.Add("Tstamp", typeof(System.DateTime));//时间戳
                                //dt.Columns.Add("TVOC", typeof(System.String));//污染物值
                                this.ViewState.Add("dt", dt);

                                dtIcon = new DataTable();
                                dtIcon.Columns.Add("PointId", typeof(System.String));//污染物名称 参数
                                foreach (string colName in cblistTypeName)
                                {
                                    dtIcon.Columns.Add(colName, typeof(System.Decimal));//污染物值
                                }
                                dtIcon.Columns.Add("Tstamp", typeof(System.DateTime));//时间戳
                                //dtIcon.Columns.Add("TVOC", typeof(System.Decimal));
                                this.ViewState.Add("dtIcon", dtIcon);
                                string orderBy1 = "PointId asc,Tstamp desc";
                                if (TimeSort.SelectedValue == "时间升序")
                                    orderBy1 = "PointId asc,Tstamp asc";
                                if (cblistTypeName.Contains("非甲烷碳氢化合物"))
                                {
                                    string factorWan = "";
                                    if (cblistTypeName.Contains("卤代烃类VOCs"))
                                    {
                                        factorWan += "'卤代烃类VOCs',";
                                    }
                                    if (cblistTypeName.Contains("含氧（氮）类VOCs"))
                                    {
                                        factorWan += "'含氧（氮）类VOCs',";
                                    }
                                    string sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type]
where VOC1TypeGuid IN (SELECT RowGuid from [dbo].[DT_VOC1Type] where VOC1Type in ({0}))"
                , factorWan.TrimEnd(','));
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表")
                                    {

                                        auditData = m_Min5Data.GetDataPager(portIds, factorCodes, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//五分钟类型按 小时数据查询

                                        DataTable auDT = auditData.ToTable();
                                        for (int j = 0; j < factorsWan.Length; j++)
                                            if (factorsWan[j] != "")
                                                auDT.Columns.Remove(factorsWan[j]);
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetDataTable("非甲烷碳氢化合物", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }

                                }
                                if (cblistTypeName.Contains("卤代烃类VOCs"))
                                {
                                    string factorXi = "";
                                    if (cblistTypeName.Contains("非甲烷碳氢化合物"))
                                    {
                                        factorXi += "'非甲烷碳氢化合物',";
                                    }
                                    if (cblistTypeName.Contains("含氧（氮）类VOCs"))
                                    {
                                        factorXi += "'含氧（氮）类VOCs',";
                                    }
                                    string sql2 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type]
where VOC1TypeGuid IN (SELECT RowGuid from [dbo].[DT_VOC1Type] where VOC1Type in ({0}))"
                , factorXi.TrimEnd(','));
                                    DataTable dt2 = g_DatabaseHelper.ExecuteDataTable(sql2, "AMS_BaseDataConnection");
                                    string[] factorsXi = dtToArr(dt2);

                                    if (type == "列表")
                                    {
                                        auditData = m_Min5Data.GetDataPager(portIds, factorCodes, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//五分钟类型按 小时数据查询

                                        DataTable auDT = auditData.ToTable();
                                        for (int i = 0; i < factorsXi.Length; i++)
                                            if (factorsXi[i] != "")
                                                auDT.Columns.Remove(factorsXi[i]);
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetDataTable("卤代烃类VOCs", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (cblistTypeName.Contains("含氧（氮）类VOCs"))
                                {
                                    string factorTing = "";
                                    if (cblistTypeName.Contains("非甲烷碳氢化合物"))
                                    {
                                        factorTing += "'非甲烷碳氢化合物',";
                                    }
                                    if (cblistTypeName.Contains("卤代烃类VOCs"))
                                    {
                                        factorTing += "'卤代烃类VOCs',";
                                    }
                                    string sql3 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type]
where VOC1TypeGuid IN (SELECT RowGuid from [dbo].[DT_VOC1Type] where VOC1Type in ({0}))"
                , factorTing.TrimEnd(','));
                                    DataTable dt3 = g_DatabaseHelper.ExecuteDataTable(sql3, "AMS_BaseDataConnection");
                                    string[] factorsTing = dtToArr(dt3);


                                    if (type == "列表")
                                    {
                                        auditData = m_Min5Data.GetDataPager(portIds, factorCodes, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//五分钟类型按 小时数据查询

                                        DataTable auDT = auditData.ToTable();
                                        for (int i = 0; i < factorsTing.Length; i++)
                                        {
                                            if (factorsTing[i] != "")
                                                auDT.Columns.Remove(factorsTing[i]);
                                        }
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetDataTable("含氧（氮）类VOCs", auDT, 0, Ade);

                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (cblistTypeName.Contains("TVOC"))
                                {
                                    
                                    if (type == "列表")
                                    {
                                        auditData = m_Min5Data.GetDataPager(portIds, allCode, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//五分钟类型按 小时数据查询

                                        DataTable auDT = auditData.ToTable();

                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetDataTable("TVOC", auDT, 0, Ade);

                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (type == "列表")
                                {
                                    dtInstrumen = (DataTable)this.ViewState["dt"];
                                    if (dtInstrumen != null)
                                    {
                                        bool a = dtInstrumen.Columns.Contains("Tstamp");
                                        if (a)
                                        {
                                            if (dtInstrumen.Columns.Count > 2)
                                            {
                                                dtInstrumen.Columns["Tstamp"].SetOrdinal(1);
                                            }
                                        }
                                        bool b = dtInstrumen.Columns.Contains("DateTime");
                                        if (b)
                                        {
                                            if (dtInstrumen.Columns.Count > 2)
                                            {
                                                dtInstrumen.Columns["DateTime"].SetOrdinal(1);
                                            }
                                        }
                                    }
                                    if (dtInstrumen.Columns.Contains("OzoneValue"))
                                    {
                                        for (int i = 0; i < dtInstrumen.Rows.Count; i++) //臭氧的数据要乘以1000
                                        {
                                            decimal value = 0M;

                                            if (decimal.TryParse(dtInstrumen.Rows[i]["OzoneValue"].ToString(), out value))
                                            {
                                                dtInstrumen.Rows[i]["OzoneValue"] = DecimalExtension.GetPollutantValue(value * 1000, 0);
                                            }
                                        }
                                    }
                                }

                            }
                            #endregion
                            #region 原始小时
                            else if (RadioButtonList1.SelectedValue == "Min60")
                            {
                                dtBegion = dtpBegin.SelectedDate.Value;
                                dtEnd = dtpEnd.SelectedDate.Value;
                                dt = new DataTable();
                                dt.Columns.Add("PointId", typeof(System.String));//污染物名称 参数
                                foreach (string colName in cblistTypeName)
                                {
                                    dt.Columns.Add(colName, typeof(System.String));//污染物值
                                }
                                dt.Columns.Add("Tstamp", typeof(System.DateTime));//时间戳
                                //dt.Columns.Add("TVOC", typeof(System.String));//污染物值
                                this.ViewState.Add("dt", dt);

                                dtIcon = new DataTable();
                                dtIcon.Columns.Add("PointId", typeof(System.String));//污染物名称 参数
                                foreach (string colName in cblistTypeName)
                                {
                                    dtIcon.Columns.Add(colName, typeof(System.Decimal));//污染物值
                                }
                                dtIcon.Columns.Add("Tstamp", typeof(System.DateTime));//时间戳
                                //dtIcon.Columns.Add("TVOC", typeof(System.Decimal));
                                this.ViewState.Add("dtIcon", dtIcon);
                                string orderBy1 = "PointId asc,Tstamp desc";
                                if (TimeSort.SelectedValue == "时间升序")
                                    orderBy1 = "PointId asc,Tstamp asc";
                                if (cblistTypeName.Contains("非甲烷碳氢化合物"))
                                {
                                    string factorWan = "";
                                    if (cblistTypeName.Contains("卤代烃类VOCs"))
                                    {
                                        factorWan += "'卤代烃类VOCs',";
                                    }
                                    if (cblistTypeName.Contains("含氧（氮）类VOCs"))
                                    {
                                        factorWan += "'含氧（氮）类VOCs',";
                                    }
                                    string sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type]
where VOC1TypeGuid IN (SELECT RowGuid from [dbo].[DT_VOC1Type] where VOC1Type in ({0}))"
                , factorWan.TrimEnd(','));
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表")
                                    {

                                        if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                        {
                                            auditData = m_Min60Data.GetVOCsKQYDataPager(portIds, factorCodes, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//60分钟类型按 60分钟数据查询

                                        }
                                        else
                                        {
                                            auditData = m_Min60Data.GetDataPager(portIds, factorCodes, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//60分钟类型按 60分钟数据查询
                                        }
                                        DataTable auDT = auditData.ToTable();
                                        for (int j = 0; j < factorsWan.Length; j++)
                                            if (factorsWan[j] != "")
                                                auDT.Columns.Remove(factorsWan[j]);
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetDataTable("非甲烷碳氢化合物", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }

                                }
                                if (cblistTypeName.Contains("卤代烃类VOCs"))
                                {
                                    string factorXi = "";
                                    if (cblistTypeName.Contains("非甲烷碳氢化合物"))
                                    {
                                        factorXi += "'非甲烷碳氢化合物',";
                                    }
                                    if (cblistTypeName.Contains("含氧（氮）类VOCs"))
                                    {
                                        factorXi += "'含氧（氮）类VOCs',";
                                    }
                                    string sql2 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type]
where VOC1TypeGuid IN (SELECT RowGuid from [dbo].[DT_VOC1Type] where VOC1Type in ({0}))"
                , factorXi.TrimEnd(','));
                                    DataTable dt2 = g_DatabaseHelper.ExecuteDataTable(sql2, "AMS_BaseDataConnection");
                                    string[] factorsXi = dtToArr(dt2);
                                    //factorXi = factorXi.Trim(',');
                                    //string[] factorsXi = factorXi.Split(',');
                                    if (type == "列表")
                                    {
                                        if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                        {
                                            auditData = m_Min60Data.GetVOCsKQYDataPager(portIds, factorCodes, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//60分钟类型按 60分钟数据查询

                                        }
                                        else
                                        {
                                            auditData = m_Min60Data.GetDataPager(portIds, factorCodes, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//60分钟类型按 60分钟数据查询
                                        }
                                        DataTable auDT = auditData.ToTable();
                                        for (int i = 0; i < factorsXi.Length; i++)
                                            if (factorsXi[i] != "")
                                                auDT.Columns.Remove(factorsXi[i]);
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetDataTable("卤代烃类VOCs", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (cblistTypeName.Contains("含氧（氮）类VOCs"))
                                {
                                    string factorTing = "";
                                    if (cblistTypeName.Contains("非甲烷碳氢化合物"))
                                    {
                                        factorTing += "'非甲烷碳氢化合物',";
                                    }
                                    if (cblistTypeName.Contains("卤代烃类VOCs"))
                                    {
                                        factorTing += "'卤代烃类VOCs',";
                                    }
                                    string sql3 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type]
where VOC1TypeGuid IN (SELECT RowGuid from [dbo].[DT_VOC1Type] where VOC1Type in ({0}))"
                , factorTing.TrimEnd(','));
                                    DataTable dt3 = g_DatabaseHelper.ExecuteDataTable(sql3, "AMS_BaseDataConnection");
                                    string[] factorsTing = dtToArr(dt3);
                                    //factorTing = factorTing.Trim(',');
                                    //string[] factorsTing = factorTing.Split(',');

                                    if (type == "列表")
                                    {
                                        if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                    {
                                        auditData = m_Min60Data.GetVOCsKQYDataPager(portIds, factorCodes, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//60分钟类型按 60分钟数据查询
                                        
                                    }
                                    else
                                    {
                                        auditData = m_Min60Data.GetDataPager(portIds, factorCodes, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//60分钟类型按 60分钟数据查询
                                    }
                                        DataTable auDT = auditData.ToTable();
                                        for (int i = 0; i < factorsTing.Length; i++)
                                        {
                                            if (factorsTing[i] != "")
                                                auDT.Columns.Remove(factorsTing[i]);
                                        }
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetDataTable("含氧（氮）类VOCs", auDT, 0, Ade);

                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (cblistTypeName.Contains("TVOC"))
                                {
                                    
                                    if (type == "列表")
                                    {
                                        if (PageHelper.GetQueryString("auditOrNot") == "vocskqy")
                                        {
                                            auditData = m_Min60Data.GetVOCsKQYDataPager(portIds, allCode, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//60分钟类型按 60分钟数据查询
                                            recordTotal = auditData.ToTable().Rows.Count;
                                        }
                                        else
                                        {
                                            auditData = m_Min60Data.GetDataPager(portIds, allCode, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//60分钟类型按 60分钟数据查询
                                        }
                                        DataTable auDT = auditData.ToTable();
                                        //for (int i = 0; i < factorsTing.Length; i++)
                                        //{
                                        //    if (factorsTing[i] != "")
                                        //        auDT.Columns.Remove(factorsTing[i]);
                                        //}
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetDataTable("TVOC", auDT, 0, Ade);

                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (type == "列表")
                                {
                                    dtInstrumen = (DataTable)this.ViewState["dt"];
                                    if (dtInstrumen != null)
                                    {
                                        bool a = dtInstrumen.Columns.Contains("Tstamp");
                                        if (a)
                                        {
                                            if (dtInstrumen.Columns.Count > 2)
                                            {
                                                dtInstrumen.Columns["Tstamp"].SetOrdinal(1);
                                            }
                                        }
                                        bool b = dtInstrumen.Columns.Contains("DateTime");
                                        if (b)
                                        {
                                            if (dtInstrumen.Columns.Count > 2)
                                            {
                                                dtInstrumen.Columns["DateTime"].SetOrdinal(1);
                                            }
                                        }
                                    }
                                    if (dtInstrumen.Columns.Contains("OzoneValue"))
                                    {
                                        for (int i = 0; i < dtInstrumen.Rows.Count; i++) //臭氧的数据要乘以1000
                                        {
                                            decimal value = 0M;

                                            if (decimal.TryParse(dtInstrumen.Rows[i]["OzoneValue"].ToString(), out value))
                                            {
                                                dtInstrumen.Rows[i]["OzoneValue"] = DecimalExtension.GetPollutantValue(value * 1000, 0);
                                            }
                                        }
                                    }
                                }
                            }
                            #endregion
                            #region 原始日
                            else if (RadioButtonList1.SelectedValue == "OriDay")
                            {
                                dtBegion = dtpDayBegin.SelectedDate.Value;
                                dtEnd = dtpDayEnd.SelectedDate.Value;
                                dt = new DataTable();
                                dt.Columns.Add("PointId", typeof(System.String));//污染物名称 参数
                                foreach (string colName in cblistTypeName)
                                {
                                    dt.Columns.Add(colName, typeof(System.String));//污染物值
                                }
                                dt.Columns.Add("Tstamp", typeof(System.DateTime));//时间戳
                                //dt.Columns.Add("TVOC", typeof(System.String));//污染物值
                                this.ViewState.Add("dt", dt);

                                dtIcon = new DataTable();
                                dtIcon.Columns.Add("PointId", typeof(System.String));//污染物名称 参数
                                foreach (string colName in cblistTypeName)
                                {
                                    dtIcon.Columns.Add(colName, typeof(System.Decimal));//污染物值
                                }
                                dtIcon.Columns.Add("Tstamp", typeof(System.DateTime));//时间戳
                                //dtIcon.Columns.Add("TVOC", typeof(System.Decimal));
                                this.ViewState.Add("dtIcon", dtIcon);
                                string orderBy1 = "PointId asc,DateTime desc";
                                if (TimeSort.SelectedValue == "时间升序")
                                    orderBy1 = "PointId asc,DateTime asc";
                                if (cblistTypeName.Contains("非甲烷碳氢化合物"))
                                {
                                    string factorWan = "";
                                    if (cblistTypeName.Contains("卤代烃类VOCs"))
                                    {
                                        factorWan += "'卤代烃类VOCs',";
                                    }
                                    if (cblistTypeName.Contains("含氧（氮）类VOCs"))
                                    {
                                        factorWan += "'含氧（氮）类VOCs',";
                                    }
                                    string sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type]
where VOC1TypeGuid IN (SELECT RowGuid from [dbo].[DT_VOC1Type] where VOC1Type in ({0}))"
                , factorWan.TrimEnd(','));
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表")
                                    {

                                        auditData = m_DayOriData.GetDataPagers(portIds, factorCodes, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//原始日数据类型按 原始

                                        DataTable auDT = auditData.ToTable();
                                        for (int j = 0; j < factorsWan.Length; j++)
                                            if (factorsWan[j] != "")
                                                auDT.Columns.Remove(factorsWan[j]);
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetDataTable("非甲烷碳氢化合物", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }

                                }
                                if (cblistTypeName.Contains("卤代烃类VOCs"))
                                {
                                    string factorXi = "";
                                    if (cblistTypeName.Contains("非甲烷碳氢化合物"))
                                    {
                                        factorXi += "'非甲烷碳氢化合物',";
                                    }
                                    if (cblistTypeName.Contains("含氧（氮）类VOCs"))
                                    {
                                        factorXi += "'含氧（氮）类VOCs',";
                                    }
                                    string sql2 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type]
where VOC1TypeGuid IN (SELECT RowGuid from [dbo].[DT_VOC1Type] where VOC1Type in ({0}))"
                , factorXi.TrimEnd(','));
                                    DataTable dt2 = g_DatabaseHelper.ExecuteDataTable(sql2, "AMS_BaseDataConnection");
                                    string[] factorsXi = dtToArr(dt2);
                                    if (type == "列表")
                                    {
                                        auditData = m_DayOriData.GetDataPagers(portIds, factorCodes, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//原始日数据类型按 原始

                                        DataTable auDT = auditData.ToTable();
                                        for (int i = 0; i < factorsXi.Length; i++)
                                            if (factorsXi[i] != "")
                                                auDT.Columns.Remove(factorsXi[i]);
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetDataTable("卤代烃类VOCs", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (cblistTypeName.Contains("含氧（氮）类VOCs"))
                                {
                                    string factorTing = "";
                                    if (cblistTypeName.Contains("非甲烷碳氢化合物"))
                                    {
                                        factorTing += "'非甲烷碳氢化合物',";
                                    }
                                    if (cblistTypeName.Contains("卤代烃类VOCs"))
                                    {
                                        factorTing += "'卤代烃类VOCs',";
                                    }
                                    string sql3 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type]
where VOC1TypeGuid IN (SELECT RowGuid from [dbo].[DT_VOC1Type] where VOC1Type in ({0}))"
                , factorTing.TrimEnd(','));
                                    DataTable dt3 = g_DatabaseHelper.ExecuteDataTable(sql3, "AMS_BaseDataConnection");
                                    string[] factorsTing = dtToArr(dt3);

                                    if (type == "列表")
                                    {
                                        auditData = m_DayOriData.GetDataPagers(portIds, factorCodes, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//原始日数据类型按 原始

                                        DataTable auDT = auditData.ToTable();
                                        for (int i = 0; i < factorsTing.Length; i++)
                                        {
                                            if (factorsTing[i] != "")
                                                auDT.Columns.Remove(factorsTing[i]);
                                        }
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetDataTable("含氧（氮）类VOCs", auDT, 0, Ade);

                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (cblistTypeName.Contains("TVOC"))
                                {
                                    
                                    if (type == "列表")
                                    {
                                        auditData = m_DayOriData.GetDataPagers(portIds, allCode, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//原始日数据类型按 原始

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetDataTable("TVOC", auDT, 0, Ade);

                                        }
                                    }
                                    else
                                    {

                                    }
                                }
                                if (type == "列表")
                                {
                                    dtInstrumen = (DataTable)this.ViewState["dt"];
                                    if (dtInstrumen != null)
                                    {
                                        bool a = dtInstrumen.Columns.Contains("Tstamp");
                                        if (a)
                                        {
                                            if (dtInstrumen.Columns.Count > 2)
                                            {
                                                dtInstrumen.Columns["Tstamp"].SetOrdinal(1);
                                            }
                                        }
                                        bool b = dtInstrumen.Columns.Contains("DateTime");
                                        if (b)
                                        {
                                            if (dtInstrumen.Columns.Count > 2)
                                            {
                                                dtInstrumen.Columns["DateTime"].SetOrdinal(1);
                                            }
                                        }
                                    }
                                    if (dtInstrumen.Columns.Contains("OzoneValue"))
                                    {
                                        for (int i = 0; i < dtInstrumen.Rows.Count; i++) //臭氧的数据要乘以1000
                                        {
                                            decimal value = 0M;

                                            if (decimal.TryParse(dtInstrumen.Rows[i]["OzoneValue"].ToString(), out value))
                                            {
                                                dtInstrumen.Rows[i]["OzoneValue"] = DecimalExtension.GetPollutantValue(value * 1000, 0);
                                            }
                                        }
                                    }
                                }
                            }
                            #endregion
                            #region 原始月
                            else if (RadioButtonList1.SelectedValue == "OriMonth")
                            {
                                string orderBy1 = "PointId asc,Year desc,MonthOfYear desc";
                                if (TimeSort.SelectedValue == "时间升序")
                                    orderBy1 = "PointId asc,Year asc,MonthOfYear asc";
                                dtBegion = dtpMonthBegin.SelectedDate.Value;
                                dtEnd = dtpMonthEnd.SelectedDate.Value;
                                dtMonth = new DataTable();
                                dtMonth.Columns.Add("PointId", typeof(System.String));//污染物名称 参数
                                dtMonth.Columns.Add("Year", typeof(System.Int32));//时间戳
                                dtMonth.Columns.Add("MonthOfYear", typeof(System.Int32));//时间戳

                                foreach (string colName in cblistTypeName)
                                {
                                    dtMonth.Columns.Add(colName, typeof(System.String));//烷烃值
                                }
                                //dtMonth.Columns.Add("TVOC", typeof(System.String));//污染物值
                                this.ViewState.Add("dtMonth", dtMonth);
                                if (cblistTypeName.Contains("非甲烷碳氢化合物"))
                                {
                                    string factorWan = "";
                                    if (cblistTypeName.Contains("卤代烃类VOCs"))
                                    {
                                        factorWan += "'卤代烃类VOCs',";
                                    }
                                    if (cblistTypeName.Contains("含氧（氮）类VOCs"))
                                    {
                                        factorWan += "'含氧（氮）类VOCs',";
                                    }
                                    string sql1 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type]
where VOC1TypeGuid IN (SELECT RowGuid from [dbo].[DT_VOC1Type] where VOC1Type in ({0}))"
                , factorWan.TrimEnd(','));
                                    DataTable dt1 = g_DatabaseHelper.ExecuteDataTable(sql1, "AMS_BaseDataConnection");
                                    string[] factorsWan = dtToArr(dt1);

                                    if (type == "列表")
                                    {

                                        auditData = m_MonthOriData.GetOriDataPager(portIds, factorCodes, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//原始月数据类型按 原始月数据查询

                                        DataTable auDT = auditData.ToTable();
                                        for (int j = 0; j < factorsWan.Length; j++)
                                            if (factorsWan[j] != "")
                                                auDT.Columns.Remove(factorsWan[j]);
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetMonthDataTable("非甲烷碳氢化合物", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }

                                }
                                if (cblistTypeName.Contains("卤代烃类VOCs"))
                                {
                                    string factorXi = "";
                                    if (cblistTypeName.Contains("非甲烷碳氢化合物"))
                                    {
                                        factorXi += "'非甲烷碳氢化合物',";
                                    }
                                    if (cblistTypeName.Contains("含氧（氮）类VOCs"))
                                    {
                                        factorXi += "'含氧（氮）类VOCs',";
                                    }
                                    string sql2 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type]
where VOC1TypeGuid IN (SELECT RowGuid from [dbo].[DT_VOC1Type] where VOC1Type in ({0}))"
                , factorXi.TrimEnd(','));
                                    DataTable dt2 = g_DatabaseHelper.ExecuteDataTable(sql2, "AMS_BaseDataConnection");
                                    string[] factorsXi = dtToArr(dt2);
                                    if (type == "列表")
                                    {
                                        auditData = m_MonthOriData.GetOriDataPager(portIds, factorCodes, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//原始月数据类型按 原始月数据查询

                                        DataTable auDT = auditData.ToTable();
                                        for (int i = 0; i < factorsXi.Length; i++)
                                            if (factorsXi[i] != "")
                                                auDT.Columns.Remove(factorsXi[i]);
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetMonthDataTable("卤代烃类VOCs", auDT, 0, Ade);
                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (cblistTypeName.Contains("含氧（氮）类VOCs"))
                                {
                                    string factorTing = "";
                                    if (cblistTypeName.Contains("非甲烷碳氢化合物"))
                                    {
                                        factorTing += "'非甲烷碳氢化合物',";
                                    }
                                    if (cblistTypeName.Contains("卤代烃类VOCs"))
                                    {
                                        factorTing += "'卤代烃类VOCs',";
                                    }
                                    string sql3 = string.Format(@"select PollutantCode from [dbo].[DT_VOC3Type]
where VOC1TypeGuid IN (SELECT RowGuid from [dbo].[DT_VOC1Type] where VOC1Type in ({0}))"
                , factorTing.TrimEnd(','));
                                    DataTable dt3 = g_DatabaseHelper.ExecuteDataTable(sql3, "AMS_BaseDataConnection");
                                    string[] factorsTing = dtToArr(dt3);

                                    if (type == "列表")
                                    {
                                        auditData = m_MonthOriData.GetOriDataPager(portIds, factorCodes, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//原始月数据类型按 原始月数据查询

                                        DataTable auDT = auditData.ToTable();
                                        for (int i = 0; i < factorsTing.Length; i++)
                                        {
                                            if (factorsTing[i] != "")
                                                auDT.Columns.Remove(factorsTing[i]);
                                        }
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetMonthDataTable("含氧（氮）类VOCs", auDT, 0, Ade);

                                        }
                                    }
                                    else
                                    {
                                    }
                                }
                                if (cblistTypeName.Contains("TVOC"))
                                {
                                    

                                    if (type == "列表")
                                    {
                                        auditData = m_MonthOriData.GetOriDataPager(portIds, allCode, dtBegion, dtEnd, pageSize, pageNo, out recordTotal, orderBy1);//原始月数据类型按 原始月数据查询

                                        DataTable auDT = auditData.ToTable();
                                        if (auDT.DefaultView.Count > 0)
                                        {
                                            GetMonthDataTable("TVOC", auDT, 0, Ade);

                                        }
                                    }
                                    else
                                    {

                                    }
                                }
                                if (type == "列表")
                                {
                                    dtInstrumen = (DataTable)this.ViewState["dtMonth"];
                                    if (dtInstrumen != null)
                                    {
                                        bool a = dtInstrumen.Columns.Contains("Tstamp");
                                        if (a)
                                        {
                                            if (dtInstrumen.Columns.Count > 2)
                                            {
                                                dtInstrumen.Columns["Tstamp"].SetOrdinal(1);
                                            }
                                        }
                                        bool b = dtInstrumen.Columns.Contains("DateTime");
                                        if (b)
                                        {
                                            if (dtInstrumen.Columns.Count > 2)
                                            {
                                                dtInstrumen.Columns["DateTime"].SetOrdinal(1);
                                            }
                                        }
                                    }
                                    if (dtInstrumen.Columns.Contains("OzoneValue"))
                                    {
                                        for (int i = 0; i < dtInstrumen.Rows.Count; i++) //臭氧的数据要乘以1000
                                        {
                                            decimal value = 0M;

                                            if (decimal.TryParse(dtInstrumen.Rows[i]["OzoneValue"].ToString(), out value))
                                            {
                                                dtInstrumen.Rows[i]["OzoneValue"] = DecimalExtension.GetPollutantValue(value * 1000, 0);
                                            }
                                        }
                                    }
                                }
                            }
                            #endregion

                        }
                        DataTable datas = UpdateExportColumnNameNew(dtInstrumen.DefaultView);
                        ExcelHelper.DataTableToExcel(datas, "TVOCs", "TVOCs数据", this.Page);
                    }
                    #endregion


                }
            }
            catch(Exception ex)
            {
                log.Error(ex);
            }
        }
        /// <summary>
        /// 修改要导出的数据表中的列名
        /// </summary>
        /// <param name="dv">原始数据表</param>
        /// <returns></returns>
        private DataTable UpdateExportColumnNameNew(DataView dv)
        {
            
            DataTable dtOld = dv.ToTable();
            DataTable dtNew = dtOld.Clone();
            //dtNew.Columns["DateTime"].DataType = typeof(string);
            for (int i = 0; i < dtOld.Rows.Count; i++)
            {
                DataRow drOld = dtOld.Rows[i];
                DataRow drNew = dtNew.NewRow();
                foreach (DataColumn dcOld in dtOld.Columns)
                {
                    if (!string.IsNullOrWhiteSpace(drOld[dcOld].ToString()))
                    {
                        drNew[dcOld.ColumnName] = drOld[dcOld].ToString().Replace("<br/>", " \r\n");
                    }

                }
                dtNew.Rows.Add(drNew);
            }
            dtNew.Columns.Add("测点", typeof(string)).SetOrdinal(0);
            for (int i = 0; i < dtNew.Rows.Count; i++)
            {
                DataRow drNew = dtNew.Rows[i];

                MonitoringPointEntity monitoringPoint = monitoringPointAir.RetrieveEntityByPointId(Convert.ToInt32(drNew["PointId"].ToString()));

                if (monitoringPoint != null)
                {
                    drNew["测点"] = monitoringPoint.MonitoringPointName;
                }
            }

            for (int i = 0; i < dtNew.Columns.Count; i++)
            {
                DataColumn dcNew = dtNew.Columns[i];
                //追加日期
                if (dcNew.ColumnName == "Tstamp")
                {
                    string tstcolformat = "{0:MM-dd HH:mm}";
                    dcNew.ColumnName = "日期";
                }
                else if (dcNew.ColumnName == "DateTime")
                {
                    string tstcolformat = "{0:yyyy-MM-dd}";
                    dcNew.ColumnName = "日期";
                }
                else if (dcNew.ColumnName == "Year")
                {

                    dcNew.ColumnName = "年份";
                }
                else if (dcNew.ColumnName == "WeekOfYear")
                {

                    dcNew.ColumnName = "周";
                }
                else if (dcNew.ColumnName == "MonthOfYear")
                {

                    dcNew.ColumnName = "月份";
                }
                else if (dcNew.ColumnName == "SeasonOfYear")
                {

                    dcNew.ColumnName = "季";
                }
                //对因子列进行处理
                else if (isFactor(dcNew.ColumnName))
                {
                    IPollutant factor = factorCbxRsm.GetFactors().FirstOrDefault(x => x.PollutantCode.Equals(dcNew.ColumnName));
                    if (factor != null)
                    {
                        string name = factor.PollutantName;
                        string unit = factor.PollutantMeasureUnit;
                        dcNew.ColumnName = name + "(" + unit + ")";
                    }
                }

                else if (dcNew.ColumnName == "序号" || dcNew.ColumnName == "PointId" || dcNew.ColumnName.Contains("_Status") || dcNew.ColumnName.Contains("_DataFlag") || dcNew.ColumnName.Contains("_AuditFlag"))
                {
                    dtNew.Columns.Remove(dcNew);
                    i--;
                }
            }
            return dtNew;
        }
        /// <summary>
        /// 修改要导出的数据表中的列名
        /// </summary>
        /// <param name="dv">原始数据表</param>
        /// <returns></returns>
        private DataTable UpdateExportColumnName(DataView dv)
        {
            DataTable dtOld = dv.ToTable();
            DataTable dtNew = dtOld.Clone();
            //dtNew.Columns["DateTime"].DataType = typeof(string);
            for (int i = 0; i < dtOld.Rows.Count; i++)
            {
                DataRow drOld = dtOld.Rows[i];
                DataRow drNew = dtNew.NewRow();
                foreach (DataColumn dcOld in dtOld.Columns)
                {
                    if (!string.IsNullOrWhiteSpace(drOld[dcOld].ToString()))
                    {
                        drNew[dcOld.ColumnName] = drOld[dcOld].ToString().Replace("<br/>", " \r\n");
                    }

                }
                dtNew.Rows.Add(drNew);
            }


            dtNew.Columns.Add("测点", typeof(string)).SetOrdinal(0);
            for (int i = 0; i < dtNew.Rows.Count; i++)
            {
                DataRow drNew = dtNew.Rows[i];

                MonitoringPointEntity monitoringPoint = monitoringPointAir.RetrieveEntityByPointId(Convert.ToInt32(drNew["PointId"].ToString()));

                if (monitoringPoint != null)
                {
                    drNew["测点"] = monitoringPoint.MonitoringPointName;
                }

                if (ddlDataSource.SelectedValue == "AuditData")
                {
                    if (radlDataType.SelectedValue == "Day")
                    {
                        drNew["DateTime"] = string.Format("{0:MM-dd HH:mm}", drNew["DateTime"].ToString());
                    }
                    else if (radlDataType.SelectedValue == "Month" || radlDataType.SelectedValue == "Week")
                    {
                        drNew["DateTime"] = string.Format("{0:yyyy-MM-dd}", drNew["DateTime"].ToString());

                    }
                }
                else
                {
                    if (RadioButtonList1.SelectedValue == "OriDay")
                    {
                        drNew["Tstamp"] = string.Format("{0:MM-dd HH:mm}", drNew["Tstamp"].ToString());
                    }
                    else if (RadioButtonList1.SelectedValue == "OriMonth")
                    {
                        drNew["Tstamp"] = string.Format("{0:yyyy-MM-dd}", drNew["Tstamp"].ToString());

                    }
                }

            }

            for (int i = 0; i < dtNew.Columns.Count; i++)
            {
                DataColumn dcNew = dtNew.Columns[i];
                //追加日期
                if (dcNew.ColumnName == "Tstamp")
                {
                    string tstcolformat = "{0:MM-dd HH:mm}";
                    dcNew.ColumnName = "日期";
                }
                else if (dcNew.ColumnName == "DateTime")
                {
                    string tstcolformat = "{0:yyyy-MM-dd}";
                    dcNew.ColumnName = "日期";
                }
                else if (dcNew.ColumnName == "Year")
                {

                    dcNew.ColumnName = "年份";
                }
                else if (dcNew.ColumnName == "WeekOfYear")
                {

                    dcNew.ColumnName = "周";
                }
                else if (dcNew.ColumnName == "MonthOfYear")
                {

                    dcNew.ColumnName = "月份";
                }
                else if (dcNew.ColumnName == "SeasonOfYear")
                {

                    dcNew.ColumnName = "季";
                }
                //对因子列进行处理
                else if (isFactor(dcNew.ColumnName))
                {
                    IPollutant factor = factorCbxRsm.GetFactors().FirstOrDefault(x => x.PollutantCode.Equals(dcNew.ColumnName));
                    if (factor != null)
                    {
                        string name = factor.PollutantName;
                        string unit = factor.PollutantMeasureUnit;
                        dcNew.ColumnName = name + "(" + unit + ")";
                    }
                }

                else if (dcNew.ColumnName == "序号" || dcNew.ColumnName == "PointId" || dcNew.ColumnName.Contains("_Status") || dcNew.ColumnName.Contains("_DataFlag") || dcNew.ColumnName.Contains("_AuditFlag"))
                {
                    dtNew.Columns.Remove(dcNew);
                    i--;
                }
            }
            return dtNew;
        }
        /// <summary>
        /// 判断一个字符串是否为因子编码
        /// </summary>
        /// <param name="factorCode"></param>
        /// <returns></returns>
        public bool isFactor(string factorCode)
        {
            string reg = "^[A-Za-z]+[0-9]{4,7}$";
            if (Regex.IsMatch(factorCode, reg))
            {
                return true;
            }
            return false;
        }
        #endregion
        /// <summary>
        /// 数据类型时间框选择
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        protected void radlDataType_SelectedIndexChanged(object sender, EventArgs e)
        {
            gridAudit.CurrentPageIndex = 0;
            //小时数据
            if (radlDataType.SelectedValue == "Hour")
            {
                dbtHour.Visible = true;
                dbtDay.Visible = false;
                dbtWeek.Visible = false;
                dbtMonth.Visible = false;
                dbtSeason.Visible = false;
                dbtYear.Visible = false;
            }
            //日数据
            else if (radlDataType.SelectedValue == "Day")
            {
                dbtDay.Visible = true;

                dbtHour.Visible = false;
                dbtWeek.Visible = false;
                dbtMonth.Visible = false;
                dbtSeason.Visible = false;
                dbtYear.Visible = false;

            }
            //周数据
            else if (radlDataType.SelectedValue == "Week")
            {
                dbtWeek.Visible = true;

                dbtHour.Visible = false;
                dbtDay.Visible = false;
                dbtMonth.Visible = false;
                dbtSeason.Visible = false;
                dbtYear.Visible = false;

            }
            //月数据
            else if (radlDataType.SelectedValue == "Month")
            {
                dbtMonth.Visible = true;

                dbtHour.Visible = false;
                dbtDay.Visible = false;
                dbtWeek.Visible = false;
                dbtSeason.Visible = false;
                dbtYear.Visible = false;

            }
            //季数据
            else if (radlDataType.SelectedValue == "Season")
            {
                dbtSeason.Visible = true;

                dbtHour.Visible = false;
                dbtDay.Visible = false;
                dbtWeek.Visible = false;
                dbtMonth.Visible = false;
                dbtYear.Visible = false;

            }
            //年数据
            else if (radlDataType.SelectedValue == "Year")
            {
                dbtYear.Visible = true;

                dbtHour.Visible = false;
                dbtDay.Visible = false;
                dbtWeek.Visible = false;
                dbtMonth.Visible = false;
                dbtSeason.Visible = false;

            }

        }
        /// <summary>
        /// 获取数据源 年数据
        /// </summary>
        public void GetYearDataTable(string ColumnName, DataTable auDT, int type, int DecimalNum)
        {
            if (type == 0)
            {
                DataTable InstrumenTotalDt = (DataTable)this.ViewState["dtYear"];



                if (InstrumenTotalDt.DefaultView.Count > 0)//该表已经有数据了 修改数据 否则就是填充该表
                {
                    foreach (DataRow dr in auDT.Rows)
                    {
                        decimal wanValue = 0;
                        foreach (DataColumn dc in auDT.Columns)
                        {
                            if (dc.ColumnName != "PointId" && dc.ColumnName != "Year")
                            {
                                wanValue += dr[dc.ColumnName] != DBNull.Value ? DecimalExtension.GetPollutantValue(Convert.ToDecimal(dr[dc.ColumnName]), DecimalNum) : 0;
                            }
                        }

                        DataRow[] drs = InstrumenTotalDt.Select(string.Format("Year='{0}'", dr["Year"]));

                        if (drs.Length > 0)
                        {
                            if (wanValue == 0)
                            {
                                drs[0][ColumnName] = "";

                            }
                            else
                            {
                                drs[0][ColumnName] = wanValue.ToString();
                            }
                        }

                    }
                }
                else
                {
                    foreach (DataRow dr in auDT.Rows)
                    {
                        decimal wanValue = 0;
                        DataRow odr = InstrumenTotalDt.NewRow();

                        odr["PointId"] = dr["PointId"];
                        odr["Year"] = dr["Year"];
                        foreach (DataColumn dc in auDT.Columns)
                        {
                            if (dc.ColumnName != "PointId" && dc.ColumnName != "Year")
                            {
                                wanValue += dr[dc.ColumnName] != DBNull.Value ? DecimalExtension.GetPollutantValue(Convert.ToDecimal(dr[dc.ColumnName]), DecimalNum) : 0;
                            }
                        }
                        if (wanValue == 0)
                        {
                            odr[ColumnName] = "";

                        }
                        else
                        {
                            odr[ColumnName] = wanValue.ToString();
                        }
                        InstrumenTotalDt.Rows.Add(odr);
                        InstrumenTotalDt.AcceptChanges();
                    }
                }
            }
        }
        /// <summary>
        /// 获取数据源 周数据
        /// </summary>
        public void GetWeekDataTable(string ColumnName, DataTable auDT, int type, int DecimalNum)
        {
            if (type == 0)
            {
                DataTable InstrumenTotalDt = (DataTable)this.ViewState["dtWeek"];



                if (InstrumenTotalDt.DefaultView.Count > 0)//该表已经有数据了 修改数据 否则就是填充该表
                {
                    foreach (DataRow dr in auDT.Rows)
                    {
                        decimal wanValue = 0;
                        foreach (DataColumn dc in auDT.Columns)
                        {
                            if (dc.ColumnName != "PointId" && dc.ColumnName != "Year" && dc.ColumnName != "WeekOfYear")
                            {
                                wanValue += dr[dc.ColumnName] != DBNull.Value ? DecimalExtension.GetPollutantValue(Convert.ToDecimal(dr[dc.ColumnName]), DecimalNum) : 0;
                            }
                        }

                        DataRow[] drs = InstrumenTotalDt.Select(string.Format("WeekOfYear='{0}'", dr["WeekOfYear"]));

                        if (drs.Length > 0)
                        {
                            if (wanValue == 0)
                            {
                                drs[0][ColumnName] = "";

                            }
                            else
                            {
                                drs[0][ColumnName] = wanValue.ToString();
                            }
                        }

                    }
                }
                else
                {
                    foreach (DataRow dr in auDT.Rows)
                    {
                        decimal wanValue = 0;
                        DataRow odr = InstrumenTotalDt.NewRow();

                        odr["PointId"] = dr["PointId"];
                        odr["Year"] = dr["Year"];
                        odr["WeekOfYear"] = dr["WeekOfYear"];
                        foreach (DataColumn dc in auDT.Columns)
                        {
                            if (dc.ColumnName != "PointId" && dc.ColumnName != "Year" && dc.ColumnName != "WeekOfYear")
                            {
                                wanValue += dr[dc.ColumnName] != DBNull.Value ? DecimalExtension.GetPollutantValue(Convert.ToDecimal(dr[dc.ColumnName]), DecimalNum) : 0;
                            }
                        }
                        if (wanValue == 0)
                        {
                            odr[ColumnName] = "";

                        }
                        else
                        {
                            odr[ColumnName] = wanValue.ToString();
                        }
                        InstrumenTotalDt.Rows.Add(odr);
                        InstrumenTotalDt.AcceptChanges();
                    }
                }
            }
        }
        /// <summary>
        /// 获取数据源 季数据
        /// </summary>
        public void GetSeasonDataTable(string ColumnName, DataTable auDT, int type, int DecimalNum)
        {
            if (type == 0)
            {
                DataTable InstrumenTotalDt = (DataTable)this.ViewState["dtSeason"];



                if (InstrumenTotalDt.DefaultView.Count > 0)//该表已经有数据了 修改数据 否则就是填充该表
                {
                    foreach (DataRow dr in auDT.Rows)
                    {
                        decimal wanValue = 0;
                        foreach (DataColumn dc in auDT.Columns)
                        {
                            if (dc.ColumnName != "PointId" && dc.ColumnName != "Year" && dc.ColumnName != "SeasonOfYear")
                            {
                                wanValue += dr[dc.ColumnName] != DBNull.Value ? DecimalExtension.GetPollutantValue(Convert.ToDecimal(dr[dc.ColumnName]), DecimalNum) : 0;
                            }
                        }

                        DataRow[] drs = InstrumenTotalDt.Select(string.Format("SeasonOfYear='{0}'", dr["SeasonOfYear"]));

                        if (drs.Length > 0)
                        {
                            if (wanValue == 0)
                            {
                                drs[0][ColumnName] = "";

                            }
                            else
                            {
                                drs[0][ColumnName] = wanValue.ToString();
                            }
                        }

                    }
                }
                else
                {
                    foreach (DataRow dr in auDT.Rows)
                    {
                        decimal wanValue = 0;
                        DataRow odr = InstrumenTotalDt.NewRow();

                        odr["PointId"] = dr["PointId"];
                        odr["Year"] = dr["Year"];
                        odr["SeasonOfYear"] = dr["SeasonOfYear"];
                        foreach (DataColumn dc in auDT.Columns)
                        {
                            if (dc.ColumnName != "PointId" && dc.ColumnName != "Year" && dc.ColumnName != "SeasonOfYear")
                            {
                                wanValue += dr[dc.ColumnName] != DBNull.Value ? DecimalExtension.GetPollutantValue(Convert.ToDecimal(dr[dc.ColumnName]), DecimalNum) : 0;
                            }
                        }
                        if (wanValue == 0)
                        {
                            odr[ColumnName] = "";

                        }
                        else
                        {
                            odr[ColumnName] = wanValue.ToString();
                        }
                        InstrumenTotalDt.Rows.Add(odr);
                        InstrumenTotalDt.AcceptChanges();
                    }
                }
            }
        }
        /// <summary>
        /// 获取数据源 月数据
        /// </summary>
        public void GetMonthDataTable(string ColumnName, DataTable auDT, int type, int DecimalNum)
        {
            if (type == 0)
            {
                DataTable InstrumenTotalDt = (DataTable)this.ViewState["dtMonth"];



                if (InstrumenTotalDt.DefaultView.Count > 0)//该表已经有数据了 修改数据 否则就是填充该表
                {
                    foreach (DataRow dr in auDT.Rows)
                    {
                        decimal wanValue = 0;
                        foreach (DataColumn dc in auDT.Columns)
                        {
                            if (dc.ColumnName != "PointId" && dc.ColumnName != "Year" && dc.ColumnName != "MonthOfYear")
                            {
                                wanValue += dr[dc.ColumnName] != DBNull.Value ? DecimalExtension.GetPollutantValue(Convert.ToDecimal(dr[dc.ColumnName]), DecimalNum) : 0;
                            }
                        }

                        DataRow[] drs = InstrumenTotalDt.Select(string.Format("MonthOfYear='{0}'", dr["MonthOfYear"]));

                        if (drs.Length > 0)
                        {
                            if (wanValue == 0)
                            {
                                drs[0][ColumnName] = "";

                            }
                            else
                            {
                                drs[0][ColumnName] = wanValue.ToString();
                            }
                        }

                    }
                }
                else
                {
                    foreach (DataRow dr in auDT.Rows)
                    {
                        decimal wanValue = 0;
                        DataRow odr = InstrumenTotalDt.NewRow();

                        odr["PointId"] = dr["PointId"];
                        odr["Year"] = dr["Year"];
                        odr["MonthOfYear"] = dr["MonthOfYear"];
                        foreach (DataColumn dc in auDT.Columns)
                        {
                            if (dc.ColumnName != "PointId" && dc.ColumnName != "Year" && dc.ColumnName != "MonthOfYear")
                            {
                                wanValue += dr[dc.ColumnName] != DBNull.Value ? DecimalExtension.GetPollutantValue(Convert.ToDecimal(dr[dc.ColumnName]), DecimalNum) : 0;
                            }
                        }
                        if (wanValue == 0)
                        {
                            odr[ColumnName] = "";

                        }
                        else
                        {
                            odr[ColumnName] = wanValue.ToString();
                        }
                        InstrumenTotalDt.Rows.Add(odr);
                        InstrumenTotalDt.AcceptChanges();
                    }
                }
            }
        }
        
        /// <summary>
        /// 获取数据源 日数据
        /// </summary>
        public void GetDataTable(string columnName, DataTable auDT, int type, int DecimalNum)
        {
            if (type == 0)
            {
                DataTable InstrumenTotalDt = (DataTable)this.ViewState["dt"];

                if(auDT.Columns.Contains("DateTime"))
                {
                    auDT.Columns["DateTime"].ColumnName = "Tstamp";
                }
                if (InstrumenTotalDt.DefaultView.Count > 0)//该表已经有数据了 修改数据 否则就是填充该表
                {
                    foreach (DataRow dr in auDT.Rows)
                    {
                        //IPollutant iFactorCode = m_AirPollutantService.GetPollutantInfo(factorCode);

                        decimal wanValue = 0;
                        foreach (DataColumn dc in auDT.Columns)
                        {
                            if (dc.ColumnName != "PointId" && dc.ColumnName != "Tstamp" && !dc.ColumnName.Contains("_Status") && !dc.ColumnName.Contains("_AuditFlag") && !dc.ColumnName.Contains("_DataFlag"))
                            {
                                wanValue += dr[dc.ColumnName] != DBNull.Value ? DecimalExtension.GetPollutantValue(Convert.ToDecimal(dr[dc.ColumnName]), DecimalNum) : 0;
                            }
                        }

                        DataRow[] drs = InstrumenTotalDt.Select(string.Format("Tstamp='{0}' and PointId={1}", dr["Tstamp"], dr["PointId"]));

                        if (drs.Length > 0)
                        {
                            if (wanValue == 0)
                            {
                                drs[0][columnName] = "";
                            }
                            else
                            {
                                drs[0][columnName] = wanValue.ToString();
                            }
                        }

                    }
                }
                else
                {
                    foreach (DataRow dr in auDT.Rows)
                    {
                        decimal wanValue = 0;
                        DataRow odr = InstrumenTotalDt.NewRow();

                        odr["PointId"] = dr["PointId"];
                        odr["Tstamp"] = dr["Tstamp"];
                        foreach (DataColumn dc in auDT.Columns)
                        {
                            if (dc.ColumnName != "PointId" && dc.ColumnName != "Tstamp" && !dc.ColumnName.Contains("_Status")&&!dc.ColumnName.Contains("_AuditFlag")&&!dc.ColumnName.Contains("_DataFlag"))
                            {
                                wanValue += dr[dc.ColumnName] != DBNull.Value ? DecimalExtension.GetPollutantValue(Convert.ToDecimal(dr[dc.ColumnName]), DecimalNum) : 0;
                            }
                        }
                        if (wanValue == 0)
                        {
                            odr[columnName] = "";
                        }
                        else
                        {
                            odr[columnName] = wanValue.ToString();
                        }
                        InstrumenTotalDt.Rows.Add(odr);
                        InstrumenTotalDt.AcceptChanges();
                    }
                }
            }
        }


        #region 周数据更新日期范围
        /// <summary>
        /// 周数据更新日期范围
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        protected void weekBegin_SelectedDateChanged(object sender, Telerik.Web.UI.Calendar.SelectedDateChangedEventArgs e)
        {
            BindWeekComboBox();
        }
        /// <summary>
        /// 周数据更新日期范围
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        protected void weekFrom_SelectedIndexChanged(object sender, DropDownListEventArgs e)
        {
            SetLiteral();
        }
        /// <summary>
        /// 周数据更新日期范围
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        protected void weekEnd_SelectedDateChanged(object sender, Telerik.Web.UI.Calendar.SelectedDateChangedEventArgs e)
        {
            BindWeekComboBox();
        }
        /// <summary>
        /// 周数据更新日期范围
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        protected void weekTo_SelectedIndexChanged(object sender, DropDownListEventArgs e)
        {
            SetLiteral();
        }

        #endregion
        /// <summary>   
        /// Datatable转换为Json   
        /// </summary>   
        /// <param name="table">Datatable对象</param>   
        /// <returns>Json字符串</returns>   
        public static string ToJson(DataTable dt)
        {
            StringBuilder jsonString = new StringBuilder();
            jsonString.Append("[");
            DataRowCollection drc = dt.Rows;
            for (int i = 0; i < drc.Count; i++)
            {
                jsonString.Append("{");
                for (int j = 0; j < dt.Columns.Count; j++)
                {
                    string strKey = dt.Columns[j].ColumnName;
                    string strValue = drc[i][j].ToString();
                    Type type = dt.Columns[j].DataType;
                    jsonString.Append("\"" + strKey + "\":");
                    strValue = StringFormat(strKey, strValue, type);
                    if (j < dt.Columns.Count - 1)
                    {
                        jsonString.Append(strValue + ",");
                    }
                    else
                    {
                        jsonString.Append(strValue);
                    }
                }
                jsonString.Append("},");
            }
            if (jsonString.ToString() != "[") jsonString.Remove(jsonString.Length - 1, 1);
            jsonString.Append("]");
            return jsonString.ToString();
        }

        /// <summary>  
        /// 格式化字符型、日期型、布尔型  
        /// </summary>  
        /// <param name="str"></param>  
        /// <param name="type"></param>  
        /// <returns></returns>  
        private static string StringFormat(string key, string str, Type type)
        {
            if (key.Equals("Tstamp", StringComparison.OrdinalIgnoreCase) && !string.IsNullOrWhiteSpace(str))
            {
                str = ConvertDateTimeToInt(Convert.ToDateTime(str)).ToString();
            }
            if (key.Equals("DateTime", StringComparison.OrdinalIgnoreCase) && !string.IsNullOrWhiteSpace(str))
            {
                str = ConvertDateTimeToInt(Convert.ToDateTime(str)).ToString();
            }
            if (type == typeof(string))
            {
                str = String2Json(str);
                str = "\"" + str + "\"";
            }
            else if (type == typeof(DateTime))
            {
                str = "\"" + str + "\"";
            }
            else if (type == typeof(bool))
            {
                str = str.ToLower();
            }
            else if (string.IsNullOrEmpty(str))
            {
                str = "null";
            }
            return str;
        }
        /// <summary>
        /// DataTable转换为一维字符串数组
        /// </summary>
        /// <returns></returns>
        public static string[] dtToArr(DataTable dt)
        {
            if (dt == null || dt.Rows.Count == 0)
            {
                return new string[0];
            }
            else
            {
                string[] sr = new string[dt.Rows.Count];
                for (int i = 0; i < dt.Rows.Count; i++)
                {
                    if (Convert.IsDBNull(dt.Rows[i][0]))
                    {
                        sr[i] = "";
                    }
                    else
                    {
                        sr[i] = dt.Rows[i][0] + "";
                    }
                }
                return sr;
            }
        }
        /// <summary>
        /// DataTable转换为字符串
        /// </summary>
        /// <returns></returns>
        public static string dtToString(DataTable dt)
        {
            if (dt == null || dt.Rows.Count == 0)
            {
                return string.Empty;
            }
            else
            {
                string sr = string.Empty;
                for (int i = 0; i < dt.Rows.Count; i++)
                {
                    sr += dt.Rows[i][0] + ";";
                }
                return sr;
            }
        }
        /// <summary>  
        /// 过滤特殊字符  
        /// </summary>  
        /// <param name="s"></param>  
        /// <returns></returns>  
        private static string String2Json(String s)
        {
            StringBuilder sb = new StringBuilder();
            for (int i = 0; i < s.Length; i++)
            {
                char c = s.ToCharArray()[i];
                switch (c)
                {
                    case '\"':
                        sb.Append("\\\""); break;
                    case '\\':
                        sb.Append("\\\\"); break;
                    case '/':
                        sb.Append("\\/"); break;
                    case '\b':
                        sb.Append("\\b"); break;
                    case '\f':
                        sb.Append("\\f"); break;
                    case '\n':
                        sb.Append("\\n"); break;
                    case '\r':
                        sb.Append("\\r"); break;
                    case '\t':
                        sb.Append("\\t"); break;
                    default:
                        sb.Append(c); break;
                }
            }
            return sb.ToString();
        }

        /// <summary>  
        ///DateTime时间格式转换为Unix时间戳格式  
        /// </summary>  
        /// <param name="time">时间</param>  
        /// <returns>long</returns>  
        public static long ConvertDateTimeToInt(System.DateTime time)
        {
            System.DateTime startTime = TimeZone.CurrentTimeZone.ToLocalTime(new System.DateTime(1970, 1, 1, 0, 0, 0, 0));
            long t = (time.Ticks - startTime.AddHours(-8).Ticks) / 10000;   //除10000调整为13位      
            return t;
        }

        #region 绑定图表
        private void BindChart()
        {
            RegisterScript("InitGroupChart();");
        }

        private void BindCharts()
        {
            RegisterScript("CreatCharts();");
        }
        #endregion
        /// <summary>
        /// 绑定周
        /// </summary>
        private void BindWeekComboBox()
        {
            weekFrom.DataValueField = "value";
            weekFrom.DataTextField = "text";
            weekFrom.DataSource = ChinaDate.GetWeekOfMonth(weekBegin.SelectedDate.Value);
            weekFrom.DataBind();
            weekTo.DataValueField = "value";
            weekTo.DataTextField = "text";
            weekTo.DataSource = ChinaDate.GetWeekOfMonth(weekEnd.SelectedDate.Value);
            weekTo.DataBind();
            SetLiteral();
        }
        /// <summary>
        /// 显示所选周的日期
        /// </summary>
        private void SetLiteral()
        {
            DateTime endDate = DateTime.ParseExact(weekTo.SelectedValue, "yyyy-MM-dd", null).AddDays(6);
            txtweekF.Text = string.Format("{0:yyyy-MM-dd}", weekFrom.SelectedValue);
            txtweekT.Text = string.Format("{0:yyyy-MM-dd}", endDate);
        }

        /// <summary>
        /// 原始审核数据源切换
        /// </summary>
        protected void ddlDataSource_SelectedIndexChanged(object sender, DropDownListEventArgs e)
        {
            if (ddlDataSource.SelectedValue == "OriData")
            {
                radlDataType.Visible = false;
                RadioButtonList1.Visible = true;
                dtpHour.Visible = true;
                dtpDay.Visible = false;
                dtpMonth.Visible = false;
                dbtHour.Visible = false;
                dbtDay.Visible = false;
                dbtWeek.Visible = false;
                dbtMonth.Visible = false;
                dbtSeason.Visible = false;
                dbtYear.Visible = false;
            }
            if (ddlDataSource.SelectedValue == "AuditData")
            {
                radlDataType.Visible = true;
                RadioButtonList1.Visible = false;

                dtpHour.Visible = false;
                dtpDay.Visible = false;
                dtpMonth.Visible = false;
                dbtHour.Visible = true;
                dbtDay.Visible = false;
                dbtWeek.Visible = false;
                dbtMonth.Visible = false;
                dbtSeason.Visible = false;
                dbtYear.Visible = false;
            }
        }
        /// <summary>
        /// 原始数据对应数据源切换
        /// </summary>
        protected void RadioButtonList1_SelectedIndexChanged(object sender, EventArgs e)
        {
            gridAudit.CurrentPageIndex = 0;
            if (RadioButtonList1.SelectedValue == "Min1")
            {
                dtpHour.Visible = true;
                dtpDay.Visible = false;
                dtpMonth.Visible = false;
                dtpBegin.DateInput.DateFormat = "yyyy-MM-dd HH:mm:ss";
                dtpEnd.DateInput.DateFormat = "yyyy-MM-dd HH:mm:ss";
            }
            else if (RadioButtonList1.SelectedValue == "Min5")
            {
                dtpHour.Visible = true;
                dtpDay.Visible = false;
                dtpMonth.Visible = false;
                dtpBegin.DateInput.DateFormat = "yyyy-MM-dd HH:mm";
                dtpEnd.DateInput.DateFormat = "yyyy-MM-dd HH:mm";
            }
            else if (RadioButtonList1.SelectedValue == "Min60")
            {
                dtpHour.Visible = true;
                dtpDay.Visible = false;
                dtpMonth.Visible = false;
                dtpBegin.DateInput.DateFormat = "yyyy-MM-dd HH:mm";
                dtpEnd.DateInput.DateFormat = "yyyy-MM-dd HH:mm";
            }
            else if (RadioButtonList1.SelectedValue == "OriDay")
            {
                dtpHour.Visible = false;
                dtpDay.Visible = true;
                dtpMonth.Visible = false;
                //dtpBegin.DateInput.DateFormat = "yyyy-MM-dd";
                //dtpEnd.DateInput.DateFormat = "yyyy-MM-dd";
            }
            else
            {
                dtpHour.Visible = false;
                dtpDay.Visible = false;
                dtpMonth.Visible = true;
                //dtpBegin.DateInput.DateFormat = "yyyy-MM";
                //dtpEnd.DateInput.DateFormat = "yyyy-MM";
            }
        }
        /// <summary>
        /// 图表按站点（因子）显示切换
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        protected void PointFactor_SelectedIndexChanged(object sender, EventArgs e)
        {
            HiddenPointFactor.Value = PointFactor.SelectedValue;
            RegisterScript("PointFactor('" + PointFactor.SelectedValue + "');");
        }
        /// <summary>
        /// 折线图曲线图切换
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        protected void ChartType_SelectedIndexChanged(object sender, EventArgs e)
        {
            HiddenChartType.Value = ChartType.SelectedValue;
            RegisterScript("ChartTypeChanged('" + ChartType.SelectedValue + "');");
        }

        //protected void No_CheckedChanged(object sender, EventArgs e)
        //{
        //    if(No.Checked==true)
        //    {
        //        factorCbxRsm1.Visible = false;
        //        cbFactor.Visible = true;
        //        tbFactor.Visible = false;
        //        PointFactor.Visible = true;
        //        PointChart.Visible = true;
        //        //PointFactor.SelectedValue = "all";
        //        //HiddenPointFactor.Value = "all";
        //    }
        //    else if(IsType.Checked==true)
        //    {
        //        factorCbxRsm1.Visible = false;
        //        cbFactor.Visible = false;
        //        tbFactor.Visible = true;
        //        PointFactor.Visible = true;
        //        PointChart.Visible = true;
        //        //PointFactor.SelectedValue = "all";
        //        //HiddenPointFactor.Value = "all";
        //    }
        //    else if(IsStatistical.Checked==true)
        //    {
        //        factorCbxRsm1.Visible = true;
        //        cbFactor.Visible = false;
        //        tbFactor.Visible = false;
        //        //PointFactor.SelectedValue = "point";
        //        PointFactor.Visible = false;
        //        PointChart.Visible = false;
        //        //HiddenPointFactor.Value = "point";
        //    }
        //}

        protected void TypeNameGroup_SelectedIndexChanged(object sender, EventArgs e)
        {
            if (TypeNameGroup.SelectedValue=="分因子")
            {
                factorCbxRsm1.Visible = true;
                cbFactor.Visible = false;
                tbFactor.Visible = false;
            }
            else if (TypeNameGroup.SelectedValue == "一级类")
            {
                factorCbxRsm1.Visible = false;
                cbFactor.Visible = true;
                tbFactor.Visible = false;
            }
            else if (TypeNameGroup.SelectedValue == "二级类")
            {
                factorCbxRsm1.Visible = false;
                cbFactor.Visible = false;
                tbFactor.Visible = true;
            }
        }

        protected void selCount_SelectedIndexChanged(object sender, EventArgs e)
        {

        }

        #region 页数信息展示
        //public void ShowPage()
        //{
        //    lblShow.Text = "第" + (gridAudit.CurrentPageIndex + 1) + "页/总" + gridAudit.PageCount + "页;每页" + gridAudit.PageSize + "行";

        //    if (gridAudit.CurrentPageIndex == 0)
        //    {
        //        LinkButton1.Enabled = false;
        //        LinkButton2.Enabled = false;
        //    }
        //    else
        //    {
        //        LinkButton1.Enabled = true;
        //        LinkButton2.Enabled = true;
        //    }

        //    if (gridAudit.CurrentPageIndex == (gridAudit.PageCount - 1))
        //    {
        //        LinkButton3.Enabled = false;
        //        LinkButton4.Enabled = false;
        //    }
        //    else
        //    {
        //        LinkButton3.Enabled = true;
        //        LinkButton4.Enabled = true;
        //    }
        //}
        #endregion
        #region 分页
        ////首页
        //protected void LinkButton1_Click(object sender, EventArgs e)
        //{
        //    gridAudit.CurrentPageIndex = 0;
        //    CreateTable(TimeFanWei.FromText.Trim(), TimeFanWei.ToText.Trim());
        //    ShowPage();
        //    //BindGrid();
        //}
        ////上一页
        //protected void LinkButton2_Click(object sender, EventArgs e)
        //{

        //    gridAudit.CurrentPageIndex =
        //              Math.Max(gridAudit.CurrentPageIndex - 1, 0);
        //    CreateTable(TimeFanWei.FromText.Trim(), TimeFanWei.ToText.Trim());
        //    ShowPage();
        //}
        ////下一页
        //protected void LinkButton3_Click(object sender, EventArgs e)
        //{
        //    gridAudit.CurrentPageIndex =
        //           Math.Min(gridAudit.CurrentPageIndex + 1, gridAudit.PageCount - 1);
        //    CreateTable(TimeFanWei.FromText.Trim(), TimeFanWei.ToText.Trim());
        //    ShowPage();
        //}
        ////尾页
        //protected void LinkButton4_Click(object sender, EventArgs e)
        //{
        //    gridAudit.CurrentPageIndex = gridAudit.PageCount - 1;
        //    CreateTable(TimeFanWei.FromText.Trim(), TimeFanWei.ToText.Trim());
        //    ShowPage();
        //}
        #endregion
    }
}