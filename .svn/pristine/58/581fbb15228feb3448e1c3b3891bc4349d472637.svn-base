#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by the ContextGenerator.ttinclude code generation file.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Data;
using System.Linq;
using System.Linq.Expressions;
using System.Data.Common;
using System.Collections.Generic;
using Telerik.OpenAccess;
using Telerik.OpenAccess.Metadata;
using Telerik.OpenAccess.Data.Common;
using Telerik.OpenAccess.Metadata.Fluent;
using Telerik.OpenAccess.Metadata.Fluent.Advanced;
using SmartEP.DomainModel.WaterMonitoringBusiness;
using SmartEP.Core.Interfaces;

namespace SmartEP.DomainModel.WaterMonitoringBusiness
{
    public partial class WaterMonitoringBusinessModel : OpenAccessContext, IWaterMonitoringBusinessModelUnitOfWork, ICustomOrmContext
    {
        private static string connectionStringName = @"AMS_MonitoringBusinessConnection";

        private static BackendConfiguration backend = GetBackendConfiguration();

        private static MetadataSource metadataSource = XmlMetadataSource.FromAssemblyResource("WaterMonitoringBusinessModel.rlinq");

        public WaterMonitoringBusinessModel()
            : base(connectionStringName, backend, metadataSource)
        { }

        public WaterMonitoringBusinessModel(string connection)
            : base(connection, backend, metadataSource)
        { }

        public WaterMonitoringBusinessModel(BackendConfiguration backendConfiguration)
            : base(connectionStringName, backendConfiguration, metadataSource)
        { }

        public WaterMonitoringBusinessModel(string connection, MetadataSource metadataSource)
            : base(connection, backend, metadataSource)
        { }

        public WaterMonitoringBusinessModel(string connection, BackendConfiguration backendConfiguration, MetadataSource metadataSource)
            : base(connection, backendConfiguration, metadataSource)
        { }

        public IQueryable<YearReportEntity> YearReportEntities
        {
            get
            {
                return this.GetAll<YearReportEntity>();
            }
        }

        public IQueryable<WeekReportEntity> WeekReportEntities
        {
            get
            {
                return this.GetAll<WeekReportEntity>();
            }
        }

        public IQueryable<SeasonReportEntity> SeasonReportEntities
        {
            get
            {
                return this.GetAll<SeasonReportEntity>();
            }
        }

        public IQueryable<RealTimeHourEntity> RealTimeHourEntities
        {
            get
            {
                return this.GetAll<RealTimeHourEntity>();
            }
        }

        public IQueryable<MonthReportEntity> MonthReportEntities
        {
            get
            {
                return this.GetAll<MonthReportEntity>();
            }
        }

        public IQueryable<HourReportEntity> HourReportEntities
        {
            get
            {
                return this.GetAll<HourReportEntity>();
            }
        }

        public IQueryable<DayReportEntity> DayReportEntities
        {
            get
            {
                return this.GetAll<DayReportEntity>();
            }
        }

        public IQueryable<CalibrationReportEntity> CalibrationReportEntities
        {
            get
            {
                return this.GetAll<CalibrationReportEntity>();
            }
        }

        public static BackendConfiguration GetBackendConfiguration()
        {
            BackendConfiguration backend = new BackendConfiguration();
            backend.Backend = "MsSql";
            backend.ProviderName = "System.Data.SqlClient";

            CustomizeBackendConfiguration(ref backend);

            return backend;
        }

        /// <summary>
        /// Allows you to customize the BackendConfiguration of WaterMonitoringBusinessModel.
        /// </summary>
        /// <param name="config">The BackendConfiguration of WaterMonitoringBusinessModel.</param>
        static partial void CustomizeBackendConfiguration(ref BackendConfiguration config);

    }

    public interface IWaterMonitoringBusinessModelUnitOfWork : IUnitOfWork
    {
        IQueryable<YearReportEntity> YearReportEntities
        {
            get;
        }
        IQueryable<WeekReportEntity> WeekReportEntities
        {
            get;
        }
        IQueryable<SeasonReportEntity> SeasonReportEntities
        {
            get;
        }
        IQueryable<RealTimeHourEntity> RealTimeHourEntities
        {
            get;
        }
        IQueryable<MonthReportEntity> MonthReportEntities
        {
            get;
        }
        IQueryable<HourReportEntity> HourReportEntities
        {
            get;
        }
        IQueryable<DayReportEntity> DayReportEntities
        {
            get;
        }
        IQueryable<CalibrationReportEntity> CalibrationReportEntities
        {
            get;
        }
    }
}
#pragma warning restore 1591
